/// [Scanner]es6.grammar:
SyntaxKind[LineTerminatorToken](2,1): «line terminator»
SyntaxKind[LineTerminatorToken](3,1): «line terminator»
SyntaxKind[Identifier](3,1): SourceCharacter
SyntaxKind[ColonColonToken](3,17): ::
SyntaxKind[LineTerminatorToken](4,1): «line terminator»
SyntaxKind[IndentToken](4,1): «indent»
SyntaxKind[GreaterThanToken](4,2): >
SyntaxKind[ProseFull](4,4): any Unicode code point
SyntaxKind[LineTerminatorToken](5,1): «line terminator»
SyntaxKind[DedentToken](5,1): «dedent»
SyntaxKind[LineTerminatorToken](6,1): «line terminator»
SyntaxKind[Identifier](6,1): InputElementDiv
SyntaxKind[ColonColonToken](6,17): ::
SyntaxKind[LineTerminatorToken](7,1): «line terminator»
SyntaxKind[IndentToken](7,1): «indent»
SyntaxKind[Identifier](7,2): WhiteSpace
SyntaxKind[LineTerminatorToken](8,1): «line terminator»
SyntaxKind[Identifier](8,2): LineTerminator
SyntaxKind[LineTerminatorToken](9,1): «line terminator»
SyntaxKind[Identifier](9,2): Comment
SyntaxKind[LineTerminatorToken](10,1): «line terminator»
SyntaxKind[Identifier](10,2): CommonToken
SyntaxKind[LineTerminatorToken](11,1): «line terminator»
SyntaxKind[Identifier](11,2): DivPunctuator
SyntaxKind[LineTerminatorToken](12,1): «line terminator»
SyntaxKind[Identifier](12,2): RightBracePunctuator
SyntaxKind[LineTerminatorToken](13,1): «line terminator»
SyntaxKind[DedentToken](13,1): «dedent»
SyntaxKind[LineTerminatorToken](14,1): «line terminator»
SyntaxKind[Identifier](14,1): InputElementRegExp
SyntaxKind[ColonColonToken](14,20): ::
SyntaxKind[LineTerminatorToken](15,1): «line terminator»
SyntaxKind[IndentToken](15,1): «indent»
SyntaxKind[Identifier](15,2): WhiteSpace
SyntaxKind[LineTerminatorToken](16,1): «line terminator»
SyntaxKind[Identifier](16,2): LineTerminator
SyntaxKind[LineTerminatorToken](17,1): «line terminator»
SyntaxKind[Identifier](17,2): Comment
SyntaxKind[LineTerminatorToken](18,1): «line terminator»
SyntaxKind[Identifier](18,2): CommonToken
SyntaxKind[LineTerminatorToken](19,1): «line terminator»
SyntaxKind[Identifier](19,2): RightBracePunctuator
SyntaxKind[LineTerminatorToken](20,1): «line terminator»
SyntaxKind[Identifier](20,2): RegularExpressionLiteral
SyntaxKind[LineTerminatorToken](21,1): «line terminator»
SyntaxKind[DedentToken](21,1): «dedent»
SyntaxKind[LineTerminatorToken](22,1): «line terminator»
SyntaxKind[Identifier](22,1): InputElementRegExpOrTemplateTail
SyntaxKind[ColonColonToken](22,34): ::
SyntaxKind[LineTerminatorToken](23,1): «line terminator»
SyntaxKind[IndentToken](23,1): «indent»
SyntaxKind[Identifier](23,2): WhiteSpace
SyntaxKind[LineTerminatorToken](24,1): «line terminator»
SyntaxKind[Identifier](24,2): LineTerminator
SyntaxKind[LineTerminatorToken](25,1): «line terminator»
SyntaxKind[Identifier](25,2): Comment
SyntaxKind[LineTerminatorToken](26,1): «line terminator»
SyntaxKind[Identifier](26,2): CommonToken
SyntaxKind[LineTerminatorToken](27,1): «line terminator»
SyntaxKind[Identifier](27,2): RegularExpressionLiteral
SyntaxKind[LineTerminatorToken](28,1): «line terminator»
SyntaxKind[Identifier](28,2): TemplateSubstitutionTail
SyntaxKind[LineTerminatorToken](29,1): «line terminator»
SyntaxKind[DedentToken](29,1): «dedent»
SyntaxKind[LineTerminatorToken](30,1): «line terminator»
SyntaxKind[Identifier](30,1): InputElementTemplateTail
SyntaxKind[ColonColonToken](30,26): ::
SyntaxKind[LineTerminatorToken](31,1): «line terminator»
SyntaxKind[IndentToken](31,1): «indent»
SyntaxKind[Identifier](31,2): WhiteSpace
SyntaxKind[LineTerminatorToken](32,1): «line terminator»
SyntaxKind[Identifier](32,2): LineTerminator
SyntaxKind[LineTerminatorToken](33,1): «line terminator»
SyntaxKind[Identifier](33,2): Comment
SyntaxKind[LineTerminatorToken](34,1): «line terminator»
SyntaxKind[Identifier](34,2): CommonToken
SyntaxKind[LineTerminatorToken](35,1): «line terminator»
SyntaxKind[Identifier](35,2): DivPunctuator
SyntaxKind[LineTerminatorToken](36,1): «line terminator»
SyntaxKind[Identifier](36,2): TemplateSubstitutionTail
SyntaxKind[LineTerminatorToken](37,1): «line terminator»
SyntaxKind[DedentToken](37,1): «dedent»
SyntaxKind[LineTerminatorToken](38,1): «line terminator»
SyntaxKind[Identifier](38,1): WhiteSpace
SyntaxKind[ColonColonToken](38,12): ::
SyntaxKind[LineTerminatorToken](39,1): «line terminator»
SyntaxKind[IndentToken](39,1): «indent»
SyntaxKind[UnicodeCharacterLiteral](39,2): <TAB>
SyntaxKind[LineTerminatorToken](40,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](40,2): <VT>
SyntaxKind[LineTerminatorToken](41,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](41,2): <FF>
SyntaxKind[LineTerminatorToken](42,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](42,2): <SP>
SyntaxKind[LineTerminatorToken](43,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](43,2): <NBSP>
SyntaxKind[LineTerminatorToken](44,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](44,2): <ZWNBSP>
SyntaxKind[LineTerminatorToken](45,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](45,2): <USP>
SyntaxKind[LineTerminatorToken](46,1): «line terminator»
SyntaxKind[DedentToken](46,1): «dedent»
SyntaxKind[LineTerminatorToken](47,1): «line terminator»
SyntaxKind[Identifier](47,1): LineTerminator
SyntaxKind[ColonColonToken](47,16): ::
SyntaxKind[LineTerminatorToken](48,1): «line terminator»
SyntaxKind[IndentToken](48,1): «indent»
SyntaxKind[UnicodeCharacterLiteral](48,2): <LF>
SyntaxKind[LineTerminatorToken](49,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](49,2): <CR>
SyntaxKind[LineTerminatorToken](50,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](50,2): <LS>
SyntaxKind[LineTerminatorToken](51,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](51,2): <PS>
SyntaxKind[LineTerminatorToken](52,1): «line terminator»
SyntaxKind[DedentToken](52,1): «dedent»
SyntaxKind[LineTerminatorToken](53,1): «line terminator»
SyntaxKind[Identifier](53,1): LineTerminatorSequence
SyntaxKind[ColonColonToken](53,24): ::
SyntaxKind[LineTerminatorToken](54,1): «line terminator»
SyntaxKind[IndentToken](54,1): «indent»
SyntaxKind[UnicodeCharacterLiteral](54,2): <LF>
SyntaxKind[LineTerminatorToken](55,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](55,2): <CR>
SyntaxKind[OpenBracketToken](55,7): [
SyntaxKind[LookaheadKeyword](55,8): lookahead
SyntaxKind[ExclamationEqualsToken](55,18): !=
SyntaxKind[UnicodeCharacterLiteral](55,21): <LF>
SyntaxKind[CloseBracketToken](55,25): ]
SyntaxKind[LineTerminatorToken](56,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](56,2): <LS>
SyntaxKind[LineTerminatorToken](57,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](57,2): <PS>
SyntaxKind[LineTerminatorToken](58,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](58,2): <CR>
SyntaxKind[UnicodeCharacterLiteral](58,7): <LF>
SyntaxKind[LineTerminatorToken](59,1): «line terminator»
SyntaxKind[DedentToken](59,1): «dedent»
SyntaxKind[LineTerminatorToken](60,1): «line terminator»
SyntaxKind[Identifier](60,1): Comment
SyntaxKind[ColonColonToken](60,9): ::
SyntaxKind[LineTerminatorToken](61,1): «line terminator»
SyntaxKind[IndentToken](61,1): «indent»
SyntaxKind[Identifier](61,2): MultiLineComment
SyntaxKind[LineTerminatorToken](62,1): «line terminator»
SyntaxKind[Identifier](62,2): SingleLineComment
SyntaxKind[LineTerminatorToken](63,1): «line terminator»
SyntaxKind[DedentToken](63,1): «dedent»
SyntaxKind[LineTerminatorToken](64,1): «line terminator»
SyntaxKind[Identifier](64,1): MultiLineComment
SyntaxKind[ColonColonToken](64,18): ::
SyntaxKind[LineTerminatorToken](65,1): «line terminator»
SyntaxKind[IndentToken](65,1): «indent»
SyntaxKind[Terminal](65,2): `/*`
SyntaxKind[Identifier](65,7): MultiLineCommentChars
SyntaxKind[QuestionToken](65,28): ?
SyntaxKind[Terminal](65,30): `*/`
SyntaxKind[LineTerminatorToken](66,1): «line terminator»
SyntaxKind[DedentToken](66,1): «dedent»
SyntaxKind[LineTerminatorToken](67,1): «line terminator»
SyntaxKind[Identifier](67,1): MultiLineCommentChars
SyntaxKind[ColonColonToken](67,23): ::
SyntaxKind[LineTerminatorToken](68,1): «line terminator»
SyntaxKind[IndentToken](68,1): «indent»
SyntaxKind[Identifier](68,2): MultiLineNotAsteriskChar
SyntaxKind[Identifier](68,27): MultiLineCommentChars
SyntaxKind[QuestionToken](68,48): ?
SyntaxKind[LineTerminatorToken](69,1): «line terminator»
SyntaxKind[Terminal](69,2): `*`
SyntaxKind[Identifier](69,6): PostAsteriskCommentChars
SyntaxKind[QuestionToken](69,30): ?
SyntaxKind[LineTerminatorToken](70,1): «line terminator»
SyntaxKind[DedentToken](70,1): «dedent»
SyntaxKind[LineTerminatorToken](71,1): «line terminator»
SyntaxKind[Identifier](71,1): PostAsteriskCommentChars
SyntaxKind[ColonColonToken](71,26): ::
SyntaxKind[LineTerminatorToken](72,1): «line terminator»
SyntaxKind[IndentToken](72,1): «indent»
SyntaxKind[Identifier](72,2): MultiLineNotForwardSlashOrAsteriskChar
SyntaxKind[Identifier](72,41): MultiLineCommentChars
SyntaxKind[QuestionToken](72,62): ?
SyntaxKind[LineTerminatorToken](73,1): «line terminator»
SyntaxKind[Terminal](73,2): `*`
SyntaxKind[Identifier](73,6): PostAsteriskCommentChars
SyntaxKind[QuestionToken](73,30): ?
SyntaxKind[LineTerminatorToken](74,1): «line terminator»
SyntaxKind[DedentToken](74,1): «dedent»
SyntaxKind[LineTerminatorToken](75,1): «line terminator»
SyntaxKind[Identifier](75,1): MultiLineNotAsteriskChar
SyntaxKind[ColonColonToken](75,26): ::
SyntaxKind[LineTerminatorToken](76,1): «line terminator»
SyntaxKind[IndentToken](76,1): «indent»
SyntaxKind[Identifier](76,2): SourceCharacter
SyntaxKind[FirstKeyword](76,18): but
SyntaxKind[NotKeyword](76,22): not
SyntaxKind[Terminal](76,26): `*`
SyntaxKind[LineTerminatorToken](77,1): «line terminator»
SyntaxKind[DedentToken](77,1): «dedent»
SyntaxKind[LineTerminatorToken](78,1): «line terminator»
SyntaxKind[Identifier](78,1): MultiLineNotForwardSlashOrAsteriskChar
SyntaxKind[ColonColonToken](78,40): ::
SyntaxKind[LineTerminatorToken](79,1): «line terminator»
SyntaxKind[IndentToken](79,1): «indent»
SyntaxKind[Identifier](79,2): SourceCharacter
SyntaxKind[FirstKeyword](79,18): but
SyntaxKind[NotKeyword](79,22): not
SyntaxKind[OneKeyword](79,26): one
SyntaxKind[OfKeyword](79,30): of
SyntaxKind[Terminal](79,33): `/`
SyntaxKind[OrKeyword](79,37): or
SyntaxKind[Terminal](79,40): `*`
SyntaxKind[LineTerminatorToken](80,1): «line terminator»
SyntaxKind[DedentToken](80,1): «dedent»
SyntaxKind[LineTerminatorToken](81,1): «line terminator»
SyntaxKind[Identifier](81,1): SingleLineComment
SyntaxKind[ColonColonToken](81,19): ::
SyntaxKind[LineTerminatorToken](82,1): «line terminator»
SyntaxKind[IndentToken](82,1): «indent»
SyntaxKind[Terminal](82,2): `//`
SyntaxKind[Identifier](82,7): SingleLineCommentChars
SyntaxKind[QuestionToken](82,29): ?
SyntaxKind[LineTerminatorToken](83,1): «line terminator»
SyntaxKind[DedentToken](83,1): «dedent»
SyntaxKind[LineTerminatorToken](84,1): «line terminator»
SyntaxKind[Identifier](84,1): SingleLineCommentChars
SyntaxKind[ColonColonToken](84,24): ::
SyntaxKind[LineTerminatorToken](85,1): «line terminator»
SyntaxKind[IndentToken](85,1): «indent»
SyntaxKind[Identifier](85,2): SingleLineCommentChar
SyntaxKind[Identifier](85,24): SingleLineCommentChars
SyntaxKind[QuestionToken](85,46): ?
SyntaxKind[LineTerminatorToken](86,1): «line terminator»
SyntaxKind[DedentToken](86,1): «dedent»
SyntaxKind[LineTerminatorToken](87,1): «line terminator»
SyntaxKind[Identifier](87,1): SingleLineCommentChar
SyntaxKind[ColonColonToken](87,23): ::
SyntaxKind[LineTerminatorToken](88,1): «line terminator»
SyntaxKind[IndentToken](88,1): «indent»
SyntaxKind[Identifier](88,2): SourceCharacter
SyntaxKind[FirstKeyword](88,18): but
SyntaxKind[NotKeyword](88,22): not
SyntaxKind[Identifier](88,26): LineTerminator
SyntaxKind[LineTerminatorToken](89,1): «line terminator»
SyntaxKind[DedentToken](89,1): «dedent»
SyntaxKind[LineTerminatorToken](90,1): «line terminator»
SyntaxKind[Identifier](90,1): CommonToken
SyntaxKind[ColonColonToken](90,13): ::
SyntaxKind[LineTerminatorToken](91,1): «line terminator»
SyntaxKind[IndentToken](91,1): «indent»
SyntaxKind[Identifier](91,2): IdentifierName
SyntaxKind[LineTerminatorToken](92,1): «line terminator»
SyntaxKind[Identifier](92,2): Punctuator
SyntaxKind[LineTerminatorToken](93,1): «line terminator»
SyntaxKind[Identifier](93,2): NumericLiteral
SyntaxKind[LineTerminatorToken](94,1): «line terminator»
SyntaxKind[Identifier](94,2): StringLiteral
SyntaxKind[LineTerminatorToken](95,1): «line terminator»
SyntaxKind[Identifier](95,2): Template
SyntaxKind[LineTerminatorToken](96,1): «line terminator»
SyntaxKind[DedentToken](96,1): «dedent»
SyntaxKind[LineTerminatorToken](97,1): «line terminator»
SyntaxKind[Identifier](97,1): IdentifierName
SyntaxKind[ColonColonToken](97,16): ::
SyntaxKind[LineTerminatorToken](98,1): «line terminator»
SyntaxKind[IndentToken](98,1): «indent»
SyntaxKind[Identifier](98,2): IdentifierStart
SyntaxKind[LineTerminatorToken](99,1): «line terminator»
SyntaxKind[Identifier](99,2): IdentifierName
SyntaxKind[Identifier](99,17): IdentifierPart
SyntaxKind[LineTerminatorToken](100,1): «line terminator»
SyntaxKind[DedentToken](100,1): «dedent»
SyntaxKind[LineTerminatorToken](101,1): «line terminator»
SyntaxKind[Identifier](101,1): IdentifierStart
SyntaxKind[ColonColonToken](101,17): ::
SyntaxKind[LineTerminatorToken](102,1): «line terminator»
SyntaxKind[IndentToken](102,1): «indent»
SyntaxKind[Identifier](102,2): UnicodeIDStart
SyntaxKind[LineTerminatorToken](103,1): «line terminator»
SyntaxKind[Terminal](103,2): `$`
SyntaxKind[LineTerminatorToken](104,1): «line terminator»
SyntaxKind[Terminal](104,2): `_`
SyntaxKind[LineTerminatorToken](105,1): «line terminator»
SyntaxKind[Terminal](105,2): `\`
SyntaxKind[Identifier](105,6): UnicodeEscapeSequence
SyntaxKind[LineTerminatorToken](106,1): «line terminator»
SyntaxKind[DedentToken](106,1): «dedent»
SyntaxKind[LineTerminatorToken](107,1): «line terminator»
SyntaxKind[Identifier](107,1): IdentifierPart
SyntaxKind[ColonColonToken](107,16): ::
SyntaxKind[LineTerminatorToken](108,1): «line terminator»
SyntaxKind[IndentToken](108,1): «indent»
SyntaxKind[Identifier](108,2): UnicodeIDContinue
SyntaxKind[LineTerminatorToken](109,1): «line terminator»
SyntaxKind[Terminal](109,2): `$`
SyntaxKind[LineTerminatorToken](110,1): «line terminator»
SyntaxKind[Terminal](110,2): `_`
SyntaxKind[LineTerminatorToken](111,1): «line terminator»
SyntaxKind[Terminal](111,2): `\`
SyntaxKind[Identifier](111,6): UnicodeEscapeSequence
SyntaxKind[LineTerminatorToken](112,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](112,2): <ZWNJ>
SyntaxKind[LineTerminatorToken](113,1): «line terminator»
SyntaxKind[UnicodeCharacterLiteral](113,2): <ZWJ>
SyntaxKind[LineTerminatorToken](114,1): «line terminator»
SyntaxKind[DedentToken](114,1): «dedent»
SyntaxKind[LineTerminatorToken](115,1): «line terminator»
SyntaxKind[Identifier](115,1): UnicodeIDStart
SyntaxKind[ColonColonToken](115,16): ::
SyntaxKind[LineTerminatorToken](116,1): «line terminator»
SyntaxKind[IndentToken](116,1): «indent»
SyntaxKind[GreaterThanToken](116,2): >
SyntaxKind[ProseFull](116,4): any Unicode code point with the Unicode property "ID_Start" or "Other_ID_Start"
SyntaxKind[LineTerminatorToken](117,1): «line terminator»
SyntaxKind[DedentToken](117,1): «dedent»
SyntaxKind[LineTerminatorToken](118,1): «line terminator»
SyntaxKind[Identifier](118,1): UnicodeIDContinue
SyntaxKind[ColonColonToken](118,19): ::
SyntaxKind[LineTerminatorToken](119,1): «line terminator»
SyntaxKind[IndentToken](119,1): «indent»
SyntaxKind[GreaterThanToken](119,2): >
SyntaxKind[ProseFull](119,4): any Unicode code point with the Unicode property "ID_Continue" or "Other_ID_Continue", or "Other_ID_Start"
SyntaxKind[LineTerminatorToken](120,1): «line terminator»
SyntaxKind[DedentToken](120,1): «dedent»
SyntaxKind[LineTerminatorToken](121,1): «line terminator»
SyntaxKind[Identifier](121,1): ReservedWord
SyntaxKind[ColonColonToken](121,14): ::
SyntaxKind[LineTerminatorToken](122,1): «line terminator»
SyntaxKind[IndentToken](122,1): «indent»
SyntaxKind[Identifier](122,2): Keyword
SyntaxKind[LineTerminatorToken](123,1): «line terminator»
SyntaxKind[Identifier](123,2): FutureReservedWord
SyntaxKind[LineTerminatorToken](124,1): «line terminator»
SyntaxKind[Identifier](124,2): NullLiteral
SyntaxKind[LineTerminatorToken](125,1): «line terminator»
SyntaxKind[Identifier](125,2): BooleanLiteral
SyntaxKind[LineTerminatorToken](126,1): «line terminator»
SyntaxKind[DedentToken](126,1): «dedent»
SyntaxKind[LineTerminatorToken](127,1): «line terminator»
SyntaxKind[Identifier](127,1): Keyword
SyntaxKind[ColonColonToken](127,9): ::
SyntaxKind[OneKeyword](127,12): one
SyntaxKind[OfKeyword](127,16): of
SyntaxKind[LineTerminatorToken](128,1): «line terminator»
SyntaxKind[IndentToken](128,1): «indent»
SyntaxKind[Terminal](128,2): `break`
SyntaxKind[Terminal](128,11): `do`
SyntaxKind[Terminal](128,17): `in`
SyntaxKind[Terminal](128,24): `typeof`
SyntaxKind[LineTerminatorToken](129,1): «line terminator»
SyntaxKind[Terminal](129,2): `case`
SyntaxKind[Terminal](129,10): `else`
SyntaxKind[Terminal](129,18): `instanceof`
SyntaxKind[Terminal](129,31): `var`
SyntaxKind[LineTerminatorToken](130,1): «line terminator»
SyntaxKind[Terminal](130,2): `catch`
SyntaxKind[Terminal](130,11): `export`
SyntaxKind[Terminal](130,20): `new`
SyntaxKind[Terminal](130,28): `void`
SyntaxKind[LineTerminatorToken](131,1): «line terminator»
SyntaxKind[Terminal](131,2): `class`
SyntaxKind[Terminal](131,11): `extends`
SyntaxKind[Terminal](131,21): `return`
SyntaxKind[Terminal](131,31): `while`
SyntaxKind[LineTerminatorToken](132,1): «line terminator»
SyntaxKind[Terminal](132,2): `const`
SyntaxKind[Terminal](132,11): `finally`
SyntaxKind[Terminal](132,21): `super`
SyntaxKind[Terminal](132,31): `with`
SyntaxKind[LineTerminatorToken](133,1): «line terminator»
SyntaxKind[Terminal](133,2): `continue`
SyntaxKind[Terminal](133,13): `for`
SyntaxKind[Terminal](133,20): `switch`
SyntaxKind[Terminal](133,30): `yield`
SyntaxKind[LineTerminatorToken](134,1): «line terminator»
SyntaxKind[Terminal](134,2): `debugger`
SyntaxKind[Terminal](134,13): `function`
SyntaxKind[Terminal](134,24): `this`
SyntaxKind[LineTerminatorToken](135,1): «line terminator»
SyntaxKind[Terminal](135,2): `default`
SyntaxKind[Terminal](135,12): `if`
SyntaxKind[Terminal](135,18): `throw`
SyntaxKind[LineTerminatorToken](136,1): «line terminator»
SyntaxKind[Terminal](136,2): `delete`
SyntaxKind[Terminal](136,11): `import`
SyntaxKind[Terminal](136,20): `try`
SyntaxKind[LineTerminatorToken](137,1): «line terminator»
SyntaxKind[DedentToken](137,1): «dedent»
SyntaxKind[LineTerminatorToken](138,1): «line terminator»
SyntaxKind[Identifier](138,1): FutureReservedWord
SyntaxKind[ColonColonToken](138,20): ::
SyntaxKind[OneKeyword](138,23): one
SyntaxKind[OfKeyword](138,27): of
SyntaxKind[LineTerminatorToken](139,1): «line terminator»
SyntaxKind[IndentToken](139,1): «indent»
SyntaxKind[Terminal](139,2): `enum`
SyntaxKind[LineTerminatorToken](140,1): «line terminator»
SyntaxKind[LineTerminatorToken](141,1): «line terminator»
SyntaxKind[Terminal](141,2): `await`
SyntaxKind[LineTerminatorToken](142,1): «line terminator»
SyntaxKind[LineTerminatorToken](143,1): «line terminator»
SyntaxKind[Terminal](143,2): `implements`
SyntaxKind[Terminal](143,15): `package`
SyntaxKind[Terminal](143,25): `protected`
SyntaxKind[LineTerminatorToken](144,1): «line terminator»
SyntaxKind[Terminal](144,2): `interface`
SyntaxKind[Terminal](144,15): `private`
SyntaxKind[Terminal](144,25): `public`
SyntaxKind[LineTerminatorToken](145,1): «line terminator»
SyntaxKind[DedentToken](145,1): «dedent»
SyntaxKind[LineTerminatorToken](146,1): «line terminator»
SyntaxKind[Identifier](146,1): Punctuator
SyntaxKind[ColonColonToken](146,12): ::
SyntaxKind[OneKeyword](146,15): one
SyntaxKind[OfKeyword](146,19): of
SyntaxKind[LineTerminatorToken](147,1): «line terminator»
SyntaxKind[IndentToken](147,1): «indent»
SyntaxKind[Terminal](147,2): `{`
SyntaxKind[Terminal](147,7): `}`
SyntaxKind[Terminal](147,12): `(`
SyntaxKind[Terminal](147,17): `)`
SyntaxKind[Terminal](147,22): `[`
SyntaxKind[Terminal](147,27): `]`
SyntaxKind[LineTerminatorToken](148,1): «line terminator»
SyntaxKind[Terminal](148,2): `.`
SyntaxKind[Terminal](148,7): `;`
SyntaxKind[Terminal](148,12): `,`
SyntaxKind[Terminal](148,17): `<`
SyntaxKind[Terminal](148,22): `>`
SyntaxKind[Terminal](148,27): `<=`
SyntaxKind[LineTerminatorToken](149,1): «line terminator»
SyntaxKind[Terminal](149,2): `>=`
SyntaxKind[Terminal](149,7): `==`
SyntaxKind[Terminal](149,12): `!=`
SyntaxKind[Terminal](149,17): `===`
SyntaxKind[Terminal](149,23): `!==`
SyntaxKind[LineTerminatorToken](150,1): «line terminator»
SyntaxKind[Terminal](150,2): `+`
SyntaxKind[Terminal](150,7): `-`
SyntaxKind[Terminal](150,12): `*`
SyntaxKind[Terminal](150,17): `%`
SyntaxKind[Terminal](150,22): `++`
SyntaxKind[Terminal](150,27): `--`
SyntaxKind[LineTerminatorToken](151,1): «line terminator»
SyntaxKind[Terminal](151,2): `<<`
SyntaxKind[Terminal](151,7): `>>`
SyntaxKind[Terminal](151,12): `>>>`
SyntaxKind[Terminal](151,18): `&`
SyntaxKind[Terminal](151,23): `|`
SyntaxKind[Terminal](151,28): `^`
SyntaxKind[LineTerminatorToken](152,1): «line terminator»
SyntaxKind[Terminal](152,2): `!`
SyntaxKind[Terminal](152,7): `~`
SyntaxKind[Terminal](152,12): `&&`
SyntaxKind[Terminal](152,17): `||`
SyntaxKind[Terminal](152,22): `?`
SyntaxKind[Terminal](152,27): ` ::`
SyntaxKind[LineTerminatorToken](153,1): «line terminator»
SyntaxKind[Terminal](153,2): `=`
SyntaxKind[Terminal](153,7): `+=`
SyntaxKind[Terminal](153,12): `-=`
SyntaxKind[Terminal](153,17): `*=`
SyntaxKind[Terminal](153,22): `%=`
SyntaxKind[Terminal](153,27): `<<=`
SyntaxKind[LineTerminatorToken](154,1): «line terminator»
SyntaxKind[Terminal](154,2): `>>=`
SyntaxKind[Terminal](154,8): `>>>=`
SyntaxKind[Terminal](154,15): `&=`
SyntaxKind[Terminal](154,20): `|=`
SyntaxKind[Terminal](154,25): `^=`
SyntaxKind[Terminal](154,30): `=>`
SyntaxKind[LineTerminatorToken](155,1): «line terminator»
SyntaxKind[DedentToken](155,1): «dedent»
SyntaxKind[LineTerminatorToken](156,1): «line terminator»
SyntaxKind[Identifier](156,1): DivPunctuator
SyntaxKind[ColonColonToken](156,15): ::
SyntaxKind[OneKeyword](156,18): one
SyntaxKind[OfKeyword](156,22): of
SyntaxKind[LineTerminatorToken](157,1): «line terminator»
SyntaxKind[IndentToken](157,1): «indent»
SyntaxKind[Terminal](157,2): `/`
SyntaxKind[Terminal](157,7): `/=`
SyntaxKind[LineTerminatorToken](158,1): «line terminator»
SyntaxKind[DedentToken](158,1): «dedent»
SyntaxKind[LineTerminatorToken](159,1): «line terminator»
SyntaxKind[Identifier](159,1): RightBracePunctuator
SyntaxKind[ColonColonToken](159,22): ::
SyntaxKind[OneKeyword](159,25): one
SyntaxKind[OfKeyword](159,29): of
SyntaxKind[LineTerminatorToken](160,1): «line terminator»
SyntaxKind[IndentToken](160,1): «indent»
SyntaxKind[Terminal](160,2): `)`
SyntaxKind[LineTerminatorToken](161,1): «line terminator»
SyntaxKind[DedentToken](161,1): «dedent»
SyntaxKind[LineTerminatorToken](162,1): «line terminator»
SyntaxKind[Identifier](162,1): NullLiteral
SyntaxKind[ColonColonToken](162,13): ::
SyntaxKind[LineTerminatorToken](163,1): «line terminator»
SyntaxKind[IndentToken](163,1): «indent»
SyntaxKind[Terminal](163,2): `null`
SyntaxKind[LineTerminatorToken](164,1): «line terminator»
SyntaxKind[DedentToken](164,1): «dedent»
SyntaxKind[LineTerminatorToken](165,1): «line terminator»
SyntaxKind[Identifier](165,1): BooleanLiteral
SyntaxKind[ColonColonToken](165,16): ::
SyntaxKind[LineTerminatorToken](166,1): «line terminator»
SyntaxKind[IndentToken](166,1): «indent»
SyntaxKind[Terminal](166,2): `true`
SyntaxKind[LineTerminatorToken](167,1): «line terminator»
SyntaxKind[Terminal](167,2): `false`
SyntaxKind[LineTerminatorToken](168,1): «line terminator»
SyntaxKind[DedentToken](168,1): «dedent»
SyntaxKind[LineTerminatorToken](169,1): «line terminator»
SyntaxKind[Identifier](169,1): NumericLiteral
SyntaxKind[ColonColonToken](169,16): ::
SyntaxKind[LineTerminatorToken](170,1): «line terminator»
SyntaxKind[IndentToken](170,1): «indent»
SyntaxKind[Identifier](170,2): DecimalLiteral
SyntaxKind[LineTerminatorToken](171,1): «line terminator»
SyntaxKind[Identifier](171,2): BinaryIntegerLiteral
SyntaxKind[LineTerminatorToken](172,1): «line terminator»
SyntaxKind[Identifier](172,2): OctalIntegerLiteral
SyntaxKind[LineTerminatorToken](173,1): «line terminator»
SyntaxKind[Identifier](173,2): HexIntegerLiteral
SyntaxKind[LineTerminatorToken](174,1): «line terminator»
SyntaxKind[DedentToken](174,1): «dedent»
SyntaxKind[LineTerminatorToken](175,1): «line terminator»
SyntaxKind[Identifier](175,1): DecimalLiteral
SyntaxKind[ColonColonToken](175,16): ::
SyntaxKind[LineTerminatorToken](176,1): «line terminator»
SyntaxKind[IndentToken](176,1): «indent»
SyntaxKind[Identifier](176,2): DecimalIntegerLiteral
SyntaxKind[Terminal](176,24): `.`
SyntaxKind[Identifier](176,28): DecimalDigits
SyntaxKind[QuestionToken](176,41): ?
SyntaxKind[Identifier](176,43): ExponentPart
SyntaxKind[QuestionToken](176,55): ?
SyntaxKind[LineTerminatorToken](177,1): «line terminator»
SyntaxKind[Terminal](177,2): `.`
SyntaxKind[Identifier](177,6): DecimalDigits
SyntaxKind[Identifier](177,20): ExponentPart
SyntaxKind[QuestionToken](177,32): ?
SyntaxKind[LineTerminatorToken](178,1): «line terminator»
SyntaxKind[Identifier](178,2): DecimalIntegerLiteral
SyntaxKind[Identifier](178,24): ExponentPart
SyntaxKind[QuestionToken](178,36): ?
SyntaxKind[LineTerminatorToken](179,1): «line terminator»
SyntaxKind[DedentToken](179,1): «dedent»
SyntaxKind[LineTerminatorToken](180,1): «line terminator»
SyntaxKind[Identifier](180,1): DecimalIntegerLiteral
SyntaxKind[ColonColonToken](180,23): ::
SyntaxKind[LineTerminatorToken](181,1): «line terminator»
SyntaxKind[IndentToken](181,1): «indent»
SyntaxKind[Terminal](181,2): `0`
SyntaxKind[LineTerminatorToken](182,1): «line terminator»
SyntaxKind[Identifier](182,2): NonZeroDigit
SyntaxKind[Identifier](182,15): DecimalDigits
SyntaxKind[QuestionToken](182,28): ?
SyntaxKind[LineTerminatorToken](183,1): «line terminator»
SyntaxKind[DedentToken](183,1): «dedent»
SyntaxKind[LineTerminatorToken](184,1): «line terminator»
SyntaxKind[Identifier](184,1): DecimalDigits
SyntaxKind[ColonColonToken](184,15): ::
SyntaxKind[LineTerminatorToken](185,1): «line terminator»
SyntaxKind[IndentToken](185,1): «indent»
SyntaxKind[Identifier](185,2): DecimalDigit
SyntaxKind[LineTerminatorToken](186,1): «line terminator»
SyntaxKind[Identifier](186,2): DecimalDigits
SyntaxKind[Identifier](186,16): DecimalDigit
SyntaxKind[LineTerminatorToken](187,1): «line terminator»
SyntaxKind[DedentToken](187,1): «dedent»
SyntaxKind[LineTerminatorToken](188,1): «line terminator»
SyntaxKind[Identifier](188,1): DecimalDigit
SyntaxKind[ColonColonToken](188,14): ::
SyntaxKind[OneKeyword](188,17): one
SyntaxKind[OfKeyword](188,21): of
SyntaxKind[LineTerminatorToken](189,1): «line terminator»
SyntaxKind[IndentToken](189,1): «indent»
SyntaxKind[Terminal](189,2): `0`
SyntaxKind[Terminal](189,6): `1`
SyntaxKind[Terminal](189,10): `2`
SyntaxKind[Terminal](189,14): `3`
SyntaxKind[Terminal](189,18): `4`
SyntaxKind[Terminal](189,22): `5`
SyntaxKind[Terminal](189,26): `6`
SyntaxKind[Terminal](189,30): `7`
SyntaxKind[Terminal](189,34): `8`
SyntaxKind[Terminal](189,38): `9`
SyntaxKind[LineTerminatorToken](190,1): «line terminator»
SyntaxKind[DedentToken](190,1): «dedent»
SyntaxKind[LineTerminatorToken](191,1): «line terminator»
SyntaxKind[Identifier](191,1): NonZeroDigit
SyntaxKind[ColonColonToken](191,14): ::
SyntaxKind[OneKeyword](191,17): one
SyntaxKind[OfKeyword](191,21): of
SyntaxKind[LineTerminatorToken](192,1): «line terminator»
SyntaxKind[IndentToken](192,1): «indent»
SyntaxKind[Terminal](192,2): `1`
SyntaxKind[Terminal](192,6): `2`
SyntaxKind[Terminal](192,10): `3`
SyntaxKind[Terminal](192,14): `4`
SyntaxKind[Terminal](192,18): `5`
SyntaxKind[Terminal](192,22): `6`
SyntaxKind[Terminal](192,26): `7`
SyntaxKind[Terminal](192,30): `8`
SyntaxKind[Terminal](192,34): `9`
SyntaxKind[LineTerminatorToken](193,1): «line terminator»
SyntaxKind[DedentToken](193,1): «dedent»
SyntaxKind[LineTerminatorToken](194,1): «line terminator»
SyntaxKind[Identifier](194,1): ExponentPart
SyntaxKind[ColonColonToken](194,14): ::
SyntaxKind[LineTerminatorToken](195,1): «line terminator»
SyntaxKind[IndentToken](195,1): «indent»
SyntaxKind[Identifier](195,2): ExponentIndicator
SyntaxKind[Identifier](195,20): SignedInteger
SyntaxKind[LineTerminatorToken](196,1): «line terminator»
SyntaxKind[DedentToken](196,1): «dedent»
SyntaxKind[LineTerminatorToken](197,1): «line terminator»
SyntaxKind[Identifier](197,1): ExponentIndicator
SyntaxKind[ColonColonToken](197,19): ::
SyntaxKind[OneKeyword](197,22): one
SyntaxKind[OfKeyword](197,26): of
SyntaxKind[LineTerminatorToken](198,1): «line terminator»
SyntaxKind[IndentToken](198,1): «indent»
SyntaxKind[Terminal](198,2): `e`
SyntaxKind[Terminal](198,6): `E`
SyntaxKind[LineTerminatorToken](199,1): «line terminator»
SyntaxKind[DedentToken](199,1): «dedent»
SyntaxKind[LineTerminatorToken](200,1): «line terminator»
SyntaxKind[Identifier](200,1): SignedInteger
SyntaxKind[ColonColonToken](200,15): ::
SyntaxKind[LineTerminatorToken](201,1): «line terminator»
SyntaxKind[IndentToken](201,1): «indent»
SyntaxKind[Identifier](201,2): DecimalDigits
SyntaxKind[LineTerminatorToken](202,1): «line terminator»
SyntaxKind[Terminal](202,2): `+`
SyntaxKind[Identifier](202,6): DecimalDigits
SyntaxKind[LineTerminatorToken](203,1): «line terminator»
SyntaxKind[Terminal](203,2): `-`
SyntaxKind[Identifier](203,6): DecimalDigits
SyntaxKind[LineTerminatorToken](204,1): «line terminator»
SyntaxKind[DedentToken](204,1): «dedent»
SyntaxKind[LineTerminatorToken](205,1): «line terminator»
SyntaxKind[Identifier](205,1): BinaryIntegerLiteral
SyntaxKind[ColonColonToken](205,22): ::
SyntaxKind[LineTerminatorToken](206,1): «line terminator»
SyntaxKind[IndentToken](206,1): «indent»
SyntaxKind[Terminal](206,2): `0b`
SyntaxKind[Identifier](206,7): BinaryDigits
SyntaxKind[LineTerminatorToken](207,1): «line terminator»
SyntaxKind[Terminal](207,2): `0B`
SyntaxKind[Identifier](207,7): BinaryDigits
SyntaxKind[LineTerminatorToken](208,1): «line terminator»
SyntaxKind[DedentToken](208,1): «dedent»
SyntaxKind[LineTerminatorToken](209,1): «line terminator»
SyntaxKind[Identifier](209,1): BinaryDigits
SyntaxKind[ColonColonToken](209,14): ::
SyntaxKind[LineTerminatorToken](210,1): «line terminator»
SyntaxKind[IndentToken](210,1): «indent»
SyntaxKind[Identifier](210,2): BinaryDigit
SyntaxKind[LineTerminatorToken](211,1): «line terminator»
SyntaxKind[Identifier](211,2): BinaryDigits
SyntaxKind[Identifier](211,15): BinaryDigit
SyntaxKind[LineTerminatorToken](212,1): «line terminator»
SyntaxKind[DedentToken](212,1): «dedent»
SyntaxKind[LineTerminatorToken](213,1): «line terminator»
SyntaxKind[Identifier](213,1): BinaryDigit
SyntaxKind[ColonColonToken](213,13): ::
SyntaxKind[OneKeyword](213,16): one
SyntaxKind[OfKeyword](213,20): of
SyntaxKind[LineTerminatorToken](214,1): «line terminator»
SyntaxKind[IndentToken](214,1): «indent»
SyntaxKind[Terminal](214,2): `0`
SyntaxKind[Terminal](214,6): `1`
SyntaxKind[LineTerminatorToken](215,1): «line terminator»
SyntaxKind[DedentToken](215,1): «dedent»
SyntaxKind[LineTerminatorToken](216,1): «line terminator»
SyntaxKind[Identifier](216,1): OctalIntegerLiteral
SyntaxKind[ColonColonToken](216,21): ::
SyntaxKind[LineTerminatorToken](217,1): «line terminator»
SyntaxKind[IndentToken](217,1): «indent»
SyntaxKind[Terminal](217,2): `0o`
SyntaxKind[Identifier](217,7): OctalDigits
SyntaxKind[LineTerminatorToken](218,1): «line terminator»
SyntaxKind[Terminal](218,2): `0O`
SyntaxKind[Identifier](218,7): OctalDigits
SyntaxKind[LineTerminatorToken](219,1): «line terminator»
SyntaxKind[DedentToken](219,1): «dedent»
SyntaxKind[LineTerminatorToken](220,1): «line terminator»
SyntaxKind[Identifier](220,1): OctalDigits
SyntaxKind[ColonColonToken](220,13): ::
SyntaxKind[LineTerminatorToken](221,1): «line terminator»
SyntaxKind[IndentToken](221,1): «indent»
SyntaxKind[Identifier](221,2): OctalDigit
SyntaxKind[LineTerminatorToken](222,1): «line terminator»
SyntaxKind[Identifier](222,2): OctalDigits
SyntaxKind[Identifier](222,14): OctalDigit
SyntaxKind[LineTerminatorToken](223,1): «line terminator»
SyntaxKind[DedentToken](223,1): «dedent»
SyntaxKind[LineTerminatorToken](224,1): «line terminator»
SyntaxKind[Identifier](224,1): OctalDigit
SyntaxKind[ColonColonToken](224,12): ::
SyntaxKind[OneKeyword](224,15): one
SyntaxKind[OfKeyword](224,19): of
SyntaxKind[LineTerminatorToken](225,1): «line terminator»
SyntaxKind[IndentToken](225,1): «indent»
SyntaxKind[Terminal](225,2): `0`
SyntaxKind[Terminal](225,6): `1`
SyntaxKind[Terminal](225,10): `2`
SyntaxKind[Terminal](225,14): `3`
SyntaxKind[Terminal](225,18): `4`
SyntaxKind[Terminal](225,22): `5`
SyntaxKind[Terminal](225,26): `6`
SyntaxKind[Terminal](225,30): `7`
SyntaxKind[LineTerminatorToken](226,1): «line terminator»
SyntaxKind[DedentToken](226,1): «dedent»
SyntaxKind[LineTerminatorToken](227,1): «line terminator»
SyntaxKind[Identifier](227,1): HexIntegerLiteral
SyntaxKind[ColonColonToken](227,19): ::
SyntaxKind[LineTerminatorToken](228,1): «line terminator»
SyntaxKind[IndentToken](228,1): «indent»
SyntaxKind[Terminal](228,2): `0x`
SyntaxKind[Identifier](228,7): HexDigits
SyntaxKind[LineTerminatorToken](229,1): «line terminator»
SyntaxKind[Terminal](229,2): `0X`
SyntaxKind[Identifier](229,7): HexDigits
SyntaxKind[LineTerminatorToken](230,1): «line terminator»
SyntaxKind[DedentToken](230,1): «dedent»
SyntaxKind[LineTerminatorToken](231,1): «line terminator»
SyntaxKind[Identifier](231,1): HexDigits
SyntaxKind[ColonColonToken](231,11): ::
SyntaxKind[LineTerminatorToken](232,1): «line terminator»
SyntaxKind[IndentToken](232,1): «indent»
SyntaxKind[Identifier](232,2): HexDigit
SyntaxKind[LineTerminatorToken](233,1): «line terminator»
SyntaxKind[Identifier](233,2): HexDigits
SyntaxKind[Identifier](233,12): HexDigit
SyntaxKind[LineTerminatorToken](234,1): «line terminator»
SyntaxKind[DedentToken](234,1): «dedent»
SyntaxKind[LineTerminatorToken](235,1): «line terminator»
SyntaxKind[Identifier](235,1): HexDigit
SyntaxKind[ColonColonToken](235,10): ::
SyntaxKind[OneKeyword](235,13): one
SyntaxKind[OfKeyword](235,17): of
SyntaxKind[LineTerminatorToken](236,1): «line terminator»
SyntaxKind[IndentToken](236,1): «indent»
SyntaxKind[Terminal](236,2): `0`
SyntaxKind[Terminal](236,6): `1`
SyntaxKind[Terminal](236,10): `2`
SyntaxKind[Terminal](236,14): `3`
SyntaxKind[Terminal](236,18): `4`
SyntaxKind[Terminal](236,22): `5`
SyntaxKind[Terminal](236,26): `6`
SyntaxKind[Terminal](236,30): `7`
SyntaxKind[Terminal](236,34): `8`
SyntaxKind[Terminal](236,38): `9`
SyntaxKind[Terminal](236,42): `a`
SyntaxKind[Terminal](236,46): `b`
SyntaxKind[Terminal](236,50): `c`
SyntaxKind[Terminal](236,54): `d`
SyntaxKind[Terminal](236,58): `e`
SyntaxKind[Terminal](236,62): `f`
SyntaxKind[Terminal](236,66): `A`
SyntaxKind[Terminal](236,70): `B`
SyntaxKind[Terminal](236,74): `C`
SyntaxKind[Terminal](236,78): `D`
SyntaxKind[Terminal](236,82): `E`
SyntaxKind[Terminal](236,86): `F`
SyntaxKind[LineTerminatorToken](237,1): «line terminator»
SyntaxKind[DedentToken](237,1): «dedent»
SyntaxKind[LineTerminatorToken](238,1): «line terminator»
SyntaxKind[Identifier](238,1): StringLiteral
SyntaxKind[ColonColonToken](238,15): ::
SyntaxKind[LineTerminatorToken](239,1): «line terminator»
SyntaxKind[IndentToken](239,1): «indent»
SyntaxKind[Terminal](239,2): `"`
SyntaxKind[Identifier](239,6): DoubleStringCharacters
SyntaxKind[QuestionToken](239,28): ?
SyntaxKind[Terminal](239,30): `"`
SyntaxKind[LineTerminatorToken](240,1): «line terminator»
SyntaxKind[Terminal](240,2): `'`
SyntaxKind[Identifier](240,6): SingleStringCharacters
SyntaxKind[QuestionToken](240,28): ?
SyntaxKind[Terminal](240,30): `'`
SyntaxKind[LineTerminatorToken](241,1): «line terminator»
SyntaxKind[DedentToken](241,1): «dedent»
SyntaxKind[LineTerminatorToken](242,1): «line terminator»
SyntaxKind[Identifier](242,1): DoubleStringCharacters
SyntaxKind[ColonColonToken](242,24): ::
SyntaxKind[LineTerminatorToken](243,1): «line terminator»
SyntaxKind[IndentToken](243,1): «indent»
SyntaxKind[Identifier](243,2): DoubleStringCharacter
SyntaxKind[Identifier](243,24): DoubleStringCharacters
SyntaxKind[QuestionToken](243,46): ?
SyntaxKind[LineTerminatorToken](244,1): «line terminator»
SyntaxKind[DedentToken](244,1): «dedent»
SyntaxKind[LineTerminatorToken](245,1): «line terminator»
SyntaxKind[Identifier](245,1): SingleStringCharacters
SyntaxKind[ColonColonToken](245,24): ::
SyntaxKind[LineTerminatorToken](246,1): «line terminator»
SyntaxKind[IndentToken](246,1): «indent»
SyntaxKind[Identifier](246,2): SingleStringCharacter
SyntaxKind[Identifier](246,24): SingleStringCharacters
SyntaxKind[QuestionToken](246,46): ?
SyntaxKind[LineTerminatorToken](247,1): «line terminator»
SyntaxKind[DedentToken](247,1): «dedent»
SyntaxKind[LineTerminatorToken](248,1): «line terminator»
SyntaxKind[Identifier](248,1): DoubleStringCharacter
SyntaxKind[ColonColonToken](248,23): ::
SyntaxKind[LineTerminatorToken](249,1): «line terminator»
SyntaxKind[IndentToken](249,1): «indent»
SyntaxKind[Identifier](249,2): SourceCharacter
SyntaxKind[FirstKeyword](249,18): but
SyntaxKind[NotKeyword](249,22): not
SyntaxKind[OneKeyword](249,26): one
SyntaxKind[OfKeyword](249,30): of
SyntaxKind[Terminal](249,33): `"`
SyntaxKind[OrKeyword](249,37): or
SyntaxKind[Terminal](249,40): `\`
SyntaxKind[OrKeyword](249,44): or
SyntaxKind[Identifier](249,47): LineTerminator
SyntaxKind[LineTerminatorToken](250,1): «line terminator»
SyntaxKind[Terminal](250,2): `\`
SyntaxKind[Identifier](250,6): EscapeSequence
SyntaxKind[LineTerminatorToken](251,1): «line terminator»
SyntaxKind[Identifier](251,2): LineContinuation
SyntaxKind[LineTerminatorToken](252,1): «line terminator»
SyntaxKind[DedentToken](252,1): «dedent»
SyntaxKind[LineTerminatorToken](253,1): «line terminator»
SyntaxKind[Identifier](253,1): SingleStringCharacter
SyntaxKind[ColonColonToken](253,23): ::
SyntaxKind[LineTerminatorToken](254,1): «line terminator»
SyntaxKind[IndentToken](254,1): «indent»
SyntaxKind[Identifier](254,2): SourceCharacter
SyntaxKind[FirstKeyword](254,18): but
SyntaxKind[NotKeyword](254,22): not
SyntaxKind[OneKeyword](254,26): one
SyntaxKind[OfKeyword](254,30): of
SyntaxKind[Terminal](254,33): `'`
SyntaxKind[OrKeyword](254,37): or
SyntaxKind[Terminal](254,40): `\`
SyntaxKind[OrKeyword](254,44): or
SyntaxKind[Identifier](254,47): LineTerminator
SyntaxKind[LineTerminatorToken](255,1): «line terminator»
SyntaxKind[Terminal](255,2): `\`
SyntaxKind[Identifier](255,6): EscapeSequence
SyntaxKind[LineTerminatorToken](256,1): «line terminator»
SyntaxKind[Identifier](256,2): LineContinuation
SyntaxKind[LineTerminatorToken](257,1): «line terminator»
SyntaxKind[DedentToken](257,1): «dedent»
SyntaxKind[LineTerminatorToken](258,1): «line terminator»
SyntaxKind[Identifier](258,1): LineContinuation
SyntaxKind[ColonColonToken](258,18): ::
SyntaxKind[LineTerminatorToken](259,1): «line terminator»
SyntaxKind[IndentToken](259,1): «indent»
SyntaxKind[Terminal](259,2): `\`
SyntaxKind[Identifier](259,6): LineTerminatorSequence
SyntaxKind[LineTerminatorToken](260,1): «line terminator»
SyntaxKind[DedentToken](260,1): «dedent»
SyntaxKind[LineTerminatorToken](261,1): «line terminator»
SyntaxKind[Identifier](261,1): EscapeSequence
SyntaxKind[ColonColonToken](261,16): ::
SyntaxKind[LineTerminatorToken](262,1): «line terminator»
SyntaxKind[IndentToken](262,1): «indent»
SyntaxKind[Identifier](262,2): CharacterEscapeSequence
SyntaxKind[LineTerminatorToken](263,1): «line terminator»
SyntaxKind[Terminal](263,2): `0`
SyntaxKind[OpenBracketToken](263,6): [
SyntaxKind[LookaheadKeyword](263,7): lookahead
SyntaxKind[ExclamationEqualsToken](263,17): !=
SyntaxKind[Identifier](263,20): DecimalDigit
SyntaxKind[CloseBracketToken](263,32): ]
SyntaxKind[LineTerminatorToken](264,1): «line terminator»
SyntaxKind[Identifier](264,2): HexEscapeSequence
SyntaxKind[LineTerminatorToken](265,1): «line terminator»
SyntaxKind[Identifier](265,2): UnicodeEscapeSequence
SyntaxKind[LineTerminatorToken](266,1): «line terminator»
SyntaxKind[DedentToken](266,1): «dedent»
SyntaxKind[LineTerminatorToken](267,1): «line terminator»
SyntaxKind[Identifier](267,1): CharacterEscapeSequence
SyntaxKind[ColonColonToken](267,25): ::
SyntaxKind[LineTerminatorToken](268,1): «line terminator»
SyntaxKind[IndentToken](268,1): «indent»
SyntaxKind[Identifier](268,2): SingleEscapeCharacter
SyntaxKind[LineTerminatorToken](269,1): «line terminator»
SyntaxKind[Identifier](269,2): NonEscapeCharacter
SyntaxKind[LineTerminatorToken](270,1): «line terminator»
SyntaxKind[DedentToken](270,1): «dedent»
SyntaxKind[LineTerminatorToken](271,1): «line terminator»
SyntaxKind[Identifier](271,1): SingleEscapeCharacter
SyntaxKind[ColonColonToken](271,23): ::
SyntaxKind[OneKeyword](271,26): one
SyntaxKind[OfKeyword](271,30): of
SyntaxKind[LineTerminatorToken](272,1): «line terminator»
SyntaxKind[IndentToken](272,1): «indent»
SyntaxKind[Terminal](272,2): `'`
SyntaxKind[Terminal](272,6): `"`
SyntaxKind[Terminal](272,10): `\`
SyntaxKind[Terminal](272,14): `b`
SyntaxKind[Terminal](272,18): `f`
SyntaxKind[Terminal](272,22): `n`
SyntaxKind[Terminal](272,26): `r`
SyntaxKind[Terminal](272,30): `t`
SyntaxKind[Terminal](272,34): `v`
SyntaxKind[LineTerminatorToken](273,1): «line terminator»
SyntaxKind[DedentToken](273,1): «dedent»
SyntaxKind[LineTerminatorToken](274,1): «line terminator»
SyntaxKind[Identifier](274,1): NonEscapeCharacter
SyntaxKind[ColonColonToken](274,20): ::
SyntaxKind[LineTerminatorToken](275,1): «line terminator»
SyntaxKind[IndentToken](275,1): «indent»
SyntaxKind[Identifier](275,2): SourceCharacter
SyntaxKind[FirstKeyword](275,18): but
SyntaxKind[NotKeyword](275,22): not
SyntaxKind[OneKeyword](275,26): one
SyntaxKind[OfKeyword](275,30): of
SyntaxKind[Identifier](275,33): EscapeCharacter
SyntaxKind[OrKeyword](275,49): or
SyntaxKind[Identifier](275,52): LineTerminator
SyntaxKind[LineTerminatorToken](276,1): «line terminator»
SyntaxKind[DedentToken](276,1): «dedent»
SyntaxKind[LineTerminatorToken](277,1): «line terminator»
SyntaxKind[Identifier](277,1): EscapeCharacter
SyntaxKind[ColonColonToken](277,17): ::
SyntaxKind[LineTerminatorToken](278,1): «line terminator»
SyntaxKind[IndentToken](278,1): «indent»
SyntaxKind[Identifier](278,2): SingleEscapeCharacter
SyntaxKind[LineTerminatorToken](279,1): «line terminator»
SyntaxKind[Identifier](279,2): DecimalDigit
SyntaxKind[LineTerminatorToken](280,1): «line terminator»
SyntaxKind[Terminal](280,2): `x`
SyntaxKind[LineTerminatorToken](281,1): «line terminator»
SyntaxKind[Terminal](281,2): `u`
SyntaxKind[LineTerminatorToken](282,1): «line terminator»
SyntaxKind[DedentToken](282,1): «dedent»
SyntaxKind[LineTerminatorToken](283,1): «line terminator»
SyntaxKind[Identifier](283,1): HexEscapeSequence
SyntaxKind[ColonColonToken](283,19): ::
SyntaxKind[LineTerminatorToken](284,1): «line terminator»
SyntaxKind[IndentToken](284,1): «indent»
SyntaxKind[Terminal](284,2): `x`
SyntaxKind[Identifier](284,6): HexDigit
SyntaxKind[Identifier](284,15): HexDigit
SyntaxKind[LineTerminatorToken](285,1): «line terminator»
SyntaxKind[DedentToken](285,1): «dedent»
SyntaxKind[LineTerminatorToken](286,1): «line terminator»
SyntaxKind[Identifier](286,1): UnicodeEscapeSequence
SyntaxKind[ColonColonToken](286,23): ::
SyntaxKind[LineTerminatorToken](287,1): «line terminator»
SyntaxKind[IndentToken](287,1): «indent»
SyntaxKind[Terminal](287,2): `u`
SyntaxKind[Identifier](287,6): Hex4Digits
SyntaxKind[LineTerminatorToken](288,1): «line terminator»
SyntaxKind[Terminal](288,2): `u{`
SyntaxKind[Identifier](288,7): HexDigits
SyntaxKind[Terminal](288,17): `}`
SyntaxKind[LineTerminatorToken](289,1): «line terminator»
SyntaxKind[DedentToken](289,1): «dedent»
SyntaxKind[LineTerminatorToken](290,1): «line terminator»
SyntaxKind[Identifier](290,1): Hex4Digits
SyntaxKind[ColonColonToken](290,12): ::
SyntaxKind[LineTerminatorToken](291,1): «line terminator»
SyntaxKind[IndentToken](291,1): «indent»
SyntaxKind[Identifier](291,2): HexDigit
SyntaxKind[Identifier](291,11): HexDigit
SyntaxKind[Identifier](291,20): HexDigit
SyntaxKind[Identifier](291,29): HexDigit
SyntaxKind[LineTerminatorToken](292,1): «line terminator»
SyntaxKind[DedentToken](292,1): «dedent»
SyntaxKind[LineTerminatorToken](293,1): «line terminator»
SyntaxKind[Identifier](293,1): RegularExpressionLiteral
SyntaxKind[ColonColonToken](293,26): ::
SyntaxKind[LineTerminatorToken](294,1): «line terminator»
SyntaxKind[IndentToken](294,1): «indent»
SyntaxKind[Terminal](294,2): `/`
SyntaxKind[Identifier](294,6): RegularExpressionBody
SyntaxKind[Terminal](294,28): `/`
SyntaxKind[Identifier](294,32): RegularExpressionFlags
SyntaxKind[LineTerminatorToken](295,1): «line terminator»
SyntaxKind[DedentToken](295,1): «dedent»
SyntaxKind[LineTerminatorToken](296,1): «line terminator»
SyntaxKind[Identifier](296,1): RegularExpressionBody
SyntaxKind[ColonColonToken](296,23): ::
SyntaxKind[LineTerminatorToken](297,1): «line terminator»
SyntaxKind[IndentToken](297,1): «indent»
SyntaxKind[Identifier](297,2): RegularExpressionFirstChar
SyntaxKind[Identifier](297,29): RegularExpressionChars
SyntaxKind[LineTerminatorToken](298,1): «line terminator»
SyntaxKind[DedentToken](298,1): «dedent»
SyntaxKind[LineTerminatorToken](299,1): «line terminator»
SyntaxKind[Identifier](299,1): RegularExpressionChars
SyntaxKind[ColonColonToken](299,24): ::
SyntaxKind[LineTerminatorToken](300,1): «line terminator»
SyntaxKind[IndentToken](300,1): «indent»
SyntaxKind[OpenBracketToken](300,2): [
SyntaxKind[EmptyKeyword](300,3): empty
SyntaxKind[CloseBracketToken](300,8): ]
SyntaxKind[LineTerminatorToken](301,1): «line terminator»
SyntaxKind[Identifier](301,2): RegularExpressionChars
SyntaxKind[Identifier](301,25): RegularExpressionChar
SyntaxKind[LineTerminatorToken](302,1): «line terminator»
SyntaxKind[DedentToken](302,1): «dedent»
SyntaxKind[LineTerminatorToken](303,1): «line terminator»
SyntaxKind[Identifier](303,1): RegularExpressionFirstChar
SyntaxKind[ColonColonToken](303,28): ::
SyntaxKind[LineTerminatorToken](304,1): «line terminator»
SyntaxKind[IndentToken](304,1): «indent»
SyntaxKind[Identifier](304,2): RegularExpressionNonTerminator
SyntaxKind[FirstKeyword](304,33): but
SyntaxKind[NotKeyword](304,37): not
SyntaxKind[OneKeyword](304,41): one
SyntaxKind[OfKeyword](304,45): of
SyntaxKind[Terminal](304,48): `*`
SyntaxKind[OrKeyword](304,52): or
SyntaxKind[Terminal](304,55): `\`
SyntaxKind[OrKeyword](304,59): or
SyntaxKind[Terminal](304,62): `/`
SyntaxKind[OrKeyword](304,66): or
SyntaxKind[Terminal](304,69): `[`
SyntaxKind[LineTerminatorToken](305,1): «line terminator»
SyntaxKind[Identifier](305,2): RegularExpressionBackslashSequence
SyntaxKind[LineTerminatorToken](306,1): «line terminator»
SyntaxKind[Identifier](306,2): RegularExpressionClass
SyntaxKind[LineTerminatorToken](307,1): «line terminator»
SyntaxKind[DedentToken](307,1): «dedent»
SyntaxKind[LineTerminatorToken](308,1): «line terminator»
SyntaxKind[Identifier](308,1): RegularExpressionChar
SyntaxKind[ColonColonToken](308,23): ::
SyntaxKind[LineTerminatorToken](309,1): «line terminator»
SyntaxKind[IndentToken](309,1): «indent»
SyntaxKind[Identifier](309,2): RegularExpressionNonTerminator
SyntaxKind[FirstKeyword](309,33): but
SyntaxKind[NotKeyword](309,37): not
SyntaxKind[OneKeyword](309,41): one
SyntaxKind[OfKeyword](309,45): of
SyntaxKind[Terminal](309,48): `\`
SyntaxKind[OrKeyword](309,52): or
SyntaxKind[Terminal](309,55): `/`
SyntaxKind[OrKeyword](309,59): or
SyntaxKind[Terminal](309,62): `[`
SyntaxKind[LineTerminatorToken](310,1): «line terminator»
SyntaxKind[Identifier](310,2): RegularExpressionBackslashSequence
SyntaxKind[LineTerminatorToken](311,1): «line terminator»
SyntaxKind[Identifier](311,2): RegularExpressionClass
SyntaxKind[LineTerminatorToken](312,1): «line terminator»
SyntaxKind[DedentToken](312,1): «dedent»
SyntaxKind[LineTerminatorToken](313,1): «line terminator»
SyntaxKind[Identifier](313,1): RegularExpressionBackslashSequence
SyntaxKind[ColonColonToken](313,36): ::
SyntaxKind[LineTerminatorToken](314,1): «line terminator»
SyntaxKind[IndentToken](314,1): «indent»
SyntaxKind[Terminal](314,2): `\`
SyntaxKind[Identifier](314,6): RegularExpressionNonTerminator
SyntaxKind[LineTerminatorToken](315,1): «line terminator»
SyntaxKind[DedentToken](315,1): «dedent»
SyntaxKind[LineTerminatorToken](316,1): «line terminator»
SyntaxKind[Identifier](316,1): RegularExpressionNonTerminator
SyntaxKind[ColonColonToken](316,32): ::
SyntaxKind[LineTerminatorToken](317,1): «line terminator»
SyntaxKind[IndentToken](317,1): «indent»
SyntaxKind[Identifier](317,2): SourceCharacter
SyntaxKind[FirstKeyword](317,18): but
SyntaxKind[NotKeyword](317,22): not
SyntaxKind[Identifier](317,26): LineTerminator
SyntaxKind[LineTerminatorToken](318,1): «line terminator»
SyntaxKind[DedentToken](318,1): «dedent»
SyntaxKind[LineTerminatorToken](319,1): «line terminator»
SyntaxKind[Identifier](319,1): RegularExpressionClass
SyntaxKind[ColonColonToken](319,24): ::
SyntaxKind[LineTerminatorToken](320,1): «line terminator»
SyntaxKind[IndentToken](320,1): «indent»
SyntaxKind[Terminal](320,2): `[`
SyntaxKind[Identifier](320,6): RegularExpressionClassChars
SyntaxKind[Terminal](320,34): `]`
SyntaxKind[LineTerminatorToken](321,1): «line terminator»
SyntaxKind[DedentToken](321,1): «dedent»
SyntaxKind[LineTerminatorToken](322,1): «line terminator»
SyntaxKind[Identifier](322,1): RegularExpressionClassChars
SyntaxKind[ColonColonToken](322,29): ::
SyntaxKind[LineTerminatorToken](323,1): «line terminator»
SyntaxKind[IndentToken](323,1): «indent»
SyntaxKind[OpenBracketToken](323,2): [
SyntaxKind[EmptyKeyword](323,3): empty
SyntaxKind[CloseBracketToken](323,8): ]
SyntaxKind[LineTerminatorToken](324,1): «line terminator»
SyntaxKind[Identifier](324,2): RegularExpressionClassChars
SyntaxKind[Identifier](324,30): RegularExpressionClassChar
SyntaxKind[LineTerminatorToken](325,1): «line terminator»
SyntaxKind[DedentToken](325,1): «dedent»
SyntaxKind[LineTerminatorToken](326,1): «line terminator»
SyntaxKind[Identifier](326,1): RegularExpressionClassChar
SyntaxKind[ColonColonToken](326,28): ::
SyntaxKind[LineTerminatorToken](327,1): «line terminator»
SyntaxKind[IndentToken](327,1): «indent»
SyntaxKind[Identifier](327,2): RegularExpressionNonTerminator
SyntaxKind[FirstKeyword](327,33): but
SyntaxKind[NotKeyword](327,37): not
SyntaxKind[OneKeyword](327,41): one
SyntaxKind[OfKeyword](327,45): of
SyntaxKind[Terminal](327,48): `]`
SyntaxKind[OrKeyword](327,52): or
SyntaxKind[Terminal](327,55): `\`
SyntaxKind[LineTerminatorToken](328,1): «line terminator»
SyntaxKind[Identifier](328,2): RegularExpressionBackslashSequence
SyntaxKind[LineTerminatorToken](329,1): «line terminator»
SyntaxKind[DedentToken](329,1): «dedent»
SyntaxKind[LineTerminatorToken](330,1): «line terminator»
SyntaxKind[Identifier](330,1): RegularExpressionFlags
SyntaxKind[ColonColonToken](330,24): ::
SyntaxKind[LineTerminatorToken](331,1): «line terminator»
SyntaxKind[IndentToken](331,1): «indent»
SyntaxKind[OpenBracketToken](331,2): [
SyntaxKind[EmptyKeyword](331,3): empty
SyntaxKind[CloseBracketToken](331,8): ]
SyntaxKind[LineTerminatorToken](332,1): «line terminator»
SyntaxKind[Identifier](332,2): RegularExpressionFlags
SyntaxKind[Identifier](332,25): IdentifierPart
SyntaxKind[LineTerminatorToken](333,1): «line terminator»
SyntaxKind[DedentToken](333,1): «dedent»
SyntaxKind[LineTerminatorToken](334,1): «line terminator»
SyntaxKind[Identifier](334,1): Template
SyntaxKind[ColonColonToken](334,10): ::
SyntaxKind[LineTerminatorToken](335,1): «line terminator»
SyntaxKind[IndentToken](335,1): «indent»
SyntaxKind[Identifier](335,2): NoSubstitutionTemplate
SyntaxKind[LineTerminatorToken](336,1): «line terminator»
SyntaxKind[Identifier](336,2): TemplateHead
SyntaxKind[LineTerminatorToken](337,1): «line terminator»
SyntaxKind[DedentToken](337,1): «dedent»
SyntaxKind[LineTerminatorToken](338,1): «line terminator»
SyntaxKind[Identifier](338,1): NoSubstitutionTemplate
SyntaxKind[ColonColonToken](338,24): ::
SyntaxKind[LineTerminatorToken](339,1): «line terminator»
SyntaxKind[IndentToken](339,1): «indent»
SyntaxKind[Terminal](339,2): ```
SyntaxKind[Identifier](339,6): TemplateCharacters
SyntaxKind[QuestionToken](339,24): ?
SyntaxKind[Terminal](339,26): ```
SyntaxKind[LineTerminatorToken](340,1): «line terminator»
SyntaxKind[DedentToken](340,1): «dedent»
SyntaxKind[LineTerminatorToken](341,1): «line terminator»
SyntaxKind[Identifier](341,1): TemplateHead
SyntaxKind[ColonColonToken](341,14): ::
SyntaxKind[LineTerminatorToken](342,1): «line terminator»
SyntaxKind[IndentToken](342,1): «indent»
SyntaxKind[Terminal](342,2): ```
SyntaxKind[Identifier](342,6): TemplateCharacters
SyntaxKind[QuestionToken](342,24): ?
SyntaxKind[Terminal](342,26): `${`
SyntaxKind[LineTerminatorToken](343,1): «line terminator»
SyntaxKind[DedentToken](343,1): «dedent»
SyntaxKind[LineTerminatorToken](344,1): «line terminator»
SyntaxKind[Identifier](344,1): TemplateSubstitutionTail
SyntaxKind[ColonColonToken](344,26): ::
SyntaxKind[LineTerminatorToken](345,1): «line terminator»
SyntaxKind[IndentToken](345,1): «indent»
SyntaxKind[Identifier](345,2): TemplateMiddle
SyntaxKind[LineTerminatorToken](346,1): «line terminator»
SyntaxKind[Identifier](346,2): TemplateTail
SyntaxKind[LineTerminatorToken](347,1): «line terminator»
SyntaxKind[DedentToken](347,1): «dedent»
SyntaxKind[LineTerminatorToken](348,1): «line terminator»
SyntaxKind[Identifier](348,1): TemplateMiddle
SyntaxKind[ColonColonToken](348,16): ::
SyntaxKind[LineTerminatorToken](349,1): «line terminator»
SyntaxKind[IndentToken](349,1): «indent»
SyntaxKind[Terminal](349,2): `}`
SyntaxKind[Identifier](349,6): TemplateCharacters
SyntaxKind[QuestionToken](349,24): ?
SyntaxKind[Terminal](349,26): `${`
SyntaxKind[LineTerminatorToken](350,1): «line terminator»
SyntaxKind[DedentToken](350,1): «dedent»
SyntaxKind[LineTerminatorToken](351,1): «line terminator»
SyntaxKind[Identifier](351,1): TemplateTail
SyntaxKind[ColonColonToken](351,14): ::
SyntaxKind[LineTerminatorToken](352,1): «line terminator»
SyntaxKind[IndentToken](352,1): «indent»
SyntaxKind[Terminal](352,2): `}`
SyntaxKind[Identifier](352,6): TemplateCharacters
SyntaxKind[QuestionToken](352,24): ?
SyntaxKind[Terminal](352,26): ```
SyntaxKind[LineTerminatorToken](353,1): «line terminator»
SyntaxKind[DedentToken](353,1): «dedent»
SyntaxKind[LineTerminatorToken](354,1): «line terminator»
SyntaxKind[Identifier](354,1): TemplateCharacters
SyntaxKind[ColonColonToken](354,20): ::
SyntaxKind[LineTerminatorToken](355,1): «line terminator»
SyntaxKind[IndentToken](355,1): «indent»
SyntaxKind[Identifier](355,2): TemplateCharacter
SyntaxKind[Identifier](355,20): TemplateCharacters
SyntaxKind[QuestionToken](355,38): ?
SyntaxKind[LineTerminatorToken](356,1): «line terminator»
SyntaxKind[DedentToken](356,1): «dedent»
SyntaxKind[LineTerminatorToken](357,1): «line terminator»
SyntaxKind[Identifier](357,1): TemplateCharacter
SyntaxKind[ColonColonToken](357,19): ::
SyntaxKind[LineTerminatorToken](358,1): «line terminator»
SyntaxKind[IndentToken](358,1): «indent»
SyntaxKind[Terminal](358,2): `$`
SyntaxKind[OpenBracketToken](358,6): [
SyntaxKind[LookaheadKeyword](358,7): lookahead
SyntaxKind[ExclamationEqualsToken](358,17): !=
SyntaxKind[Terminal](358,20): `{`
SyntaxKind[CloseBracketToken](358,24): ]
SyntaxKind[LineTerminatorToken](359,1): «line terminator»
SyntaxKind[Terminal](359,2): `\`
SyntaxKind[Identifier](359,6): EscapeSequence
SyntaxKind[LineTerminatorToken](360,1): «line terminator»
SyntaxKind[Identifier](360,2): LineContinuation
SyntaxKind[LineTerminatorToken](361,1): «line terminator»
SyntaxKind[Identifier](361,2): LineTerminatorSequence
SyntaxKind[LineTerminatorToken](362,1): «line terminator»
SyntaxKind[Identifier](362,2): SourceCharacter
SyntaxKind[FirstKeyword](362,18): but
SyntaxKind[NotKeyword](362,22): not
SyntaxKind[OneKeyword](362,26): one
SyntaxKind[OfKeyword](362,30): of
SyntaxKind[Terminal](362,33): ```
SyntaxKind[OrKeyword](362,37): or
SyntaxKind[Terminal](362,40): `\`
SyntaxKind[OrKeyword](362,44): or
SyntaxKind[Terminal](362,47): `$`
SyntaxKind[OrKeyword](362,51): or
SyntaxKind[Identifier](362,54): LineTerminator
SyntaxKind[LineTerminatorToken](363,1): «line terminator»
SyntaxKind[DedentToken](363,1): «dedent»
SyntaxKind[LineTerminatorToken](364,1): «line terminator»
SyntaxKind[LineTerminatorToken](365,1): «line terminator»
SyntaxKind[Identifier](365,1): IdentifierReference
SyntaxKind[OpenBracketToken](365,20): [
SyntaxKind[Identifier](365,21): Yield
SyntaxKind[CloseBracketToken](365,26): ]
SyntaxKind[ColonToken](365,28): :
SyntaxKind[LineTerminatorToken](366,1): «line terminator»
SyntaxKind[IndentToken](366,1): «indent»
SyntaxKind[Identifier](366,2): Identifier
SyntaxKind[LineTerminatorToken](367,1): «line terminator»
SyntaxKind[OpenBracketToken](367,2): [
SyntaxKind[TildeToken](367,3): ~
SyntaxKind[Identifier](367,4): Yield
SyntaxKind[CloseBracketToken](367,9): ]
SyntaxKind[Terminal](367,11): `yield`
SyntaxKind[LineTerminatorToken](368,1): «line terminator»
SyntaxKind[DedentToken](368,1): «dedent»
SyntaxKind[LineTerminatorToken](369,1): «line terminator»
SyntaxKind[Identifier](369,1): BindingIdentifier
SyntaxKind[OpenBracketToken](369,18): [
SyntaxKind[Identifier](369,19): Yield
SyntaxKind[CloseBracketToken](369,24): ]
SyntaxKind[ColonToken](369,26): :
SyntaxKind[LineTerminatorToken](370,1): «line terminator»
SyntaxKind[IndentToken](370,1): «indent»
SyntaxKind[Identifier](370,2): Identifier
SyntaxKind[LineTerminatorToken](371,1): «line terminator»
SyntaxKind[OpenBracketToken](371,2): [
SyntaxKind[TildeToken](371,3): ~
SyntaxKind[Identifier](371,4): Yield
SyntaxKind[CloseBracketToken](371,9): ]
SyntaxKind[Terminal](371,11): `yield`
SyntaxKind[LineTerminatorToken](372,1): «line terminator»
SyntaxKind[DedentToken](372,1): «dedent»
SyntaxKind[LineTerminatorToken](373,1): «line terminator»
SyntaxKind[Identifier](373,1): LabelIdentifier
SyntaxKind[OpenBracketToken](373,16): [
SyntaxKind[Identifier](373,17): Yield
SyntaxKind[CloseBracketToken](373,22): ]
SyntaxKind[ColonToken](373,24): :
SyntaxKind[LineTerminatorToken](374,1): «line terminator»
SyntaxKind[IndentToken](374,1): «indent»
SyntaxKind[Identifier](374,2): Identifier
SyntaxKind[LineTerminatorToken](375,1): «line terminator»
SyntaxKind[OpenBracketToken](375,2): [
SyntaxKind[TildeToken](375,3): ~
SyntaxKind[Identifier](375,4): Yield
SyntaxKind[CloseBracketToken](375,9): ]
SyntaxKind[Terminal](375,11): `yield`
SyntaxKind[LineTerminatorToken](376,1): «line terminator»
SyntaxKind[DedentToken](376,1): «dedent»
SyntaxKind[LineTerminatorToken](377,1): «line terminator»
SyntaxKind[Identifier](377,1): Identifier
SyntaxKind[ColonToken](377,12): :
SyntaxKind[LineTerminatorToken](378,1): «line terminator»
SyntaxKind[IndentToken](378,1): «indent»
SyntaxKind[Identifier](378,2): IdentifierName
SyntaxKind[FirstKeyword](378,17): but
SyntaxKind[NotKeyword](378,21): not
SyntaxKind[Identifier](378,25): ReservedWord
SyntaxKind[LineTerminatorToken](379,1): «line terminator»
SyntaxKind[DedentToken](379,1): «dedent»
SyntaxKind[LineTerminatorToken](380,1): «line terminator»
SyntaxKind[Identifier](380,1): PrimaryExpression
SyntaxKind[OpenBracketToken](380,18): [
SyntaxKind[Identifier](380,19): Yield
SyntaxKind[CloseBracketToken](380,24): ]
SyntaxKind[ColonToken](380,26): :
SyntaxKind[LineTerminatorToken](381,1): «line terminator»
SyntaxKind[IndentToken](381,1): «indent»
SyntaxKind[Terminal](381,2): `this`
SyntaxKind[LineTerminatorToken](382,1): «line terminator»
SyntaxKind[Identifier](382,2): IdentifierReference
SyntaxKind[OpenBracketToken](382,21): [
SyntaxKind[QuestionToken](382,22): ?
SyntaxKind[Identifier](382,23): Yield
SyntaxKind[CloseBracketToken](382,28): ]
SyntaxKind[LineTerminatorToken](383,1): «line terminator»
SyntaxKind[Identifier](383,2): Literal
SyntaxKind[LineTerminatorToken](384,1): «line terminator»
SyntaxKind[Identifier](384,2): ArrayLiteral
SyntaxKind[OpenBracketToken](384,14): [
SyntaxKind[QuestionToken](384,15): ?
SyntaxKind[Identifier](384,16): Yield
SyntaxKind[CloseBracketToken](384,21): ]
SyntaxKind[LineTerminatorToken](385,1): «line terminator»
SyntaxKind[Identifier](385,2): ObjectLiteral
SyntaxKind[OpenBracketToken](385,15): [
SyntaxKind[QuestionToken](385,16): ?
SyntaxKind[Identifier](385,17): Yield
SyntaxKind[CloseBracketToken](385,22): ]
SyntaxKind[LineTerminatorToken](386,1): «line terminator»
SyntaxKind[Identifier](386,2): FunctionExpression
SyntaxKind[LineTerminatorToken](387,1): «line terminator»
SyntaxKind[Identifier](387,2): ClassExpression
SyntaxKind[OpenBracketToken](387,17): [
SyntaxKind[QuestionToken](387,18): ?
SyntaxKind[Identifier](387,19): Yield
SyntaxKind[CloseBracketToken](387,24): ]
SyntaxKind[LineTerminatorToken](388,1): «line terminator»
SyntaxKind[Identifier](388,2): GeneratorExpression
SyntaxKind[LineTerminatorToken](389,1): «line terminator»
SyntaxKind[Identifier](389,2): RegularExpressionLiteral
SyntaxKind[LineTerminatorToken](390,1): «line terminator»
SyntaxKind[Identifier](390,2): TemplateLiteral
SyntaxKind[OpenBracketToken](390,17): [
SyntaxKind[QuestionToken](390,18): ?
SyntaxKind[Identifier](390,19): Yield
SyntaxKind[CloseBracketToken](390,24): ]
SyntaxKind[LineTerminatorToken](391,1): «line terminator»
SyntaxKind[Identifier](391,2): CoverParenthesizedExpressionAndArrowParameterList
SyntaxKind[OpenBracketToken](391,51): [
SyntaxKind[QuestionToken](391,52): ?
SyntaxKind[Identifier](391,53): Yield
SyntaxKind[CloseBracketToken](391,58): ]
SyntaxKind[LineTerminatorToken](392,1): «line terminator»
SyntaxKind[DedentToken](392,1): «dedent»
SyntaxKind[LineTerminatorToken](393,1): «line terminator»
SyntaxKind[Identifier](393,1): CoverParenthesizedExpressionAndArrowParameterList
SyntaxKind[OpenBracketToken](393,50): [
SyntaxKind[Identifier](393,51): Yield
SyntaxKind[CloseBracketToken](393,56): ]
SyntaxKind[ColonToken](393,58): :
SyntaxKind[LineTerminatorToken](394,1): «line terminator»
SyntaxKind[IndentToken](394,1): «indent»
SyntaxKind[Terminal](394,2): `(`
SyntaxKind[Identifier](394,6): Expression
SyntaxKind[OpenBracketToken](394,16): [
SyntaxKind[PlusToken](394,17): +
SyntaxKind[Identifier](394,18): In
SyntaxKind[CommaToken](394,20): ,
SyntaxKind[QuestionToken](394,22): ?
SyntaxKind[Identifier](394,23): Yield
SyntaxKind[CloseBracketToken](394,28): ]
SyntaxKind[Terminal](394,30): `)`
SyntaxKind[LineTerminatorToken](395,1): «line terminator»
SyntaxKind[Terminal](395,2): `(`
SyntaxKind[Terminal](395,6): `)`
SyntaxKind[LineTerminatorToken](396,1): «line terminator»
SyntaxKind[Terminal](396,2): `(`
SyntaxKind[Terminal](396,6): `...`
SyntaxKind[Identifier](396,12): BindingIdentifier
SyntaxKind[OpenBracketToken](396,29): [
SyntaxKind[QuestionToken](396,30): ?
SyntaxKind[Identifier](396,31): Yield
SyntaxKind[CloseBracketToken](396,36): ]
SyntaxKind[Terminal](396,38): `)`
SyntaxKind[LineTerminatorToken](397,1): «line terminator»
SyntaxKind[Terminal](397,2): `(`
SyntaxKind[Identifier](397,6): Expression
SyntaxKind[OpenBracketToken](397,16): [
SyntaxKind[PlusToken](397,17): +
SyntaxKind[Identifier](397,18): In
SyntaxKind[CommaToken](397,20): ,
SyntaxKind[QuestionToken](397,22): ?
SyntaxKind[Identifier](397,23): Yield
SyntaxKind[CloseBracketToken](397,28): ]
SyntaxKind[Terminal](397,30): `,`
SyntaxKind[Terminal](397,34): `...`
SyntaxKind[Identifier](397,40): BindingIdentifier
SyntaxKind[OpenBracketToken](397,57): [
SyntaxKind[QuestionToken](397,58): ?
SyntaxKind[Identifier](397,59): Yield
SyntaxKind[CloseBracketToken](397,64): ]
SyntaxKind[Terminal](397,66): `)`
SyntaxKind[LineTerminatorToken](398,1): «line terminator»
SyntaxKind[DedentToken](398,1): «dedent»
SyntaxKind[LineTerminatorToken](399,1): «line terminator»
SyntaxKind[Identifier](399,1): Literal
SyntaxKind[ColonToken](399,9): :
SyntaxKind[LineTerminatorToken](400,1): «line terminator»
SyntaxKind[IndentToken](400,1): «indent»
SyntaxKind[Identifier](400,2): NullLiteral
SyntaxKind[LineTerminatorToken](401,1): «line terminator»
SyntaxKind[Identifier](401,2): BooleanLiteral
SyntaxKind[LineTerminatorToken](402,1): «line terminator»
SyntaxKind[Identifier](402,2): NumericLiteral
SyntaxKind[LineTerminatorToken](403,1): «line terminator»
SyntaxKind[Identifier](403,2): StringLiteral
SyntaxKind[LineTerminatorToken](404,1): «line terminator»
SyntaxKind[DedentToken](404,1): «dedent»
SyntaxKind[LineTerminatorToken](405,1): «line terminator»
SyntaxKind[Identifier](405,1): ArrayLiteral
SyntaxKind[OpenBracketToken](405,13): [
SyntaxKind[Identifier](405,14): Yield
SyntaxKind[CloseBracketToken](405,19): ]
SyntaxKind[ColonToken](405,21): :
SyntaxKind[LineTerminatorToken](406,1): «line terminator»
SyntaxKind[IndentToken](406,1): «indent»
SyntaxKind[Terminal](406,2): `[`
SyntaxKind[Identifier](406,6): Elision
SyntaxKind[QuestionToken](406,13): ?
SyntaxKind[Terminal](406,15): `]`
SyntaxKind[LineTerminatorToken](407,1): «line terminator»
SyntaxKind[Terminal](407,2): `[`
SyntaxKind[Identifier](407,6): ElementList
SyntaxKind[OpenBracketToken](407,17): [
SyntaxKind[QuestionToken](407,18): ?
SyntaxKind[Identifier](407,19): Yield
SyntaxKind[CloseBracketToken](407,24): ]
SyntaxKind[Terminal](407,26): `]`
SyntaxKind[LineTerminatorToken](408,1): «line terminator»
SyntaxKind[Terminal](408,2): `[`
SyntaxKind[Identifier](408,6): ElementList
SyntaxKind[OpenBracketToken](408,17): [
SyntaxKind[QuestionToken](408,18): ?
SyntaxKind[Identifier](408,19): Yield
SyntaxKind[CloseBracketToken](408,24): ]
SyntaxKind[Terminal](408,26): `,`
SyntaxKind[Identifier](408,30): Elision
SyntaxKind[QuestionToken](408,37): ?
SyntaxKind[Terminal](408,39): `]`
SyntaxKind[LineTerminatorToken](409,1): «line terminator»
SyntaxKind[DedentToken](409,1): «dedent»
SyntaxKind[LineTerminatorToken](410,1): «line terminator»
SyntaxKind[Identifier](410,1): ElementList
SyntaxKind[OpenBracketToken](410,12): [
SyntaxKind[Identifier](410,13): Yield
SyntaxKind[CloseBracketToken](410,18): ]
SyntaxKind[ColonToken](410,20): :
SyntaxKind[LineTerminatorToken](411,1): «line terminator»
SyntaxKind[IndentToken](411,1): «indent»
SyntaxKind[Identifier](411,2): Elision
SyntaxKind[QuestionToken](411,9): ?
SyntaxKind[Identifier](411,11): AssignmentExpression
SyntaxKind[OpenBracketToken](411,31): [
SyntaxKind[Identifier](411,32): In
SyntaxKind[CommaToken](411,34): ,
SyntaxKind[QuestionToken](411,36): ?
SyntaxKind[Identifier](411,37): Yield
SyntaxKind[CloseBracketToken](411,42): ]
SyntaxKind[LineTerminatorToken](412,1): «line terminator»
SyntaxKind[Identifier](412,2): Elision
SyntaxKind[QuestionToken](412,9): ?
SyntaxKind[Identifier](412,11): SpreadElement
SyntaxKind[OpenBracketToken](412,24): [
SyntaxKind[QuestionToken](412,25): ?
SyntaxKind[Identifier](412,26): Yield
SyntaxKind[CloseBracketToken](412,31): ]
SyntaxKind[LineTerminatorToken](413,1): «line terminator»
SyntaxKind[Identifier](413,2): ElementList
SyntaxKind[OpenBracketToken](413,13): [
SyntaxKind[QuestionToken](413,14): ?
SyntaxKind[Identifier](413,15): Yield
SyntaxKind[CloseBracketToken](413,20): ]
SyntaxKind[Terminal](413,22): `,`
SyntaxKind[Identifier](413,26): Elision
SyntaxKind[QuestionToken](413,33): ?
SyntaxKind[Identifier](413,35): AssignmentExpression
SyntaxKind[OpenBracketToken](413,55): [
SyntaxKind[Identifier](413,56): In
SyntaxKind[CommaToken](413,58): ,
SyntaxKind[QuestionToken](413,60): ?
SyntaxKind[Identifier](413,61): Yield
SyntaxKind[CloseBracketToken](413,66): ]
SyntaxKind[LineTerminatorToken](414,1): «line terminator»
SyntaxKind[Identifier](414,2): ElementList
SyntaxKind[OpenBracketToken](414,13): [
SyntaxKind[QuestionToken](414,14): ?
SyntaxKind[Identifier](414,15): Yield
SyntaxKind[CloseBracketToken](414,20): ]
SyntaxKind[Terminal](414,22): `,`
SyntaxKind[Identifier](414,26): Elision
SyntaxKind[QuestionToken](414,33): ?
SyntaxKind[Identifier](414,35): SpreadElement
SyntaxKind[OpenBracketToken](414,48): [
SyntaxKind[QuestionToken](414,49): ?
SyntaxKind[Identifier](414,50): Yield
SyntaxKind[CloseBracketToken](414,55): ]
SyntaxKind[LineTerminatorToken](415,1): «line terminator»
SyntaxKind[DedentToken](415,1): «dedent»
SyntaxKind[LineTerminatorToken](416,1): «line terminator»
SyntaxKind[Identifier](416,1): Elision
SyntaxKind[ColonToken](416,9): :
SyntaxKind[LineTerminatorToken](417,1): «line terminator»
SyntaxKind[IndentToken](417,1): «indent»
SyntaxKind[Terminal](417,2): `,`
SyntaxKind[LineTerminatorToken](418,1): «line terminator»
SyntaxKind[Identifier](418,2): Elision
SyntaxKind[Terminal](418,10): `,`
SyntaxKind[LineTerminatorToken](419,1): «line terminator»
SyntaxKind[DedentToken](419,1): «dedent»
SyntaxKind[LineTerminatorToken](420,1): «line terminator»
SyntaxKind[Identifier](420,1): SpreadElement
SyntaxKind[OpenBracketToken](420,14): [
SyntaxKind[Identifier](420,15): Yield
SyntaxKind[CloseBracketToken](420,20): ]
SyntaxKind[ColonToken](420,22): :
SyntaxKind[LineTerminatorToken](421,1): «line terminator»
SyntaxKind[IndentToken](421,1): «indent»
SyntaxKind[Terminal](421,2): `...`
SyntaxKind[Identifier](421,8): AssignmentExpression
SyntaxKind[OpenBracketToken](421,28): [
SyntaxKind[Identifier](421,29): In
SyntaxKind[CommaToken](421,31): ,
SyntaxKind[QuestionToken](421,33): ?
SyntaxKind[Identifier](421,34): Yield
SyntaxKind[CloseBracketToken](421,39): ]
SyntaxKind[LineTerminatorToken](422,1): «line terminator»
SyntaxKind[DedentToken](422,1): «dedent»
SyntaxKind[LineTerminatorToken](423,1): «line terminator»
SyntaxKind[Identifier](423,1): ObjectLiteral
SyntaxKind[OpenBracketToken](423,14): [
SyntaxKind[Identifier](423,15): Yield
SyntaxKind[CloseBracketToken](423,20): ]
SyntaxKind[ColonToken](423,22): :
SyntaxKind[LineTerminatorToken](424,1): «line terminator»
SyntaxKind[IndentToken](424,1): «indent»
SyntaxKind[Terminal](424,2): `{`
SyntaxKind[Terminal](424,6): `}`
SyntaxKind[LineTerminatorToken](425,1): «line terminator»
SyntaxKind[Terminal](425,2): `{`
SyntaxKind[Identifier](425,6): PropertyDefinitionList
SyntaxKind[OpenBracketToken](425,28): [
SyntaxKind[QuestionToken](425,29): ?
SyntaxKind[Identifier](425,30): Yield
SyntaxKind[CloseBracketToken](425,35): ]
SyntaxKind[Terminal](425,37): `}`
SyntaxKind[LineTerminatorToken](426,1): «line terminator»
SyntaxKind[Terminal](426,2): `{`
SyntaxKind[Identifier](426,6): PropertyDefinitionList
SyntaxKind[OpenBracketToken](426,28): [
SyntaxKind[QuestionToken](426,29): ?
SyntaxKind[Identifier](426,30): Yield
SyntaxKind[CloseBracketToken](426,35): ]
SyntaxKind[Terminal](426,37): `,`
SyntaxKind[Terminal](426,41): `}`
SyntaxKind[LineTerminatorToken](427,1): «line terminator»
SyntaxKind[DedentToken](427,1): «dedent»
SyntaxKind[LineTerminatorToken](428,1): «line terminator»
SyntaxKind[Identifier](428,1): PropertyDefinitionList
SyntaxKind[OpenBracketToken](428,23): [
SyntaxKind[Identifier](428,24): Yield
SyntaxKind[CloseBracketToken](428,29): ]
SyntaxKind[ColonToken](428,31): :
SyntaxKind[LineTerminatorToken](429,1): «line terminator»
SyntaxKind[IndentToken](429,1): «indent»
SyntaxKind[Identifier](429,2): PropertyDefinition
SyntaxKind[OpenBracketToken](429,20): [
SyntaxKind[QuestionToken](429,21): ?
SyntaxKind[Identifier](429,22): Yield
SyntaxKind[CloseBracketToken](429,27): ]
SyntaxKind[LineTerminatorToken](430,1): «line terminator»
SyntaxKind[Identifier](430,2): PropertyDefinitionList
SyntaxKind[OpenBracketToken](430,24): [
SyntaxKind[QuestionToken](430,25): ?
SyntaxKind[Identifier](430,26): Yield
SyntaxKind[CloseBracketToken](430,31): ]
SyntaxKind[Terminal](430,33): `,`
SyntaxKind[Identifier](430,37): PropertyDefinition
SyntaxKind[OpenBracketToken](430,55): [
SyntaxKind[QuestionToken](430,56): ?
SyntaxKind[Identifier](430,57): Yield
SyntaxKind[CloseBracketToken](430,62): ]
SyntaxKind[LineTerminatorToken](431,1): «line terminator»
SyntaxKind[DedentToken](431,1): «dedent»
SyntaxKind[LineTerminatorToken](432,1): «line terminator»
SyntaxKind[Identifier](432,1): PropertyDefinition
SyntaxKind[OpenBracketToken](432,19): [
SyntaxKind[Identifier](432,20): Yield
SyntaxKind[CloseBracketToken](432,25): ]
SyntaxKind[ColonToken](432,27): :
SyntaxKind[LineTerminatorToken](433,1): «line terminator»
SyntaxKind[IndentToken](433,1): «indent»
SyntaxKind[Identifier](433,2): IdentifierReference
SyntaxKind[OpenBracketToken](433,21): [
SyntaxKind[QuestionToken](433,22): ?
SyntaxKind[Identifier](433,23): Yield
SyntaxKind[CloseBracketToken](433,28): ]
SyntaxKind[LineTerminatorToken](434,1): «line terminator»
SyntaxKind[Identifier](434,2): CoverInitializedName
SyntaxKind[OpenBracketToken](434,22): [
SyntaxKind[QuestionToken](434,23): ?
SyntaxKind[Identifier](434,24): Yield
SyntaxKind[CloseBracketToken](434,29): ]
SyntaxKind[LineTerminatorToken](435,1): «line terminator»
SyntaxKind[Identifier](435,2): PropertyName
SyntaxKind[OpenBracketToken](435,14): [
SyntaxKind[QuestionToken](435,15): ?
SyntaxKind[Identifier](435,16): Yield
SyntaxKind[CloseBracketToken](435,21): ]
SyntaxKind[Terminal](435,23): `:`
SyntaxKind[Identifier](435,27): AssignmentExpression
SyntaxKind[OpenBracketToken](435,47): [
SyntaxKind[Identifier](435,48): In
SyntaxKind[CommaToken](435,50): ,
SyntaxKind[QuestionToken](435,52): ?
SyntaxKind[Identifier](435,53): Yield
SyntaxKind[CloseBracketToken](435,58): ]
SyntaxKind[LineTerminatorToken](436,1): «line terminator»
SyntaxKind[Identifier](436,2): MethodDefinition
SyntaxKind[OpenBracketToken](436,18): [
SyntaxKind[QuestionToken](436,19): ?
SyntaxKind[Identifier](436,20): Yield
SyntaxKind[CloseBracketToken](436,25): ]
SyntaxKind[LineTerminatorToken](437,1): «line terminator»
SyntaxKind[DedentToken](437,1): «dedent»
SyntaxKind[LineTerminatorToken](438,1): «line terminator»
SyntaxKind[Identifier](438,1): PropertyName
SyntaxKind[OpenBracketToken](438,13): [
SyntaxKind[Identifier](438,14): Yield
SyntaxKind[CloseBracketToken](438,19): ]
SyntaxKind[ColonToken](438,21): :
SyntaxKind[LineTerminatorToken](439,1): «line terminator»
SyntaxKind[IndentToken](439,1): «indent»
SyntaxKind[Identifier](439,2): LiteralPropertyName
SyntaxKind[LineTerminatorToken](440,1): «line terminator»
SyntaxKind[Identifier](440,2): ComputedPropertyName
SyntaxKind[OpenBracketToken](440,22): [
SyntaxKind[QuestionToken](440,23): ?
SyntaxKind[Identifier](440,24): Yield
SyntaxKind[CloseBracketToken](440,29): ]
SyntaxKind[LineTerminatorToken](441,1): «line terminator»
SyntaxKind[DedentToken](441,1): «dedent»
SyntaxKind[LineTerminatorToken](442,1): «line terminator»
SyntaxKind[Identifier](442,1): LiteralPropertyName
SyntaxKind[ColonToken](442,21): :
SyntaxKind[LineTerminatorToken](443,1): «line terminator»
SyntaxKind[IndentToken](443,1): «indent»
SyntaxKind[Identifier](443,2): IdentifierName
SyntaxKind[LineTerminatorToken](444,1): «line terminator»
SyntaxKind[Identifier](444,2): StringLiteral
SyntaxKind[LineTerminatorToken](445,1): «line terminator»
SyntaxKind[Identifier](445,2): NumericLiteral
SyntaxKind[LineTerminatorToken](446,1): «line terminator»
SyntaxKind[DedentToken](446,1): «dedent»
SyntaxKind[LineTerminatorToken](447,1): «line terminator»
SyntaxKind[Identifier](447,1): ComputedPropertyName
SyntaxKind[OpenBracketToken](447,21): [
SyntaxKind[Identifier](447,22): Yield
SyntaxKind[CloseBracketToken](447,27): ]
SyntaxKind[ColonToken](447,29): :
SyntaxKind[LineTerminatorToken](448,1): «line terminator»
SyntaxKind[IndentToken](448,1): «indent»
SyntaxKind[Terminal](448,2): `[`
SyntaxKind[Identifier](448,6): AssignmentExpression
SyntaxKind[OpenBracketToken](448,26): [
SyntaxKind[Identifier](448,27): In
SyntaxKind[CommaToken](448,29): ,
SyntaxKind[QuestionToken](448,31): ?
SyntaxKind[Identifier](448,32): Yield
SyntaxKind[CloseBracketToken](448,37): ]
SyntaxKind[Terminal](448,40): `]`
SyntaxKind[LineTerminatorToken](449,1): «line terminator»
SyntaxKind[DedentToken](449,1): «dedent»
SyntaxKind[LineTerminatorToken](450,1): «line terminator»
SyntaxKind[Identifier](450,1): CoverInitializedName
SyntaxKind[OpenBracketToken](450,21): [
SyntaxKind[Identifier](450,22): Yield
SyntaxKind[CloseBracketToken](450,27): ]
SyntaxKind[ColonToken](450,29): :
SyntaxKind[LineTerminatorToken](451,1): «line terminator»
SyntaxKind[IndentToken](451,1): «indent»
SyntaxKind[Identifier](451,2): IdentifierReference
SyntaxKind[OpenBracketToken](451,21): [
SyntaxKind[QuestionToken](451,22): ?
SyntaxKind[Identifier](451,23): Yield
SyntaxKind[CloseBracketToken](451,28): ]
SyntaxKind[Identifier](451,30): Initializer
SyntaxKind[OpenBracketToken](451,41): [
SyntaxKind[Identifier](451,42): In
SyntaxKind[CommaToken](451,44): ,
SyntaxKind[QuestionToken](451,46): ?
SyntaxKind[Identifier](451,47): Yield
SyntaxKind[CloseBracketToken](451,52): ]
SyntaxKind[LineTerminatorToken](452,1): «line terminator»
SyntaxKind[DedentToken](452,1): «dedent»
SyntaxKind[LineTerminatorToken](453,1): «line terminator»
SyntaxKind[Identifier](453,1): Initializer
SyntaxKind[OpenBracketToken](453,12): [
SyntaxKind[Identifier](453,13): In
SyntaxKind[CommaToken](453,15): ,
SyntaxKind[Identifier](453,17): Yield
SyntaxKind[CloseBracketToken](453,22): ]
SyntaxKind[ColonToken](453,24): :
SyntaxKind[LineTerminatorToken](454,1): «line terminator»
SyntaxKind[IndentToken](454,1): «indent»
SyntaxKind[Terminal](454,2): `=`
SyntaxKind[Identifier](454,6): AssignmentExpression
SyntaxKind[OpenBracketToken](454,26): [
SyntaxKind[QuestionToken](454,27): ?
SyntaxKind[Identifier](454,28): In
SyntaxKind[CommaToken](454,30): ,
SyntaxKind[QuestionToken](454,32): ?
SyntaxKind[Identifier](454,33): Yield
SyntaxKind[CloseBracketToken](454,38): ]
SyntaxKind[LineTerminatorToken](455,1): «line terminator»
SyntaxKind[DedentToken](455,1): «dedent»
SyntaxKind[LineTerminatorToken](456,1): «line terminator»
SyntaxKind[Identifier](456,1): TemplateLiteral
SyntaxKind[OpenBracketToken](456,16): [
SyntaxKind[Identifier](456,17): Yield
SyntaxKind[CloseBracketToken](456,22): ]
SyntaxKind[ColonToken](456,24): :
SyntaxKind[LineTerminatorToken](457,1): «line terminator»
SyntaxKind[IndentToken](457,1): «indent»
SyntaxKind[Identifier](457,2): NoSubstitutionTemplate
SyntaxKind[LineTerminatorToken](458,1): «line terminator»
SyntaxKind[Identifier](458,2): TemplateHead
SyntaxKind[Identifier](458,15): Expression
SyntaxKind[OpenBracketToken](458,25): [
SyntaxKind[Identifier](458,26): In
SyntaxKind[CommaToken](458,28): ,
SyntaxKind[QuestionToken](458,30): ?
SyntaxKind[Identifier](458,31): Yield
SyntaxKind[CloseBracketToken](458,36): ]
SyntaxKind[Identifier](458,38): TemplateSpans
SyntaxKind[OpenBracketToken](458,51): [
SyntaxKind[QuestionToken](458,52): ?
SyntaxKind[Identifier](458,53): Yield
SyntaxKind[CloseBracketToken](458,58): ]
SyntaxKind[LineTerminatorToken](459,1): «line terminator»
SyntaxKind[DedentToken](459,1): «dedent»
SyntaxKind[LineTerminatorToken](460,1): «line terminator»
SyntaxKind[Identifier](460,1): TemplateSpans
SyntaxKind[OpenBracketToken](460,14): [
SyntaxKind[Identifier](460,15): Yield
SyntaxKind[CloseBracketToken](460,20): ]
SyntaxKind[ColonToken](460,22): :
SyntaxKind[LineTerminatorToken](461,1): «line terminator»
SyntaxKind[IndentToken](461,1): «indent»
SyntaxKind[Identifier](461,2): TemplateTail
SyntaxKind[LineTerminatorToken](462,1): «line terminator»
SyntaxKind[Identifier](462,2): TemplateMiddleList
SyntaxKind[OpenBracketToken](462,20): [
SyntaxKind[QuestionToken](462,21): ?
SyntaxKind[Identifier](462,22): Yield
SyntaxKind[CloseBracketToken](462,27): ]
SyntaxKind[Identifier](462,29): TemplateTail
SyntaxKind[LineTerminatorToken](463,1): «line terminator»
SyntaxKind[DedentToken](463,1): «dedent»
SyntaxKind[LineTerminatorToken](464,1): «line terminator»
SyntaxKind[Identifier](464,1): TemplateMiddleList
SyntaxKind[OpenBracketToken](464,19): [
SyntaxKind[Identifier](464,20): Yield
SyntaxKind[CloseBracketToken](464,25): ]
SyntaxKind[ColonToken](464,27): :
SyntaxKind[LineTerminatorToken](465,1): «line terminator»
SyntaxKind[IndentToken](465,1): «indent»
SyntaxKind[Identifier](465,2): TemplateMiddle
SyntaxKind[Identifier](465,18): Expression
SyntaxKind[OpenBracketToken](465,28): [
SyntaxKind[Identifier](465,29): In
SyntaxKind[CommaToken](465,31): ,
SyntaxKind[QuestionToken](465,33): ?
SyntaxKind[Identifier](465,34): Yield
SyntaxKind[CloseBracketToken](465,39): ]
SyntaxKind[LineTerminatorToken](466,1): «line terminator»
SyntaxKind[Identifier](466,2): TemplateMiddleList
SyntaxKind[OpenBracketToken](466,20): [
SyntaxKind[QuestionToken](466,21): ?
SyntaxKind[Identifier](466,22): Yield
SyntaxKind[CloseBracketToken](466,27): ]
SyntaxKind[Identifier](466,30): TemplateMiddle
SyntaxKind[Identifier](466,46): Expression
SyntaxKind[OpenBracketToken](466,56): [
SyntaxKind[Identifier](466,57): In
SyntaxKind[CommaToken](466,59): ,
SyntaxKind[QuestionToken](466,61): ?
SyntaxKind[Identifier](466,62): Yield
SyntaxKind[CloseBracketToken](466,67): ]
SyntaxKind[LineTerminatorToken](467,1): «line terminator»
SyntaxKind[DedentToken](467,1): «dedent»
SyntaxKind[LineTerminatorToken](468,1): «line terminator»
SyntaxKind[Identifier](468,1): MemberExpression
SyntaxKind[OpenBracketToken](468,17): [
SyntaxKind[Identifier](468,18): Yield
SyntaxKind[CloseBracketToken](468,23): ]
SyntaxKind[ColonToken](468,25): :
SyntaxKind[LineTerminatorToken](469,1): «line terminator»
SyntaxKind[IndentToken](469,1): «indent»
SyntaxKind[Identifier](469,2): PrimaryExpression
SyntaxKind[OpenBracketToken](469,19): [
SyntaxKind[QuestionToken](469,20): ?
SyntaxKind[Identifier](469,21): Yield
SyntaxKind[CloseBracketToken](469,26): ]
SyntaxKind[LineTerminatorToken](470,1): «line terminator»
SyntaxKind[Identifier](470,2): MemberExpression
SyntaxKind[OpenBracketToken](470,18): [
SyntaxKind[QuestionToken](470,19): ?
SyntaxKind[Identifier](470,20): Yield
SyntaxKind[CloseBracketToken](470,25): ]
SyntaxKind[Terminal](470,27): `[`
SyntaxKind[Identifier](470,31): Expression
SyntaxKind[OpenBracketToken](470,41): [
SyntaxKind[Identifier](470,42): In
SyntaxKind[CommaToken](470,44): ,
SyntaxKind[QuestionToken](470,46): ?
SyntaxKind[Identifier](470,47): Yield
SyntaxKind[CloseBracketToken](470,52): ]
SyntaxKind[Terminal](470,54): `]`
SyntaxKind[LineTerminatorToken](471,1): «line terminator»
SyntaxKind[Identifier](471,2): MemberExpression
SyntaxKind[OpenBracketToken](471,18): [
SyntaxKind[QuestionToken](471,19): ?
SyntaxKind[Identifier](471,20): Yield
SyntaxKind[CloseBracketToken](471,25): ]
SyntaxKind[Terminal](471,27): `.`
SyntaxKind[Identifier](471,31): IdentifierName
SyntaxKind[LineTerminatorToken](472,1): «line terminator»
SyntaxKind[Identifier](472,2): MemberExpression
SyntaxKind[OpenBracketToken](472,18): [
SyntaxKind[QuestionToken](472,19): ?
SyntaxKind[Identifier](472,20): Yield
SyntaxKind[CloseBracketToken](472,25): ]
SyntaxKind[Identifier](472,27): TemplateLiteral
SyntaxKind[OpenBracketToken](472,42): [
SyntaxKind[QuestionToken](472,43): ?
SyntaxKind[Identifier](472,44): Yield
SyntaxKind[CloseBracketToken](472,49): ]
SyntaxKind[LineTerminatorToken](473,1): «line terminator»
SyntaxKind[Identifier](473,2): SuperProperty
SyntaxKind[OpenBracketToken](473,15): [
SyntaxKind[QuestionToken](473,16): ?
SyntaxKind[Identifier](473,17): Yield
SyntaxKind[CloseBracketToken](473,22): ]
SyntaxKind[LineTerminatorToken](474,1): «line terminator»
SyntaxKind[Identifier](474,2): MetaProperty
SyntaxKind[LineTerminatorToken](475,1): «line terminator»
SyntaxKind[Terminal](475,2): `new`
SyntaxKind[Identifier](475,8): MemberExpression
SyntaxKind[OpenBracketToken](475,24): [
SyntaxKind[QuestionToken](475,25): ?
SyntaxKind[Identifier](475,26): Yield
SyntaxKind[CloseBracketToken](475,31): ]
SyntaxKind[Identifier](475,33): Arguments
SyntaxKind[OpenBracketToken](475,42): [
SyntaxKind[QuestionToken](475,43): ?
SyntaxKind[Identifier](475,44): Yield
SyntaxKind[CloseBracketToken](475,49): ]
SyntaxKind[LineTerminatorToken](476,1): «line terminator»
SyntaxKind[DedentToken](476,1): «dedent»
SyntaxKind[LineTerminatorToken](477,1): «line terminator»
SyntaxKind[Identifier](477,1): SuperProperty
SyntaxKind[OpenBracketToken](477,14): [
SyntaxKind[Identifier](477,15): Yield
SyntaxKind[CloseBracketToken](477,20): ]
SyntaxKind[ColonToken](477,22): :
SyntaxKind[LineTerminatorToken](478,1): «line terminator»
SyntaxKind[IndentToken](478,1): «indent»
SyntaxKind[Terminal](478,2): `super`
SyntaxKind[Terminal](478,10): `[`
SyntaxKind[Identifier](478,14): Expression
SyntaxKind[OpenBracketToken](478,24): [
SyntaxKind[Identifier](478,25): In
SyntaxKind[CommaToken](478,27): ,
SyntaxKind[QuestionToken](478,29): ?
SyntaxKind[Identifier](478,30): Yield
SyntaxKind[CloseBracketToken](478,35): ]
SyntaxKind[Terminal](478,37): `]`
SyntaxKind[LineTerminatorToken](479,1): «line terminator»
SyntaxKind[Terminal](479,2): `super`
SyntaxKind[Terminal](479,10): `.`
SyntaxKind[Identifier](479,14): IdentifierName
SyntaxKind[LineTerminatorToken](480,1): «line terminator»
SyntaxKind[DedentToken](480,1): «dedent»
SyntaxKind[LineTerminatorToken](481,1): «line terminator»
SyntaxKind[Identifier](481,1): MetaProperty
SyntaxKind[ColonToken](481,14): :
SyntaxKind[LineTerminatorToken](482,1): «line terminator»
SyntaxKind[IndentToken](482,1): «indent»
SyntaxKind[Identifier](482,2): NewTarget
SyntaxKind[LineTerminatorToken](483,1): «line terminator»
SyntaxKind[DedentToken](483,1): «dedent»
SyntaxKind[LineTerminatorToken](484,1): «line terminator»
SyntaxKind[Identifier](484,1): NewTarget
SyntaxKind[ColonToken](484,11): :
SyntaxKind[LineTerminatorToken](485,1): «line terminator»
SyntaxKind[IndentToken](485,1): «indent»
SyntaxKind[Terminal](485,2): `new`
SyntaxKind[Terminal](485,8): `.`
SyntaxKind[Terminal](485,12): `target`
SyntaxKind[LineTerminatorToken](486,1): «line terminator»
SyntaxKind[DedentToken](486,1): «dedent»
SyntaxKind[LineTerminatorToken](487,1): «line terminator»
SyntaxKind[Identifier](487,1): NewExpression
SyntaxKind[OpenBracketToken](487,14): [
SyntaxKind[Identifier](487,15): Yield
SyntaxKind[CloseBracketToken](487,20): ]
SyntaxKind[ColonToken](487,22): :
SyntaxKind[LineTerminatorToken](488,1): «line terminator»
SyntaxKind[IndentToken](488,1): «indent»
SyntaxKind[Identifier](488,2): MemberExpression
SyntaxKind[OpenBracketToken](488,18): [
SyntaxKind[QuestionToken](488,19): ?
SyntaxKind[Identifier](488,20): Yield
SyntaxKind[CloseBracketToken](488,25): ]
SyntaxKind[LineTerminatorToken](489,1): «line terminator»
SyntaxKind[Terminal](489,2): `new`
SyntaxKind[Identifier](489,8): NewExpression
SyntaxKind[OpenBracketToken](489,21): [
SyntaxKind[QuestionToken](489,22): ?
SyntaxKind[Identifier](489,23): Yield
SyntaxKind[CloseBracketToken](489,28): ]
SyntaxKind[LineTerminatorToken](490,1): «line terminator»
SyntaxKind[DedentToken](490,1): «dedent»
SyntaxKind[LineTerminatorToken](491,1): «line terminator»
SyntaxKind[Identifier](491,1): CallExpression
SyntaxKind[OpenBracketToken](491,15): [
SyntaxKind[Identifier](491,16): Yield
SyntaxKind[CloseBracketToken](491,21): ]
SyntaxKind[ColonToken](491,23): :
SyntaxKind[LineTerminatorToken](492,1): «line terminator»
SyntaxKind[IndentToken](492,1): «indent»
SyntaxKind[Identifier](492,2): MemberExpression
SyntaxKind[OpenBracketToken](492,18): [
SyntaxKind[QuestionToken](492,19): ?
SyntaxKind[Identifier](492,20): Yield
SyntaxKind[CloseBracketToken](492,25): ]
SyntaxKind[Identifier](492,27): Arguments
SyntaxKind[OpenBracketToken](492,36): [
SyntaxKind[QuestionToken](492,37): ?
SyntaxKind[Identifier](492,38): Yield
SyntaxKind[CloseBracketToken](492,43): ]
SyntaxKind[LineTerminatorToken](493,1): «line terminator»
SyntaxKind[Identifier](493,2): SuperCall
SyntaxKind[OpenBracketToken](493,11): [
SyntaxKind[QuestionToken](493,12): ?
SyntaxKind[Identifier](493,13): Yield
SyntaxKind[CloseBracketToken](493,18): ]
SyntaxKind[LineTerminatorToken](494,1): «line terminator»
SyntaxKind[Identifier](494,2): CallExpression
SyntaxKind[OpenBracketToken](494,16): [
SyntaxKind[QuestionToken](494,17): ?
SyntaxKind[Identifier](494,18): Yield
SyntaxKind[CloseBracketToken](494,23): ]
SyntaxKind[Identifier](494,25): Arguments
SyntaxKind[OpenBracketToken](494,34): [
SyntaxKind[QuestionToken](494,35): ?
SyntaxKind[Identifier](494,36): Yield
SyntaxKind[CloseBracketToken](494,41): ]
SyntaxKind[LineTerminatorToken](495,1): «line terminator»
SyntaxKind[Identifier](495,2): CallExpression
SyntaxKind[OpenBracketToken](495,16): [
SyntaxKind[QuestionToken](495,17): ?
SyntaxKind[Identifier](495,18): Yield
SyntaxKind[CloseBracketToken](495,23): ]
SyntaxKind[Terminal](495,25): `[`
SyntaxKind[Identifier](495,29): Expression
SyntaxKind[OpenBracketToken](495,39): [
SyntaxKind[Identifier](495,40): In
SyntaxKind[CommaToken](495,42): ,
SyntaxKind[QuestionToken](495,44): ?
SyntaxKind[Identifier](495,45): Yield
SyntaxKind[CloseBracketToken](495,50): ]
SyntaxKind[Terminal](495,52): `]`
SyntaxKind[LineTerminatorToken](496,1): «line terminator»
SyntaxKind[Identifier](496,2): CallExpression
SyntaxKind[OpenBracketToken](496,16): [
SyntaxKind[QuestionToken](496,17): ?
SyntaxKind[Identifier](496,18): Yield
SyntaxKind[CloseBracketToken](496,23): ]
SyntaxKind[Terminal](496,25): `.`
SyntaxKind[Identifier](496,29): IdentifierName
SyntaxKind[LineTerminatorToken](497,1): «line terminator»
SyntaxKind[Identifier](497,2): CallExpression
SyntaxKind[OpenBracketToken](497,16): [
SyntaxKind[QuestionToken](497,17): ?
SyntaxKind[Identifier](497,18): Yield
SyntaxKind[CloseBracketToken](497,23): ]
SyntaxKind[Identifier](497,25): TemplateLiteral
SyntaxKind[OpenBracketToken](497,40): [
SyntaxKind[QuestionToken](497,41): ?
SyntaxKind[Identifier](497,42): Yield
SyntaxKind[CloseBracketToken](497,47): ]
SyntaxKind[LineTerminatorToken](498,1): «line terminator»
SyntaxKind[DedentToken](498,1): «dedent»
SyntaxKind[LineTerminatorToken](499,1): «line terminator»
SyntaxKind[Identifier](499,1): SuperCall
SyntaxKind[OpenBracketToken](499,10): [
SyntaxKind[Identifier](499,11): Yield
SyntaxKind[CloseBracketToken](499,16): ]
SyntaxKind[ColonToken](499,18): :
SyntaxKind[LineTerminatorToken](500,1): «line terminator»
SyntaxKind[IndentToken](500,1): «indent»
SyntaxKind[Terminal](500,2): `super`
SyntaxKind[Identifier](500,10): Arguments
SyntaxKind[OpenBracketToken](500,19): [
SyntaxKind[QuestionToken](500,20): ?
SyntaxKind[Identifier](500,21): Yield
SyntaxKind[CloseBracketToken](500,26): ]
SyntaxKind[LineTerminatorToken](501,1): «line terminator»
SyntaxKind[DedentToken](501,1): «dedent»
SyntaxKind[LineTerminatorToken](502,1): «line terminator»
SyntaxKind[Identifier](502,1): Arguments
SyntaxKind[OpenBracketToken](502,10): [
SyntaxKind[Identifier](502,11): Yield
SyntaxKind[CloseBracketToken](502,16): ]
SyntaxKind[ColonToken](502,18): :
SyntaxKind[LineTerminatorToken](503,1): «line terminator»
SyntaxKind[IndentToken](503,1): «indent»
SyntaxKind[Terminal](503,2): `(`
SyntaxKind[Terminal](503,6): `)`
SyntaxKind[LineTerminatorToken](504,1): «line terminator»
SyntaxKind[Terminal](504,2): `(`
SyntaxKind[Identifier](504,6): ArgumentList
SyntaxKind[OpenBracketToken](504,18): [
SyntaxKind[QuestionToken](504,19): ?
SyntaxKind[Identifier](504,20): Yield
SyntaxKind[CloseBracketToken](504,25): ]
SyntaxKind[Terminal](504,28): `)`
SyntaxKind[LineTerminatorToken](505,1): «line terminator»
SyntaxKind[DedentToken](505,1): «dedent»
SyntaxKind[LineTerminatorToken](506,1): «line terminator»
SyntaxKind[Identifier](506,1): ArgumentList
SyntaxKind[OpenBracketToken](506,13): [
SyntaxKind[Identifier](506,14): Yield
SyntaxKind[CloseBracketToken](506,19): ]
SyntaxKind[ColonToken](506,21): :
SyntaxKind[LineTerminatorToken](507,1): «line terminator»
SyntaxKind[IndentToken](507,1): «indent»
SyntaxKind[Identifier](507,2): AssignmentExpression
SyntaxKind[OpenBracketToken](507,22): [
SyntaxKind[Identifier](507,23): In
SyntaxKind[CommaToken](507,25): ,
SyntaxKind[QuestionToken](507,27): ?
SyntaxKind[Identifier](507,28): Yield
SyntaxKind[CloseBracketToken](507,33): ]
SyntaxKind[LineTerminatorToken](508,1): «line terminator»
SyntaxKind[Terminal](508,2): `...`
SyntaxKind[Identifier](508,8): AssignmentExpression
SyntaxKind[OpenBracketToken](508,28): [
SyntaxKind[Identifier](508,29): In
SyntaxKind[CommaToken](508,31): ,
SyntaxKind[QuestionToken](508,33): ?
SyntaxKind[Identifier](508,34): Yield
SyntaxKind[CloseBracketToken](508,39): ]
SyntaxKind[LineTerminatorToken](509,1): «line terminator»
SyntaxKind[Identifier](509,2): ArgumentList
SyntaxKind[OpenBracketToken](509,14): [
SyntaxKind[QuestionToken](509,15): ?
SyntaxKind[Identifier](509,16): Yield
SyntaxKind[CloseBracketToken](509,21): ]
SyntaxKind[Terminal](509,23): `,`
SyntaxKind[Identifier](509,27): AssignmentExpression
SyntaxKind[OpenBracketToken](509,47): [
SyntaxKind[Identifier](509,48): In
SyntaxKind[CommaToken](509,50): ,
SyntaxKind[QuestionToken](509,52): ?
SyntaxKind[Identifier](509,53): Yield
SyntaxKind[CloseBracketToken](509,58): ]
SyntaxKind[LineTerminatorToken](510,1): «line terminator»
SyntaxKind[Identifier](510,2): ArgumentList
SyntaxKind[OpenBracketToken](510,14): [
SyntaxKind[QuestionToken](510,15): ?
SyntaxKind[Identifier](510,16): Yield
SyntaxKind[CloseBracketToken](510,21): ]
SyntaxKind[Terminal](510,23): `,`
SyntaxKind[Terminal](510,27): `...`
SyntaxKind[Identifier](510,33): AssignmentExpression
SyntaxKind[OpenBracketToken](510,53): [
SyntaxKind[Identifier](510,54): In
SyntaxKind[CommaToken](510,56): ,
SyntaxKind[QuestionToken](510,58): ?
SyntaxKind[Identifier](510,59): Yield
SyntaxKind[CloseBracketToken](510,64): ]
SyntaxKind[LineTerminatorToken](511,1): «line terminator»
SyntaxKind[DedentToken](511,1): «dedent»
SyntaxKind[LineTerminatorToken](512,1): «line terminator»
SyntaxKind[Identifier](512,1): LeftHandSideExpression
SyntaxKind[OpenBracketToken](512,23): [
SyntaxKind[Identifier](512,24): Yield
SyntaxKind[CloseBracketToken](512,29): ]
SyntaxKind[ColonToken](512,31): :
SyntaxKind[LineTerminatorToken](513,1): «line terminator»
SyntaxKind[IndentToken](513,1): «indent»
SyntaxKind[Identifier](513,2): NewExpression
SyntaxKind[OpenBracketToken](513,15): [
SyntaxKind[QuestionToken](513,16): ?
SyntaxKind[Identifier](513,17): Yield
SyntaxKind[CloseBracketToken](513,22): ]
SyntaxKind[LineTerminatorToken](514,1): «line terminator»
SyntaxKind[Identifier](514,2): CallExpression
SyntaxKind[OpenBracketToken](514,16): [
SyntaxKind[QuestionToken](514,17): ?
SyntaxKind[Identifier](514,18): Yield
SyntaxKind[CloseBracketToken](514,23): ]
SyntaxKind[LineTerminatorToken](515,1): «line terminator»
SyntaxKind[DedentToken](515,1): «dedent»
SyntaxKind[LineTerminatorToken](516,1): «line terminator»
SyntaxKind[Identifier](516,1): PostfixExpression
SyntaxKind[OpenBracketToken](516,18): [
SyntaxKind[Identifier](516,19): Yield
SyntaxKind[CloseBracketToken](516,24): ]
SyntaxKind[ColonToken](516,26): :
SyntaxKind[LineTerminatorToken](517,1): «line terminator»
SyntaxKind[IndentToken](517,1): «indent»
SyntaxKind[Identifier](517,2): LeftHandSideExpression
SyntaxKind[OpenBracketToken](517,24): [
SyntaxKind[QuestionToken](517,25): ?
SyntaxKind[Identifier](517,26): Yield
SyntaxKind[CloseBracketToken](517,31): ]
SyntaxKind[LineTerminatorToken](518,1): «line terminator»
SyntaxKind[Identifier](518,2): LeftHandSideExpression
SyntaxKind[OpenBracketToken](518,24): [
SyntaxKind[QuestionToken](518,25): ?
SyntaxKind[Identifier](518,26): Yield
SyntaxKind[CloseBracketToken](518,31): ]
SyntaxKind[OpenBracketToken](518,33): [
SyntaxKind[NoKeyword](518,34): no
SyntaxKind[Identifier](518,37): LineTerminator
SyntaxKind[HereKeyword](518,52): here
SyntaxKind[CloseBracketToken](518,56): ]
SyntaxKind[Terminal](518,58): `++`
SyntaxKind[LineTerminatorToken](519,1): «line terminator»
SyntaxKind[Identifier](519,2): LeftHandSideExpression
SyntaxKind[OpenBracketToken](519,24): [
SyntaxKind[QuestionToken](519,25): ?
SyntaxKind[Identifier](519,26): Yield
SyntaxKind[CloseBracketToken](519,31): ]
SyntaxKind[OpenBracketToken](519,33): [
SyntaxKind[NoKeyword](519,34): no
SyntaxKind[Identifier](519,37): LineTerminator
SyntaxKind[HereKeyword](519,52): here
SyntaxKind[CloseBracketToken](519,56): ]
SyntaxKind[Terminal](519,58): `--`
SyntaxKind[LineTerminatorToken](520,1): «line terminator»
SyntaxKind[DedentToken](520,1): «dedent»
SyntaxKind[LineTerminatorToken](521,1): «line terminator»
SyntaxKind[Identifier](521,1): UnaryExpression
SyntaxKind[OpenBracketToken](521,16): [
SyntaxKind[Identifier](521,17): Yield
SyntaxKind[CloseBracketToken](521,22): ]
SyntaxKind[ColonToken](521,24): :
SyntaxKind[LineTerminatorToken](522,1): «line terminator»
SyntaxKind[IndentToken](522,1): «indent»
SyntaxKind[Identifier](522,2): PostfixExpression
SyntaxKind[OpenBracketToken](522,19): [
SyntaxKind[QuestionToken](522,20): ?
SyntaxKind[Identifier](522,21): Yield
SyntaxKind[CloseBracketToken](522,26): ]
SyntaxKind[LineTerminatorToken](523,1): «line terminator»
SyntaxKind[Terminal](523,2): `delete`
SyntaxKind[Identifier](523,11): UnaryExpression
SyntaxKind[OpenBracketToken](523,26): [
SyntaxKind[QuestionToken](523,27): ?
SyntaxKind[Identifier](523,28): Yield
SyntaxKind[CloseBracketToken](523,33): ]
SyntaxKind[LineTerminatorToken](524,1): «line terminator»
SyntaxKind[Terminal](524,2): `void`
SyntaxKind[Identifier](524,9): UnaryExpression
SyntaxKind[OpenBracketToken](524,24): [
SyntaxKind[QuestionToken](524,25): ?
SyntaxKind[Identifier](524,26): Yield
SyntaxKind[CloseBracketToken](524,31): ]
SyntaxKind[LineTerminatorToken](525,1): «line terminator»
SyntaxKind[Terminal](525,2): `typeof`
SyntaxKind[Identifier](525,11): UnaryExpression
SyntaxKind[OpenBracketToken](525,26): [
SyntaxKind[QuestionToken](525,27): ?
SyntaxKind[Identifier](525,28): Yield
SyntaxKind[CloseBracketToken](525,33): ]
SyntaxKind[LineTerminatorToken](526,1): «line terminator»
SyntaxKind[Terminal](526,2): `++`
SyntaxKind[Identifier](526,7): UnaryExpression
SyntaxKind[OpenBracketToken](526,22): [
SyntaxKind[QuestionToken](526,23): ?
SyntaxKind[Identifier](526,24): Yield
SyntaxKind[CloseBracketToken](526,29): ]
SyntaxKind[LineTerminatorToken](527,1): «line terminator»
SyntaxKind[Terminal](527,2): `--`
SyntaxKind[Identifier](527,7): UnaryExpression
SyntaxKind[OpenBracketToken](527,22): [
SyntaxKind[QuestionToken](527,23): ?
SyntaxKind[Identifier](527,24): Yield
SyntaxKind[CloseBracketToken](527,29): ]
SyntaxKind[LineTerminatorToken](528,1): «line terminator»
SyntaxKind[Terminal](528,2): `+`
SyntaxKind[Identifier](528,6): UnaryExpression
SyntaxKind[OpenBracketToken](528,21): [
SyntaxKind[QuestionToken](528,22): ?
SyntaxKind[Identifier](528,23): Yield
SyntaxKind[CloseBracketToken](528,28): ]
SyntaxKind[LineTerminatorToken](529,1): «line terminator»
SyntaxKind[Terminal](529,2): `-`
SyntaxKind[Identifier](529,6): UnaryExpression
SyntaxKind[OpenBracketToken](529,21): [
SyntaxKind[QuestionToken](529,22): ?
SyntaxKind[Identifier](529,23): Yield
SyntaxKind[CloseBracketToken](529,28): ]
SyntaxKind[LineTerminatorToken](530,1): «line terminator»
SyntaxKind[Terminal](530,2): `~`
SyntaxKind[Identifier](530,6): UnaryExpression
SyntaxKind[OpenBracketToken](530,21): [
SyntaxKind[QuestionToken](530,22): ?
SyntaxKind[Identifier](530,23): Yield
SyntaxKind[CloseBracketToken](530,28): ]
SyntaxKind[LineTerminatorToken](531,1): «line terminator»
SyntaxKind[Terminal](531,2): `!`
SyntaxKind[Identifier](531,6): UnaryExpression
SyntaxKind[OpenBracketToken](531,21): [
SyntaxKind[QuestionToken](531,22): ?
SyntaxKind[Identifier](531,23): Yield
SyntaxKind[CloseBracketToken](531,28): ]
SyntaxKind[LineTerminatorToken](532,1): «line terminator»
SyntaxKind[DedentToken](532,1): «dedent»
SyntaxKind[LineTerminatorToken](533,1): «line terminator»
SyntaxKind[Identifier](533,1): MultiplicativeExpression
SyntaxKind[OpenBracketToken](533,25): [
SyntaxKind[Identifier](533,26): Yield
SyntaxKind[CloseBracketToken](533,31): ]
SyntaxKind[ColonToken](533,33): :
SyntaxKind[LineTerminatorToken](534,1): «line terminator»
SyntaxKind[IndentToken](534,1): «indent»
SyntaxKind[Identifier](534,2): UnaryExpression
SyntaxKind[OpenBracketToken](534,17): [
SyntaxKind[QuestionToken](534,18): ?
SyntaxKind[Identifier](534,19): Yield
SyntaxKind[CloseBracketToken](534,24): ]
SyntaxKind[LineTerminatorToken](535,1): «line terminator»
SyntaxKind[Identifier](535,2): MultiplicativeExpression
SyntaxKind[OpenBracketToken](535,26): [
SyntaxKind[QuestionToken](535,27): ?
SyntaxKind[Identifier](535,28): Yield
SyntaxKind[CloseBracketToken](535,33): ]
SyntaxKind[Identifier](535,35): MultiplicativeOperator
SyntaxKind[Identifier](535,58): UnaryExpression
SyntaxKind[OpenBracketToken](535,73): [
SyntaxKind[QuestionToken](535,74): ?
SyntaxKind[Identifier](535,75): Yield
SyntaxKind[CloseBracketToken](535,80): ]
SyntaxKind[LineTerminatorToken](536,1): «line terminator»
SyntaxKind[DedentToken](536,1): «dedent»
SyntaxKind[LineTerminatorToken](537,1): «line terminator»
SyntaxKind[Identifier](537,1): MultiplicativeOperator
SyntaxKind[ColonToken](537,24): :
SyntaxKind[OneKeyword](537,26): one
SyntaxKind[OfKeyword](537,30): of
SyntaxKind[LineTerminatorToken](538,1): «line terminator»
SyntaxKind[IndentToken](538,1): «indent»
SyntaxKind[Terminal](538,2): `*`
SyntaxKind[Terminal](538,6): `/`
SyntaxKind[Terminal](538,10): `%`
SyntaxKind[LineTerminatorToken](539,1): «line terminator»
SyntaxKind[DedentToken](539,1): «dedent»
SyntaxKind[LineTerminatorToken](540,1): «line terminator»
SyntaxKind[Identifier](540,1): AdditiveExpression
SyntaxKind[OpenBracketToken](540,19): [
SyntaxKind[Identifier](540,20): Yield
SyntaxKind[CloseBracketToken](540,25): ]
SyntaxKind[ColonToken](540,27): :
SyntaxKind[LineTerminatorToken](541,1): «line terminator»
SyntaxKind[IndentToken](541,1): «indent»
SyntaxKind[Identifier](541,2): MultiplicativeExpression
SyntaxKind[OpenBracketToken](541,26): [
SyntaxKind[QuestionToken](541,27): ?
SyntaxKind[Identifier](541,28): Yield
SyntaxKind[CloseBracketToken](541,33): ]
SyntaxKind[LineTerminatorToken](542,1): «line terminator»
SyntaxKind[Identifier](542,2): AdditiveExpression
SyntaxKind[OpenBracketToken](542,20): [
SyntaxKind[QuestionToken](542,21): ?
SyntaxKind[Identifier](542,22): Yield
SyntaxKind[CloseBracketToken](542,27): ]
SyntaxKind[Terminal](542,29): `+`
SyntaxKind[Identifier](542,33): MultiplicativeExpression
SyntaxKind[OpenBracketToken](542,57): [
SyntaxKind[QuestionToken](542,58): ?
SyntaxKind[Identifier](542,59): Yield
SyntaxKind[CloseBracketToken](542,64): ]
SyntaxKind[LineTerminatorToken](543,1): «line terminator»
SyntaxKind[Identifier](543,2): AdditiveExpression
SyntaxKind[OpenBracketToken](543,20): [
SyntaxKind[QuestionToken](543,21): ?
SyntaxKind[Identifier](543,22): Yield
SyntaxKind[CloseBracketToken](543,27): ]
SyntaxKind[Terminal](543,29): `-`
SyntaxKind[Identifier](543,33): MultiplicativeExpression
SyntaxKind[OpenBracketToken](543,57): [
SyntaxKind[QuestionToken](543,58): ?
SyntaxKind[Identifier](543,59): Yield
SyntaxKind[CloseBracketToken](543,64): ]
SyntaxKind[LineTerminatorToken](544,1): «line terminator»
SyntaxKind[DedentToken](544,1): «dedent»
SyntaxKind[LineTerminatorToken](545,1): «line terminator»
SyntaxKind[Identifier](545,1): ShiftExpression
SyntaxKind[OpenBracketToken](545,16): [
SyntaxKind[Identifier](545,17): Yield
SyntaxKind[CloseBracketToken](545,22): ]
SyntaxKind[ColonToken](545,24): :
SyntaxKind[LineTerminatorToken](546,1): «line terminator»
SyntaxKind[IndentToken](546,1): «indent»
SyntaxKind[Identifier](546,2): AdditiveExpression
SyntaxKind[OpenBracketToken](546,20): [
SyntaxKind[QuestionToken](546,21): ?
SyntaxKind[Identifier](546,22): Yield
SyntaxKind[CloseBracketToken](546,27): ]
SyntaxKind[LineTerminatorToken](547,1): «line terminator»
SyntaxKind[Identifier](547,2): ShiftExpression
SyntaxKind[OpenBracketToken](547,17): [
SyntaxKind[QuestionToken](547,18): ?
SyntaxKind[Identifier](547,19): Yield
SyntaxKind[CloseBracketToken](547,24): ]
SyntaxKind[Terminal](547,26): `<<`
SyntaxKind[Identifier](547,31): AdditiveExpression
SyntaxKind[OpenBracketToken](547,49): [
SyntaxKind[QuestionToken](547,50): ?
SyntaxKind[Identifier](547,51): Yield
SyntaxKind[CloseBracketToken](547,56): ]
SyntaxKind[LineTerminatorToken](548,1): «line terminator»
SyntaxKind[Identifier](548,2): ShiftExpression
SyntaxKind[OpenBracketToken](548,17): [
SyntaxKind[QuestionToken](548,18): ?
SyntaxKind[Identifier](548,19): Yield
SyntaxKind[CloseBracketToken](548,24): ]
SyntaxKind[Terminal](548,26): `>>`
SyntaxKind[Identifier](548,31): AdditiveExpression
SyntaxKind[OpenBracketToken](548,49): [
SyntaxKind[QuestionToken](548,50): ?
SyntaxKind[Identifier](548,51): Yield
SyntaxKind[CloseBracketToken](548,56): ]
SyntaxKind[LineTerminatorToken](549,1): «line terminator»
SyntaxKind[Identifier](549,2): ShiftExpression
SyntaxKind[OpenBracketToken](549,17): [
SyntaxKind[QuestionToken](549,18): ?
SyntaxKind[Identifier](549,19): Yield
SyntaxKind[CloseBracketToken](549,24): ]
SyntaxKind[Terminal](549,26): `>>>`
SyntaxKind[Identifier](549,32): AdditiveExpression
SyntaxKind[OpenBracketToken](549,50): [
SyntaxKind[QuestionToken](549,51): ?
SyntaxKind[Identifier](549,52): Yield
SyntaxKind[CloseBracketToken](549,57): ]
SyntaxKind[LineTerminatorToken](550,1): «line terminator»
SyntaxKind[DedentToken](550,1): «dedent»
SyntaxKind[LineTerminatorToken](551,1): «line terminator»
SyntaxKind[Identifier](551,1): RelationalExpression
SyntaxKind[OpenBracketToken](551,21): [
SyntaxKind[Identifier](551,22): In
SyntaxKind[CommaToken](551,24): ,
SyntaxKind[Identifier](551,26): Yield
SyntaxKind[CloseBracketToken](551,31): ]
SyntaxKind[ColonToken](551,33): :
SyntaxKind[LineTerminatorToken](552,1): «line terminator»
SyntaxKind[IndentToken](552,1): «indent»
SyntaxKind[Identifier](552,2): ShiftExpression
SyntaxKind[OpenBracketToken](552,17): [
SyntaxKind[QuestionToken](552,18): ?
SyntaxKind[Identifier](552,19): Yield
SyntaxKind[CloseBracketToken](552,24): ]
SyntaxKind[LineTerminatorToken](553,1): «line terminator»
SyntaxKind[Identifier](553,2): RelationalExpression
SyntaxKind[OpenBracketToken](553,22): [
SyntaxKind[QuestionToken](553,23): ?
SyntaxKind[Identifier](553,24): In
SyntaxKind[CommaToken](553,26): ,
SyntaxKind[QuestionToken](553,28): ?
SyntaxKind[Identifier](553,29): Yield
SyntaxKind[CloseBracketToken](553,34): ]
SyntaxKind[Terminal](553,36): `<`
SyntaxKind[Identifier](553,40): ShiftExpression
SyntaxKind[OpenBracketToken](553,55): [
SyntaxKind[QuestionToken](553,56): ?
SyntaxKind[Identifier](553,57): Yield
SyntaxKind[CloseBracketToken](553,62): ]
SyntaxKind[LineTerminatorToken](554,1): «line terminator»
SyntaxKind[Identifier](554,2): RelationalExpression
SyntaxKind[OpenBracketToken](554,22): [
SyntaxKind[QuestionToken](554,23): ?
SyntaxKind[Identifier](554,24): In
SyntaxKind[CommaToken](554,26): ,
SyntaxKind[QuestionToken](554,28): ?
SyntaxKind[Identifier](554,29): Yield
SyntaxKind[CloseBracketToken](554,34): ]
SyntaxKind[Terminal](554,36): `>`
SyntaxKind[Identifier](554,40): ShiftExpression
SyntaxKind[OpenBracketToken](554,55): [
SyntaxKind[QuestionToken](554,56): ?
SyntaxKind[Identifier](554,57): Yield
SyntaxKind[CloseBracketToken](554,62): ]
SyntaxKind[LineTerminatorToken](555,1): «line terminator»
SyntaxKind[Identifier](555,2): RelationalExpression
SyntaxKind[OpenBracketToken](555,22): [
SyntaxKind[QuestionToken](555,23): ?
SyntaxKind[Identifier](555,24): In
SyntaxKind[CommaToken](555,26): ,
SyntaxKind[QuestionToken](555,28): ?
SyntaxKind[Identifier](555,29): Yield
SyntaxKind[CloseBracketToken](555,34): ]
SyntaxKind[Terminal](555,36): `<=`
SyntaxKind[Identifier](555,41): ShiftExpression
SyntaxKind[OpenBracketToken](555,56): [
SyntaxKind[QuestionToken](555,57): ?
SyntaxKind[Identifier](555,58): Yield
SyntaxKind[CloseBracketToken](555,63): ]
SyntaxKind[LineTerminatorToken](556,1): «line terminator»
SyntaxKind[Identifier](556,2): RelationalExpression
SyntaxKind[OpenBracketToken](556,22): [
SyntaxKind[QuestionToken](556,23): ?
SyntaxKind[Identifier](556,24): In
SyntaxKind[CommaToken](556,26): ,
SyntaxKind[QuestionToken](556,28): ?
SyntaxKind[Identifier](556,29): Yield
SyntaxKind[CloseBracketToken](556,34): ]
SyntaxKind[Terminal](556,36): `>=`
SyntaxKind[Identifier](556,41): ShiftExpression
SyntaxKind[OpenBracketToken](556,56): [
SyntaxKind[QuestionToken](556,57): ?
SyntaxKind[Identifier](556,58): Yield
SyntaxKind[CloseBracketToken](556,63): ]
SyntaxKind[LineTerminatorToken](557,1): «line terminator»
SyntaxKind[Identifier](557,2): RelationalExpression
SyntaxKind[OpenBracketToken](557,22): [
SyntaxKind[QuestionToken](557,23): ?
SyntaxKind[Identifier](557,24): In
SyntaxKind[CommaToken](557,26): ,
SyntaxKind[QuestionToken](557,28): ?
SyntaxKind[Identifier](557,29): Yield
SyntaxKind[CloseBracketToken](557,34): ]
SyntaxKind[Terminal](557,36): `instanceof`
SyntaxKind[Identifier](557,49): ShiftExpression
SyntaxKind[OpenBracketToken](557,64): [
SyntaxKind[QuestionToken](557,65): ?
SyntaxKind[Identifier](557,66): Yield
SyntaxKind[CloseBracketToken](557,71): ]
SyntaxKind[LineTerminatorToken](558,1): «line terminator»
SyntaxKind[OpenBracketToken](558,2): [
SyntaxKind[PlusToken](558,3): +
SyntaxKind[Identifier](558,4): In
SyntaxKind[CloseBracketToken](558,6): ]
SyntaxKind[Identifier](558,8): RelationalExpression
SyntaxKind[OpenBracketToken](558,28): [
SyntaxKind[Identifier](558,29): In
SyntaxKind[CommaToken](558,31): ,
SyntaxKind[QuestionToken](558,33): ?
SyntaxKind[Identifier](558,34): Yield
SyntaxKind[CloseBracketToken](558,39): ]
SyntaxKind[Terminal](558,41): `in`
SyntaxKind[Identifier](558,46): ShiftExpression
SyntaxKind[OpenBracketToken](558,61): [
SyntaxKind[QuestionToken](558,62): ?
SyntaxKind[Identifier](558,63): Yield
SyntaxKind[CloseBracketToken](558,68): ]
SyntaxKind[LineTerminatorToken](559,1): «line terminator»
SyntaxKind[DedentToken](559,1): «dedent»
SyntaxKind[LineTerminatorToken](560,1): «line terminator»
SyntaxKind[Identifier](560,1): EqualityExpression
SyntaxKind[OpenBracketToken](560,19): [
SyntaxKind[Identifier](560,20): In
SyntaxKind[CommaToken](560,22): ,
SyntaxKind[Identifier](560,24): Yield
SyntaxKind[CloseBracketToken](560,29): ]
SyntaxKind[ColonToken](560,31): :
SyntaxKind[LineTerminatorToken](561,1): «line terminator»
SyntaxKind[IndentToken](561,1): «indent»
SyntaxKind[Identifier](561,2): RelationalExpression
SyntaxKind[OpenBracketToken](561,22): [
SyntaxKind[QuestionToken](561,23): ?
SyntaxKind[Identifier](561,24): In
SyntaxKind[CommaToken](561,26): ,
SyntaxKind[QuestionToken](561,28): ?
SyntaxKind[Identifier](561,29): Yield
SyntaxKind[CloseBracketToken](561,34): ]
SyntaxKind[LineTerminatorToken](562,1): «line terminator»
SyntaxKind[Identifier](562,2): EqualityExpression
SyntaxKind[OpenBracketToken](562,20): [
SyntaxKind[QuestionToken](562,21): ?
SyntaxKind[Identifier](562,22): In
SyntaxKind[CommaToken](562,24): ,
SyntaxKind[QuestionToken](562,26): ?
SyntaxKind[Identifier](562,27): Yield
SyntaxKind[CloseBracketToken](562,32): ]
SyntaxKind[Terminal](562,34): `==`
SyntaxKind[Identifier](562,39): RelationalExpression
SyntaxKind[OpenBracketToken](562,59): [
SyntaxKind[QuestionToken](562,60): ?
SyntaxKind[Identifier](562,61): In
SyntaxKind[CommaToken](562,63): ,
SyntaxKind[QuestionToken](562,65): ?
SyntaxKind[Identifier](562,66): Yield
SyntaxKind[CloseBracketToken](562,71): ]
SyntaxKind[LineTerminatorToken](563,1): «line terminator»
SyntaxKind[Identifier](563,2): EqualityExpression
SyntaxKind[OpenBracketToken](563,20): [
SyntaxKind[QuestionToken](563,21): ?
SyntaxKind[Identifier](563,22): In
SyntaxKind[CommaToken](563,24): ,
SyntaxKind[QuestionToken](563,26): ?
SyntaxKind[Identifier](563,27): Yield
SyntaxKind[CloseBracketToken](563,32): ]
SyntaxKind[Terminal](563,34): `!=`
SyntaxKind[Identifier](563,39): RelationalExpression
SyntaxKind[OpenBracketToken](563,59): [
SyntaxKind[QuestionToken](563,60): ?
SyntaxKind[Identifier](563,61): In
SyntaxKind[CommaToken](563,63): ,
SyntaxKind[QuestionToken](563,65): ?
SyntaxKind[Identifier](563,66): Yield
SyntaxKind[CloseBracketToken](563,71): ]
SyntaxKind[LineTerminatorToken](564,1): «line terminator»
SyntaxKind[Identifier](564,2): EqualityExpression
SyntaxKind[OpenBracketToken](564,20): [
SyntaxKind[QuestionToken](564,21): ?
SyntaxKind[Identifier](564,22): In
SyntaxKind[CommaToken](564,24): ,
SyntaxKind[QuestionToken](564,26): ?
SyntaxKind[Identifier](564,27): Yield
SyntaxKind[CloseBracketToken](564,32): ]
SyntaxKind[Terminal](564,34): `===`
SyntaxKind[Identifier](564,40): RelationalExpression
SyntaxKind[OpenBracketToken](564,60): [
SyntaxKind[QuestionToken](564,61): ?
SyntaxKind[Identifier](564,62): In
SyntaxKind[CommaToken](564,64): ,
SyntaxKind[QuestionToken](564,66): ?
SyntaxKind[Identifier](564,67): Yield
SyntaxKind[CloseBracketToken](564,72): ]
SyntaxKind[LineTerminatorToken](565,1): «line terminator»
SyntaxKind[Identifier](565,2): EqualityExpression
SyntaxKind[OpenBracketToken](565,20): [
SyntaxKind[QuestionToken](565,21): ?
SyntaxKind[Identifier](565,22): In
SyntaxKind[CommaToken](565,24): ,
SyntaxKind[QuestionToken](565,26): ?
SyntaxKind[Identifier](565,27): Yield
SyntaxKind[CloseBracketToken](565,32): ]
SyntaxKind[Terminal](565,34): `!==`
SyntaxKind[Identifier](565,40): RelationalExpression
SyntaxKind[OpenBracketToken](565,60): [
SyntaxKind[QuestionToken](565,61): ?
SyntaxKind[Identifier](565,62): In
SyntaxKind[CommaToken](565,64): ,
SyntaxKind[QuestionToken](565,66): ?
SyntaxKind[Identifier](565,67): Yield
SyntaxKind[CloseBracketToken](565,72): ]
SyntaxKind[LineTerminatorToken](566,1): «line terminator»
SyntaxKind[DedentToken](566,1): «dedent»
SyntaxKind[LineTerminatorToken](567,1): «line terminator»
SyntaxKind[Identifier](567,1): BitwiseANDExpression
SyntaxKind[OpenBracketToken](567,21): [
SyntaxKind[Identifier](567,22): In
SyntaxKind[CommaToken](567,24): ,
SyntaxKind[Identifier](567,26): Yield
SyntaxKind[CloseBracketToken](567,31): ]
SyntaxKind[ColonToken](567,33): :
SyntaxKind[LineTerminatorToken](568,1): «line terminator»
SyntaxKind[IndentToken](568,1): «indent»
SyntaxKind[Identifier](568,2): EqualityExpression
SyntaxKind[OpenBracketToken](568,20): [
SyntaxKind[QuestionToken](568,21): ?
SyntaxKind[Identifier](568,22): In
SyntaxKind[CommaToken](568,24): ,
SyntaxKind[QuestionToken](568,26): ?
SyntaxKind[Identifier](568,27): Yield
SyntaxKind[CloseBracketToken](568,32): ]
SyntaxKind[LineTerminatorToken](569,1): «line terminator»
SyntaxKind[Identifier](569,2): BitwiseANDExpression
SyntaxKind[OpenBracketToken](569,22): [
SyntaxKind[QuestionToken](569,23): ?
SyntaxKind[Identifier](569,24): In
SyntaxKind[CommaToken](569,26): ,
SyntaxKind[QuestionToken](569,28): ?
SyntaxKind[Identifier](569,29): Yield
SyntaxKind[CloseBracketToken](569,34): ]
SyntaxKind[Terminal](569,36): `&`
SyntaxKind[Identifier](569,40): EqualityExpression
SyntaxKind[OpenBracketToken](569,58): [
SyntaxKind[QuestionToken](569,59): ?
SyntaxKind[Identifier](569,60): In
SyntaxKind[CommaToken](569,62): ,
SyntaxKind[QuestionToken](569,64): ?
SyntaxKind[Identifier](569,65): Yield
SyntaxKind[CloseBracketToken](569,70): ]
SyntaxKind[LineTerminatorToken](570,1): «line terminator»
SyntaxKind[DedentToken](570,1): «dedent»
SyntaxKind[LineTerminatorToken](571,1): «line terminator»
SyntaxKind[Identifier](571,1): BitwiseXORExpression
SyntaxKind[OpenBracketToken](571,21): [
SyntaxKind[Identifier](571,22): In
SyntaxKind[CommaToken](571,24): ,
SyntaxKind[Identifier](571,26): Yield
SyntaxKind[CloseBracketToken](571,31): ]
SyntaxKind[ColonToken](571,33): :
SyntaxKind[LineTerminatorToken](572,1): «line terminator»
SyntaxKind[IndentToken](572,1): «indent»
SyntaxKind[Identifier](572,2): BitwiseANDExpression
SyntaxKind[OpenBracketToken](572,22): [
SyntaxKind[QuestionToken](572,23): ?
SyntaxKind[Identifier](572,24): In
SyntaxKind[CommaToken](572,26): ,
SyntaxKind[QuestionToken](572,28): ?
SyntaxKind[Identifier](572,29): Yield
SyntaxKind[CloseBracketToken](572,34): ]
SyntaxKind[LineTerminatorToken](573,1): «line terminator»
SyntaxKind[Identifier](573,2): BitwiseXORExpression
SyntaxKind[OpenBracketToken](573,22): [
SyntaxKind[QuestionToken](573,23): ?
SyntaxKind[Identifier](573,24): In
SyntaxKind[CommaToken](573,26): ,
SyntaxKind[QuestionToken](573,28): ?
SyntaxKind[Identifier](573,29): Yield
SyntaxKind[CloseBracketToken](573,34): ]
SyntaxKind[Terminal](573,36): `^`
SyntaxKind[Identifier](573,40): BitwiseANDExpression
SyntaxKind[OpenBracketToken](573,60): [
SyntaxKind[QuestionToken](573,61): ?
SyntaxKind[Identifier](573,62): In
SyntaxKind[CommaToken](573,64): ,
SyntaxKind[QuestionToken](573,66): ?
SyntaxKind[Identifier](573,67): Yield
SyntaxKind[CloseBracketToken](573,72): ]
SyntaxKind[LineTerminatorToken](574,1): «line terminator»
SyntaxKind[DedentToken](574,1): «dedent»
SyntaxKind[LineTerminatorToken](575,1): «line terminator»
SyntaxKind[Identifier](575,1): BitwiseORExpression
SyntaxKind[OpenBracketToken](575,20): [
SyntaxKind[Identifier](575,21): In
SyntaxKind[CommaToken](575,23): ,
SyntaxKind[Identifier](575,25): Yield
SyntaxKind[CloseBracketToken](575,30): ]
SyntaxKind[ColonToken](575,32): :
SyntaxKind[LineTerminatorToken](576,1): «line terminator»
SyntaxKind[IndentToken](576,1): «indent»
SyntaxKind[Identifier](576,2): BitwiseXORExpression
SyntaxKind[OpenBracketToken](576,22): [
SyntaxKind[QuestionToken](576,23): ?
SyntaxKind[Identifier](576,24): In
SyntaxKind[CommaToken](576,26): ,
SyntaxKind[QuestionToken](576,28): ?
SyntaxKind[Identifier](576,29): Yield
SyntaxKind[CloseBracketToken](576,34): ]
SyntaxKind[LineTerminatorToken](577,1): «line terminator»
SyntaxKind[Identifier](577,2): BitwiseORExpression
SyntaxKind[OpenBracketToken](577,21): [
SyntaxKind[QuestionToken](577,22): ?
SyntaxKind[Identifier](577,23): In
SyntaxKind[CommaToken](577,25): ,
SyntaxKind[QuestionToken](577,27): ?
SyntaxKind[Identifier](577,28): Yield
SyntaxKind[CloseBracketToken](577,33): ]
SyntaxKind[Terminal](577,35): `|`
SyntaxKind[Identifier](577,39): BitwiseXORExpression
SyntaxKind[OpenBracketToken](577,59): [
SyntaxKind[QuestionToken](577,60): ?
SyntaxKind[Identifier](577,61): In
SyntaxKind[CommaToken](577,63): ,
SyntaxKind[QuestionToken](577,65): ?
SyntaxKind[Identifier](577,66): Yield
SyntaxKind[CloseBracketToken](577,71): ]
SyntaxKind[LineTerminatorToken](578,1): «line terminator»
SyntaxKind[DedentToken](578,1): «dedent»
SyntaxKind[LineTerminatorToken](579,1): «line terminator»
SyntaxKind[Identifier](579,1): LogicalANDExpression
SyntaxKind[OpenBracketToken](579,21): [
SyntaxKind[Identifier](579,22): In
SyntaxKind[CommaToken](579,24): ,
SyntaxKind[Identifier](579,26): Yield
SyntaxKind[CloseBracketToken](579,31): ]
SyntaxKind[ColonToken](579,33): :
SyntaxKind[LineTerminatorToken](580,1): «line terminator»
SyntaxKind[IndentToken](580,1): «indent»
SyntaxKind[Identifier](580,2): BitwiseORExpression
SyntaxKind[OpenBracketToken](580,21): [
SyntaxKind[QuestionToken](580,22): ?
SyntaxKind[Identifier](580,23): In
SyntaxKind[CommaToken](580,25): ,
SyntaxKind[QuestionToken](580,27): ?
SyntaxKind[Identifier](580,28): Yield
SyntaxKind[CloseBracketToken](580,33): ]
SyntaxKind[LineTerminatorToken](581,1): «line terminator»
SyntaxKind[Identifier](581,2): LogicalANDExpression
SyntaxKind[OpenBracketToken](581,22): [
SyntaxKind[QuestionToken](581,23): ?
SyntaxKind[Identifier](581,24): In
SyntaxKind[CommaToken](581,26): ,
SyntaxKind[QuestionToken](581,28): ?
SyntaxKind[Identifier](581,29): Yield
SyntaxKind[CloseBracketToken](581,34): ]
SyntaxKind[Terminal](581,36): `&&`
SyntaxKind[Identifier](581,41): BitwiseORExpression
SyntaxKind[OpenBracketToken](581,60): [
SyntaxKind[QuestionToken](581,61): ?
SyntaxKind[Identifier](581,62): In
SyntaxKind[CommaToken](581,64): ,
SyntaxKind[QuestionToken](581,66): ?
SyntaxKind[Identifier](581,67): Yield
SyntaxKind[CloseBracketToken](581,72): ]
SyntaxKind[LineTerminatorToken](582,1): «line terminator»
SyntaxKind[DedentToken](582,1): «dedent»
SyntaxKind[LineTerminatorToken](583,1): «line terminator»
SyntaxKind[Identifier](583,1): LogicalORExpression
SyntaxKind[OpenBracketToken](583,20): [
SyntaxKind[Identifier](583,21): In
SyntaxKind[CommaToken](583,23): ,
SyntaxKind[Identifier](583,25): Yield
SyntaxKind[CloseBracketToken](583,30): ]
SyntaxKind[ColonToken](583,32): :
SyntaxKind[LineTerminatorToken](584,1): «line terminator»
SyntaxKind[IndentToken](584,1): «indent»
SyntaxKind[Identifier](584,2): LogicalANDExpression
SyntaxKind[OpenBracketToken](584,22): [
SyntaxKind[QuestionToken](584,23): ?
SyntaxKind[Identifier](584,24): In
SyntaxKind[CommaToken](584,26): ,
SyntaxKind[QuestionToken](584,28): ?
SyntaxKind[Identifier](584,29): Yield
SyntaxKind[CloseBracketToken](584,34): ]
SyntaxKind[LineTerminatorToken](585,1): «line terminator»
SyntaxKind[Identifier](585,2): LogicalORExpression
SyntaxKind[OpenBracketToken](585,21): [
SyntaxKind[QuestionToken](585,22): ?
SyntaxKind[Identifier](585,23): In
SyntaxKind[CommaToken](585,25): ,
SyntaxKind[QuestionToken](585,27): ?
SyntaxKind[Identifier](585,28): Yield
SyntaxKind[CloseBracketToken](585,33): ]
SyntaxKind[Terminal](585,35): `||`
SyntaxKind[Identifier](585,40): LogicalANDExpression
SyntaxKind[OpenBracketToken](585,60): [
SyntaxKind[QuestionToken](585,61): ?
SyntaxKind[Identifier](585,62): In
SyntaxKind[CommaToken](585,64): ,
SyntaxKind[QuestionToken](585,66): ?
SyntaxKind[Identifier](585,67): Yield
SyntaxKind[CloseBracketToken](585,72): ]
SyntaxKind[LineTerminatorToken](586,1): «line terminator»
SyntaxKind[DedentToken](586,1): «dedent»
SyntaxKind[LineTerminatorToken](587,1): «line terminator»
SyntaxKind[Identifier](587,1): ConditionalExpression
SyntaxKind[OpenBracketToken](587,22): [
SyntaxKind[Identifier](587,23): In
SyntaxKind[CommaToken](587,25): ,
SyntaxKind[Identifier](587,27): Yield
SyntaxKind[CloseBracketToken](587,32): ]
SyntaxKind[ColonToken](587,34): :
SyntaxKind[LineTerminatorToken](588,1): «line terminator»
SyntaxKind[IndentToken](588,1): «indent»
SyntaxKind[Identifier](588,2): LogicalORExpression
SyntaxKind[OpenBracketToken](588,21): [
SyntaxKind[QuestionToken](588,22): ?
SyntaxKind[Identifier](588,23): In
SyntaxKind[CommaToken](588,25): ,
SyntaxKind[QuestionToken](588,27): ?
SyntaxKind[Identifier](588,28): Yield
SyntaxKind[CloseBracketToken](588,33): ]
SyntaxKind[LineTerminatorToken](589,1): «line terminator»
SyntaxKind[Identifier](589,2): LogicalORExpression
SyntaxKind[OpenBracketToken](589,21): [
SyntaxKind[QuestionToken](589,22): ?
SyntaxKind[Identifier](589,23): In
SyntaxKind[CommaToken](589,25): ,
SyntaxKind[QuestionToken](589,27): ?
SyntaxKind[Identifier](589,28): Yield
SyntaxKind[CloseBracketToken](589,33): ]
SyntaxKind[Terminal](589,35): `?`
SyntaxKind[Identifier](589,39): AssignmentExpression
SyntaxKind[OpenBracketToken](589,59): [
SyntaxKind[Identifier](589,60): In
SyntaxKind[CommaToken](589,62): ,
SyntaxKind[QuestionToken](589,64): ?
SyntaxKind[Identifier](589,65): Yield
SyntaxKind[CloseBracketToken](589,70): ]
SyntaxKind[Terminal](589,72): `:`
SyntaxKind[Identifier](589,76): AssignmentExpression
SyntaxKind[OpenBracketToken](589,96): [
SyntaxKind[QuestionToken](589,97): ?
SyntaxKind[Identifier](589,98): In
SyntaxKind[CommaToken](589,100): ,
SyntaxKind[QuestionToken](589,102): ?
SyntaxKind[Identifier](589,103): Yield
SyntaxKind[CloseBracketToken](589,108): ]
SyntaxKind[LineTerminatorToken](590,1): «line terminator»
SyntaxKind[DedentToken](590,1): «dedent»
SyntaxKind[LineTerminatorToken](591,1): «line terminator»
SyntaxKind[Identifier](591,1): AssignmentExpression
SyntaxKind[OpenBracketToken](591,21): [
SyntaxKind[Identifier](591,22): In
SyntaxKind[CommaToken](591,24): ,
SyntaxKind[Identifier](591,26): Yield
SyntaxKind[CloseBracketToken](591,31): ]
SyntaxKind[ColonToken](591,33): :
SyntaxKind[LineTerminatorToken](592,1): «line terminator»
SyntaxKind[IndentToken](592,1): «indent»
SyntaxKind[Identifier](592,2): ConditionalExpression
SyntaxKind[OpenBracketToken](592,23): [
SyntaxKind[QuestionToken](592,24): ?
SyntaxKind[Identifier](592,25): In
SyntaxKind[CommaToken](592,27): ,
SyntaxKind[QuestionToken](592,29): ?
SyntaxKind[Identifier](592,30): Yield
SyntaxKind[CloseBracketToken](592,35): ]
SyntaxKind[LineTerminatorToken](593,1): «line terminator»
SyntaxKind[OpenBracketToken](593,2): [
SyntaxKind[PlusToken](593,3): +
SyntaxKind[Identifier](593,4): Yield
SyntaxKind[CloseBracketToken](593,9): ]
SyntaxKind[Identifier](593,11): YieldExpression
SyntaxKind[OpenBracketToken](593,26): [
SyntaxKind[QuestionToken](593,27): ?
SyntaxKind[Identifier](593,28): In
SyntaxKind[CloseBracketToken](593,30): ]
SyntaxKind[LineTerminatorToken](594,1): «line terminator»
SyntaxKind[Identifier](594,2): ArrowFunction
SyntaxKind[OpenBracketToken](594,15): [
SyntaxKind[QuestionToken](594,16): ?
SyntaxKind[Identifier](594,17): In
SyntaxKind[CommaToken](594,19): ,
SyntaxKind[QuestionToken](594,21): ?
SyntaxKind[Identifier](594,22): Yield
SyntaxKind[CloseBracketToken](594,27): ]
SyntaxKind[LineTerminatorToken](595,1): «line terminator»
SyntaxKind[Identifier](595,2): LeftHandSideExpression
SyntaxKind[OpenBracketToken](595,24): [
SyntaxKind[QuestionToken](595,25): ?
SyntaxKind[Identifier](595,26): Yield
SyntaxKind[CloseBracketToken](595,31): ]
SyntaxKind[Terminal](595,33): `=`
SyntaxKind[Identifier](595,37): AssignmentExpression
SyntaxKind[OpenBracketToken](595,57): [
SyntaxKind[QuestionToken](595,58): ?
SyntaxKind[Identifier](595,59): In
SyntaxKind[CommaToken](595,61): ,
SyntaxKind[QuestionToken](595,63): ?
SyntaxKind[Identifier](595,64): Yield
SyntaxKind[CloseBracketToken](595,69): ]
SyntaxKind[LineTerminatorToken](596,1): «line terminator»
SyntaxKind[Identifier](596,2): LeftHandSideExpression
SyntaxKind[OpenBracketToken](596,24): [
SyntaxKind[QuestionToken](596,25): ?
SyntaxKind[Identifier](596,26): Yield
SyntaxKind[CloseBracketToken](596,31): ]
SyntaxKind[Identifier](596,33): AssignmentOperator
SyntaxKind[Identifier](596,52): AssignmentExpression
SyntaxKind[OpenBracketToken](596,72): [
SyntaxKind[QuestionToken](596,73): ?
SyntaxKind[Identifier](596,74): In
SyntaxKind[CommaToken](596,76): ,
SyntaxKind[QuestionToken](596,78): ?
SyntaxKind[Identifier](596,79): Yield
SyntaxKind[CloseBracketToken](596,84): ]
SyntaxKind[LineTerminatorToken](597,1): «line terminator»
SyntaxKind[DedentToken](597,1): «dedent»
SyntaxKind[LineTerminatorToken](598,1): «line terminator»
SyntaxKind[Identifier](598,1): AssignmentOperator
SyntaxKind[ColonToken](598,20): :
SyntaxKind[OneKeyword](598,22): one
SyntaxKind[OfKeyword](598,26): of
SyntaxKind[LineTerminatorToken](599,1): «line terminator»
SyntaxKind[IndentToken](599,1): «indent»
SyntaxKind[Terminal](599,2): `*=`
SyntaxKind[Terminal](599,7): `/=`
SyntaxKind[Terminal](599,12): `%=`
SyntaxKind[Terminal](599,17): `+=`
SyntaxKind[Terminal](599,22): `-=`
SyntaxKind[Terminal](599,27): `<<=`
SyntaxKind[Terminal](599,33): `>>=`
SyntaxKind[Terminal](599,39): `>>>=`
SyntaxKind[Terminal](599,46): `&=`
SyntaxKind[Terminal](599,51): `^=`
SyntaxKind[Terminal](599,56): `|=`
SyntaxKind[LineTerminatorToken](600,1): «line terminator»
SyntaxKind[DedentToken](600,1): «dedent»
SyntaxKind[LineTerminatorToken](601,1): «line terminator»
SyntaxKind[Identifier](601,1): Expression
SyntaxKind[OpenBracketToken](601,11): [
SyntaxKind[Identifier](601,12): In
SyntaxKind[CommaToken](601,14): ,
SyntaxKind[Identifier](601,16): Yield
SyntaxKind[CloseBracketToken](601,21): ]
SyntaxKind[ColonToken](601,23): :
SyntaxKind[LineTerminatorToken](602,1): «line terminator»
SyntaxKind[IndentToken](602,1): «indent»
SyntaxKind[Identifier](602,2): AssignmentExpression
SyntaxKind[OpenBracketToken](602,22): [
SyntaxKind[QuestionToken](602,23): ?
SyntaxKind[Identifier](602,24): In
SyntaxKind[CommaToken](602,26): ,
SyntaxKind[QuestionToken](602,28): ?
SyntaxKind[Identifier](602,29): Yield
SyntaxKind[CloseBracketToken](602,34): ]
SyntaxKind[LineTerminatorToken](603,1): «line terminator»
SyntaxKind[Identifier](603,2): Expression
SyntaxKind[OpenBracketToken](603,12): [
SyntaxKind[QuestionToken](603,13): ?
SyntaxKind[Identifier](603,14): In
SyntaxKind[CommaToken](603,16): ,
SyntaxKind[QuestionToken](603,18): ?
SyntaxKind[Identifier](603,19): Yield
SyntaxKind[CloseBracketToken](603,24): ]
SyntaxKind[Terminal](603,26): `,`
SyntaxKind[Identifier](603,30): AssignmentExpression
SyntaxKind[OpenBracketToken](603,50): [
SyntaxKind[QuestionToken](603,51): ?
SyntaxKind[Identifier](603,52): In
SyntaxKind[CommaToken](603,54): ,
SyntaxKind[QuestionToken](603,56): ?
SyntaxKind[Identifier](603,57): Yield
SyntaxKind[CloseBracketToken](603,62): ]
SyntaxKind[LineTerminatorToken](604,1): «line terminator»
SyntaxKind[DedentToken](604,1): «dedent»
SyntaxKind[LineTerminatorToken](605,1): «line terminator»
SyntaxKind[LineTerminatorToken](606,1): «line terminator»
SyntaxKind[LineTerminatorToken](607,1): «line terminator»
SyntaxKind[Identifier](607,1): Statement
SyntaxKind[OpenBracketToken](607,10): [
SyntaxKind[Identifier](607,11): Yield
SyntaxKind[CommaToken](607,16): ,
SyntaxKind[Identifier](607,18): Return
SyntaxKind[CloseBracketToken](607,24): ]
SyntaxKind[ColonToken](607,26): :
SyntaxKind[LineTerminatorToken](608,1): «line terminator»
SyntaxKind[IndentToken](608,1): «indent»
SyntaxKind[Identifier](608,2): BlockStatement
SyntaxKind[OpenBracketToken](608,16): [
SyntaxKind[QuestionToken](608,17): ?
SyntaxKind[Identifier](608,18): Yield
SyntaxKind[CommaToken](608,23): ,
SyntaxKind[QuestionToken](608,25): ?
SyntaxKind[Identifier](608,26): Return
SyntaxKind[CloseBracketToken](608,32): ]
SyntaxKind[LineTerminatorToken](609,1): «line terminator»
SyntaxKind[Identifier](609,2): VariableStatement
SyntaxKind[OpenBracketToken](609,19): [
SyntaxKind[QuestionToken](609,20): ?
SyntaxKind[Identifier](609,21): Yield
SyntaxKind[CloseBracketToken](609,26): ]
SyntaxKind[LineTerminatorToken](610,1): «line terminator»
SyntaxKind[Identifier](610,2): EmptyStatement
SyntaxKind[LineTerminatorToken](611,1): «line terminator»
SyntaxKind[Identifier](611,2): ExpressionStatement
SyntaxKind[OpenBracketToken](611,21): [
SyntaxKind[QuestionToken](611,22): ?
SyntaxKind[Identifier](611,23): Yield
SyntaxKind[CloseBracketToken](611,28): ]
SyntaxKind[LineTerminatorToken](612,1): «line terminator»
SyntaxKind[Identifier](612,2): IfStatement
SyntaxKind[OpenBracketToken](612,13): [
SyntaxKind[QuestionToken](612,14): ?
SyntaxKind[Identifier](612,15): Yield
SyntaxKind[CommaToken](612,20): ,
SyntaxKind[QuestionToken](612,22): ?
SyntaxKind[Identifier](612,23): Return
SyntaxKind[CloseBracketToken](612,29): ]
SyntaxKind[LineTerminatorToken](613,1): «line terminator»
SyntaxKind[Identifier](613,2): BreakableStatement
SyntaxKind[OpenBracketToken](613,20): [
SyntaxKind[QuestionToken](613,21): ?
SyntaxKind[Identifier](613,22): Yield
SyntaxKind[CommaToken](613,27): ,
SyntaxKind[QuestionToken](613,29): ?
SyntaxKind[Identifier](613,30): Return
SyntaxKind[CloseBracketToken](613,36): ]
SyntaxKind[LineTerminatorToken](614,1): «line terminator»
SyntaxKind[Identifier](614,2): ContinueStatement
SyntaxKind[OpenBracketToken](614,19): [
SyntaxKind[QuestionToken](614,20): ?
SyntaxKind[Identifier](614,21): Yield
SyntaxKind[CloseBracketToken](614,26): ]
SyntaxKind[LineTerminatorToken](615,1): «line terminator»
SyntaxKind[Identifier](615,2): BreakStatement
SyntaxKind[OpenBracketToken](615,16): [
SyntaxKind[QuestionToken](615,17): ?
SyntaxKind[Identifier](615,18): Yield
SyntaxKind[CloseBracketToken](615,23): ]
SyntaxKind[LineTerminatorToken](616,1): «line terminator»
SyntaxKind[OpenBracketToken](616,2): [
SyntaxKind[PlusToken](616,3): +
SyntaxKind[Identifier](616,4): Return
SyntaxKind[CloseBracketToken](616,10): ]
SyntaxKind[Identifier](616,12): ReturnStatement
SyntaxKind[OpenBracketToken](616,27): [
SyntaxKind[QuestionToken](616,28): ?
SyntaxKind[Identifier](616,29): Yield
SyntaxKind[CloseBracketToken](616,34): ]
SyntaxKind[LineTerminatorToken](617,1): «line terminator»
SyntaxKind[Identifier](617,2): WithStatement
SyntaxKind[OpenBracketToken](617,15): [
SyntaxKind[QuestionToken](617,16): ?
SyntaxKind[Identifier](617,17): Yield
SyntaxKind[CommaToken](617,22): ,
SyntaxKind[QuestionToken](617,24): ?
SyntaxKind[Identifier](617,25): Return
SyntaxKind[CloseBracketToken](617,31): ]
SyntaxKind[LineTerminatorToken](618,1): «line terminator»
SyntaxKind[Identifier](618,2): LabelledStatement
SyntaxKind[OpenBracketToken](618,19): [
SyntaxKind[QuestionToken](618,20): ?
SyntaxKind[Identifier](618,21): Yield
SyntaxKind[CommaToken](618,26): ,
SyntaxKind[QuestionToken](618,28): ?
SyntaxKind[Identifier](618,29): Return
SyntaxKind[CloseBracketToken](618,35): ]
SyntaxKind[LineTerminatorToken](619,1): «line terminator»
SyntaxKind[Identifier](619,2): ThrowStatement
SyntaxKind[OpenBracketToken](619,16): [
SyntaxKind[QuestionToken](619,17): ?
SyntaxKind[Identifier](619,18): Yield
SyntaxKind[CloseBracketToken](619,23): ]
SyntaxKind[LineTerminatorToken](620,1): «line terminator»
SyntaxKind[Identifier](620,2): TryStatement
SyntaxKind[OpenBracketToken](620,14): [
SyntaxKind[QuestionToken](620,15): ?
SyntaxKind[Identifier](620,16): Yield
SyntaxKind[CommaToken](620,21): ,
SyntaxKind[QuestionToken](620,23): ?
SyntaxKind[Identifier](620,24): Return
SyntaxKind[CloseBracketToken](620,30): ]
SyntaxKind[LineTerminatorToken](621,1): «line terminator»
SyntaxKind[Identifier](621,2): DebuggerStatement
SyntaxKind[LineTerminatorToken](622,1): «line terminator»
SyntaxKind[DedentToken](622,1): «dedent»
SyntaxKind[LineTerminatorToken](623,1): «line terminator»
SyntaxKind[Identifier](623,1): Declaration
SyntaxKind[OpenBracketToken](623,12): [
SyntaxKind[Identifier](623,13): Yield
SyntaxKind[CloseBracketToken](623,18): ]
SyntaxKind[ColonToken](623,20): :
SyntaxKind[LineTerminatorToken](624,1): «line terminator»
SyntaxKind[IndentToken](624,1): «indent»
SyntaxKind[Identifier](624,2): HoistableDeclaration
SyntaxKind[OpenBracketToken](624,22): [
SyntaxKind[QuestionToken](624,23): ?
SyntaxKind[Identifier](624,24): Yield
SyntaxKind[CloseBracketToken](624,29): ]
SyntaxKind[LineTerminatorToken](625,1): «line terminator»
SyntaxKind[Identifier](625,2): ClassDeclaration
SyntaxKind[OpenBracketToken](625,18): [
SyntaxKind[QuestionToken](625,19): ?
SyntaxKind[Identifier](625,20): Yield
SyntaxKind[CloseBracketToken](625,25): ]
SyntaxKind[LineTerminatorToken](626,1): «line terminator»
SyntaxKind[Identifier](626,2): LexicalDeclaration
SyntaxKind[OpenBracketToken](626,20): [
SyntaxKind[Identifier](626,21): In
SyntaxKind[CommaToken](626,23): ,
SyntaxKind[QuestionToken](626,25): ?
SyntaxKind[Identifier](626,26): Yield
SyntaxKind[CloseBracketToken](626,31): ]
SyntaxKind[LineTerminatorToken](627,1): «line terminator»
SyntaxKind[DedentToken](627,1): «dedent»
SyntaxKind[LineTerminatorToken](628,1): «line terminator»
SyntaxKind[Identifier](628,1): HoistableDeclaration
SyntaxKind[OpenBracketToken](628,21): [
SyntaxKind[Identifier](628,22): Yield
SyntaxKind[CommaToken](628,27): ,
SyntaxKind[Identifier](628,29): Default
SyntaxKind[CloseBracketToken](628,36): ]
SyntaxKind[ColonToken](628,38): :
SyntaxKind[LineTerminatorToken](629,1): «line terminator»
SyntaxKind[IndentToken](629,1): «indent»
SyntaxKind[Identifier](629,2): FunctionDeclaration
SyntaxKind[OpenBracketToken](629,21): [
SyntaxKind[QuestionToken](629,22): ?
SyntaxKind[Identifier](629,23): Yield
SyntaxKind[CommaToken](629,28): ,
SyntaxKind[QuestionToken](629,30): ?
SyntaxKind[Identifier](629,31): Default
SyntaxKind[CloseBracketToken](629,38): ]
SyntaxKind[LineTerminatorToken](630,1): «line terminator»
SyntaxKind[Identifier](630,2): GeneratorDeclaration
SyntaxKind[OpenBracketToken](630,22): [
SyntaxKind[QuestionToken](630,23): ?
SyntaxKind[Identifier](630,24): Yield
SyntaxKind[CommaToken](630,29): ,
SyntaxKind[QuestionToken](630,31): ?
SyntaxKind[Identifier](630,32): Default
SyntaxKind[CloseBracketToken](630,39): ]
SyntaxKind[LineTerminatorToken](631,1): «line terminator»
SyntaxKind[DedentToken](631,1): «dedent»
SyntaxKind[LineTerminatorToken](632,1): «line terminator»
SyntaxKind[Identifier](632,1): BreakableStatement
SyntaxKind[OpenBracketToken](632,19): [
SyntaxKind[Identifier](632,20): Yield
SyntaxKind[CommaToken](632,25): ,
SyntaxKind[Identifier](632,27): Return
SyntaxKind[CloseBracketToken](632,33): ]
SyntaxKind[ColonToken](632,35): :
SyntaxKind[LineTerminatorToken](633,1): «line terminator»
SyntaxKind[IndentToken](633,1): «indent»
SyntaxKind[Identifier](633,2): IterationStatement
SyntaxKind[OpenBracketToken](633,20): [
SyntaxKind[QuestionToken](633,21): ?
SyntaxKind[Identifier](633,22): Yield
SyntaxKind[CommaToken](633,27): ,
SyntaxKind[QuestionToken](633,29): ?
SyntaxKind[Identifier](633,30): Return
SyntaxKind[CloseBracketToken](633,36): ]
SyntaxKind[LineTerminatorToken](634,1): «line terminator»
SyntaxKind[Identifier](634,2): SwitchStatement
SyntaxKind[OpenBracketToken](634,17): [
SyntaxKind[QuestionToken](634,18): ?
SyntaxKind[Identifier](634,19): Yield
SyntaxKind[CommaToken](634,24): ,
SyntaxKind[QuestionToken](634,26): ?
SyntaxKind[Identifier](634,27): Return
SyntaxKind[CloseBracketToken](634,33): ]
SyntaxKind[LineTerminatorToken](635,1): «line terminator»
SyntaxKind[DedentToken](635,1): «dedent»
SyntaxKind[LineTerminatorToken](636,1): «line terminator»
SyntaxKind[Identifier](636,1): BlockStatement
SyntaxKind[OpenBracketToken](636,15): [
SyntaxKind[Identifier](636,16): Yield
SyntaxKind[CommaToken](636,21): ,
SyntaxKind[Identifier](636,23): Return
SyntaxKind[CloseBracketToken](636,29): ]
SyntaxKind[ColonToken](636,31): :
SyntaxKind[LineTerminatorToken](637,1): «line terminator»
SyntaxKind[IndentToken](637,1): «indent»
SyntaxKind[Identifier](637,2): Block
SyntaxKind[OpenBracketToken](637,7): [
SyntaxKind[QuestionToken](637,8): ?
SyntaxKind[Identifier](637,9): Yield
SyntaxKind[CommaToken](637,14): ,
SyntaxKind[QuestionToken](637,16): ?
SyntaxKind[Identifier](637,17): Return
SyntaxKind[CloseBracketToken](637,23): ]
SyntaxKind[LineTerminatorToken](638,1): «line terminator»
SyntaxKind[DedentToken](638,1): «dedent»
SyntaxKind[LineTerminatorToken](639,1): «line terminator»
SyntaxKind[Identifier](639,1): Block
SyntaxKind[OpenBracketToken](639,6): [
SyntaxKind[Identifier](639,7): Yield
SyntaxKind[CommaToken](639,12): ,
SyntaxKind[Identifier](639,14): Return
SyntaxKind[CloseBracketToken](639,20): ]
SyntaxKind[ColonToken](639,22): :
SyntaxKind[LineTerminatorToken](640,1): «line terminator»
SyntaxKind[IndentToken](640,1): «indent»
SyntaxKind[Terminal](640,2): `{`
SyntaxKind[Identifier](640,6): StatementList
SyntaxKind[OpenBracketToken](640,19): [
SyntaxKind[QuestionToken](640,20): ?
SyntaxKind[Identifier](640,21): Yield
SyntaxKind[CommaToken](640,26): ,
SyntaxKind[QuestionToken](640,28): ?
SyntaxKind[Identifier](640,29): Return
SyntaxKind[CloseBracketToken](640,35): ]
SyntaxKind[QuestionToken](640,36): ?
SyntaxKind[Terminal](640,38): `}`
SyntaxKind[LineTerminatorToken](641,1): «line terminator»
SyntaxKind[DedentToken](641,1): «dedent»
SyntaxKind[LineTerminatorToken](642,1): «line terminator»
SyntaxKind[Identifier](642,1): StatementList
SyntaxKind[OpenBracketToken](642,14): [
SyntaxKind[Identifier](642,15): Yield
SyntaxKind[CommaToken](642,20): ,
SyntaxKind[Identifier](642,22): Return
SyntaxKind[CloseBracketToken](642,28): ]
SyntaxKind[ColonToken](642,30): :
SyntaxKind[LineTerminatorToken](643,1): «line terminator»
SyntaxKind[IndentToken](643,1): «indent»
SyntaxKind[Identifier](643,2): StatementListItem
SyntaxKind[OpenBracketToken](643,19): [
SyntaxKind[QuestionToken](643,20): ?
SyntaxKind[Identifier](643,21): Yield
SyntaxKind[CommaToken](643,26): ,
SyntaxKind[QuestionToken](643,28): ?
SyntaxKind[Identifier](643,29): Return
SyntaxKind[CloseBracketToken](643,35): ]
SyntaxKind[LineTerminatorToken](644,1): «line terminator»
SyntaxKind[Identifier](644,2): StatementList
SyntaxKind[OpenBracketToken](644,15): [
SyntaxKind[QuestionToken](644,16): ?
SyntaxKind[Identifier](644,17): Yield
SyntaxKind[CommaToken](644,22): ,
SyntaxKind[QuestionToken](644,24): ?
SyntaxKind[Identifier](644,25): Return
SyntaxKind[CloseBracketToken](644,31): ]
SyntaxKind[Identifier](644,33): StatementListItem
SyntaxKind[OpenBracketToken](644,50): [
SyntaxKind[QuestionToken](644,51): ?
SyntaxKind[Identifier](644,52): Yield
SyntaxKind[CommaToken](644,57): ,
SyntaxKind[QuestionToken](644,59): ?
SyntaxKind[Identifier](644,60): Return
SyntaxKind[CloseBracketToken](644,66): ]
SyntaxKind[LineTerminatorToken](645,1): «line terminator»
SyntaxKind[DedentToken](645,1): «dedent»
SyntaxKind[LineTerminatorToken](646,1): «line terminator»
SyntaxKind[Identifier](646,1): StatementListItem
SyntaxKind[OpenBracketToken](646,18): [
SyntaxKind[Identifier](646,19): Yield
SyntaxKind[CommaToken](646,24): ,
SyntaxKind[Identifier](646,26): Return
SyntaxKind[CloseBracketToken](646,32): ]
SyntaxKind[ColonToken](646,34): :
SyntaxKind[LineTerminatorToken](647,1): «line terminator»
SyntaxKind[IndentToken](647,1): «indent»
SyntaxKind[Identifier](647,2): Statement
SyntaxKind[OpenBracketToken](647,11): [
SyntaxKind[QuestionToken](647,12): ?
SyntaxKind[Identifier](647,13): Yield
SyntaxKind[CommaToken](647,18): ,
SyntaxKind[QuestionToken](647,20): ?
SyntaxKind[Identifier](647,21): Return
SyntaxKind[CloseBracketToken](647,27): ]
SyntaxKind[LineTerminatorToken](648,1): «line terminator»
SyntaxKind[Identifier](648,2): Declaration
SyntaxKind[OpenBracketToken](648,13): [
SyntaxKind[QuestionToken](648,14): ?
SyntaxKind[Identifier](648,15): Yield
SyntaxKind[CloseBracketToken](648,20): ]
SyntaxKind[LineTerminatorToken](649,1): «line terminator»
SyntaxKind[DedentToken](649,1): «dedent»
SyntaxKind[LineTerminatorToken](650,1): «line terminator»
SyntaxKind[Identifier](650,1): LexicalDeclaration
SyntaxKind[OpenBracketToken](650,19): [
SyntaxKind[Identifier](650,20): In
SyntaxKind[CommaToken](650,22): ,
SyntaxKind[Identifier](650,24): Yield
SyntaxKind[CloseBracketToken](650,29): ]
SyntaxKind[ColonToken](650,31): :
SyntaxKind[LineTerminatorToken](651,1): «line terminator»
SyntaxKind[IndentToken](651,1): «indent»
SyntaxKind[Identifier](651,2): LetOrConst
SyntaxKind[Identifier](651,13): BindingList
SyntaxKind[OpenBracketToken](651,24): [
SyntaxKind[QuestionToken](651,25): ?
SyntaxKind[Identifier](651,26): In
SyntaxKind[CommaToken](651,28): ,
SyntaxKind[QuestionToken](651,30): ?
SyntaxKind[Identifier](651,31): Yield
SyntaxKind[CloseBracketToken](651,36): ]
SyntaxKind[Terminal](651,38): `;`
SyntaxKind[LineTerminatorToken](652,1): «line terminator»
SyntaxKind[DedentToken](652,1): «dedent»
SyntaxKind[LineTerminatorToken](653,1): «line terminator»
SyntaxKind[Identifier](653,1): LetOrConst
SyntaxKind[ColonToken](653,12): :
SyntaxKind[LineTerminatorToken](654,1): «line terminator»
SyntaxKind[IndentToken](654,1): «indent»
SyntaxKind[Terminal](654,2): `let`
SyntaxKind[LineTerminatorToken](655,1): «line terminator»
SyntaxKind[Terminal](655,2): `const`
SyntaxKind[LineTerminatorToken](656,1): «line terminator»
SyntaxKind[DedentToken](656,1): «dedent»
SyntaxKind[LineTerminatorToken](657,1): «line terminator»
SyntaxKind[Identifier](657,1): BindingList
SyntaxKind[OpenBracketToken](657,12): [
SyntaxKind[Identifier](657,13): In
SyntaxKind[CommaToken](657,15): ,
SyntaxKind[Identifier](657,17): Yield
SyntaxKind[CloseBracketToken](657,22): ]
SyntaxKind[ColonToken](657,24): :
SyntaxKind[LineTerminatorToken](658,1): «line terminator»
SyntaxKind[IndentToken](658,1): «indent»
SyntaxKind[Identifier](658,2): LexicalBinding
SyntaxKind[OpenBracketToken](658,16): [
SyntaxKind[QuestionToken](658,17): ?
SyntaxKind[Identifier](658,18): In
SyntaxKind[CommaToken](658,20): ,
SyntaxKind[QuestionToken](658,22): ?
SyntaxKind[Identifier](658,23): Yield
SyntaxKind[CloseBracketToken](658,28): ]
SyntaxKind[LineTerminatorToken](659,1): «line terminator»
SyntaxKind[Identifier](659,2): BindingList
SyntaxKind[OpenBracketToken](659,13): [
SyntaxKind[QuestionToken](659,14): ?
SyntaxKind[Identifier](659,15): In
SyntaxKind[CommaToken](659,17): ,
SyntaxKind[QuestionToken](659,19): ?
SyntaxKind[Identifier](659,20): Yield
SyntaxKind[CloseBracketToken](659,25): ]
SyntaxKind[Terminal](659,27): `,`
SyntaxKind[Identifier](659,31): LexicalBinding
SyntaxKind[OpenBracketToken](659,45): [
SyntaxKind[QuestionToken](659,46): ?
SyntaxKind[Identifier](659,47): In
SyntaxKind[CommaToken](659,49): ,
SyntaxKind[QuestionToken](659,51): ?
SyntaxKind[Identifier](659,52): Yield
SyntaxKind[CloseBracketToken](659,57): ]
SyntaxKind[LineTerminatorToken](660,1): «line terminator»
SyntaxKind[DedentToken](660,1): «dedent»
SyntaxKind[LineTerminatorToken](661,1): «line terminator»
SyntaxKind[Identifier](661,1): LexicalBinding
SyntaxKind[OpenBracketToken](661,15): [
SyntaxKind[Identifier](661,16): In
SyntaxKind[CommaToken](661,18): ,
SyntaxKind[Identifier](661,20): Yield
SyntaxKind[CloseBracketToken](661,25): ]
SyntaxKind[ColonToken](661,28): :
SyntaxKind[LineTerminatorToken](662,1): «line terminator»
SyntaxKind[IndentToken](662,1): «indent»
SyntaxKind[Identifier](662,2): BindingIdentifier
SyntaxKind[OpenBracketToken](662,19): [
SyntaxKind[QuestionToken](662,20): ?
SyntaxKind[Identifier](662,21): Yield
SyntaxKind[CloseBracketToken](662,26): ]
SyntaxKind[Identifier](662,28): Initializer
SyntaxKind[OpenBracketToken](662,39): [
SyntaxKind[QuestionToken](662,40): ?
SyntaxKind[Identifier](662,41): In
SyntaxKind[CommaToken](662,43): ,
SyntaxKind[QuestionToken](662,45): ?
SyntaxKind[Identifier](662,46): Yield
SyntaxKind[CloseBracketToken](662,51): ]
SyntaxKind[QuestionToken](662,52): ?
SyntaxKind[LineTerminatorToken](663,1): «line terminator»
SyntaxKind[Identifier](663,2): BindingPattern
SyntaxKind[OpenBracketToken](663,16): [
SyntaxKind[QuestionToken](663,17): ?
SyntaxKind[Identifier](663,18): Yield
SyntaxKind[CloseBracketToken](663,23): ]
SyntaxKind[Identifier](663,25): Initializer
SyntaxKind[OpenBracketToken](663,36): [
SyntaxKind[QuestionToken](663,37): ?
SyntaxKind[Identifier](663,38): In
SyntaxKind[CommaToken](663,40): ,
SyntaxKind[QuestionToken](663,42): ?
SyntaxKind[Identifier](663,43): Yield
SyntaxKind[CloseBracketToken](663,48): ]
SyntaxKind[LineTerminatorToken](664,1): «line terminator»
SyntaxKind[DedentToken](664,1): «dedent»
SyntaxKind[LineTerminatorToken](665,1): «line terminator»
SyntaxKind[Identifier](665,1): VariableStatement
SyntaxKind[OpenBracketToken](665,18): [
SyntaxKind[Identifier](665,19): Yield
SyntaxKind[CloseBracketToken](665,24): ]
SyntaxKind[ColonToken](665,26): :
SyntaxKind[LineTerminatorToken](666,1): «line terminator»
SyntaxKind[IndentToken](666,1): «indent»
SyntaxKind[Terminal](666,2): `var`
SyntaxKind[Identifier](666,8): VariableDeclarationList
SyntaxKind[OpenBracketToken](666,31): [
SyntaxKind[Identifier](666,32): In
SyntaxKind[CommaToken](666,34): ,
SyntaxKind[QuestionToken](666,36): ?
SyntaxKind[Identifier](666,37): Yield
SyntaxKind[CloseBracketToken](666,42): ]
SyntaxKind[Terminal](666,44): `;`
SyntaxKind[LineTerminatorToken](667,1): «line terminator»
SyntaxKind[DedentToken](667,1): «dedent»
SyntaxKind[LineTerminatorToken](668,1): «line terminator»
SyntaxKind[Identifier](668,1): VariableDeclarationList
SyntaxKind[OpenBracketToken](668,24): [
SyntaxKind[Identifier](668,25): In
SyntaxKind[CommaToken](668,27): ,
SyntaxKind[Identifier](668,29): Yield
SyntaxKind[CloseBracketToken](668,34): ]
SyntaxKind[ColonToken](668,36): :
SyntaxKind[LineTerminatorToken](669,1): «line terminator»
SyntaxKind[IndentToken](669,1): «indent»
SyntaxKind[Identifier](669,2): VariableDeclaration
SyntaxKind[OpenBracketToken](669,21): [
SyntaxKind[QuestionToken](669,22): ?
SyntaxKind[Identifier](669,23): In
SyntaxKind[CommaToken](669,25): ,
SyntaxKind[QuestionToken](669,27): ?
SyntaxKind[Identifier](669,28): Yield
SyntaxKind[CloseBracketToken](669,33): ]
SyntaxKind[LineTerminatorToken](670,1): «line terminator»
SyntaxKind[Identifier](670,2): VariableDeclarationList
SyntaxKind[OpenBracketToken](670,25): [
SyntaxKind[QuestionToken](670,26): ?
SyntaxKind[Identifier](670,27): In
SyntaxKind[CommaToken](670,29): ,
SyntaxKind[QuestionToken](670,31): ?
SyntaxKind[Identifier](670,32): Yield
SyntaxKind[CloseBracketToken](670,37): ]
SyntaxKind[Terminal](670,39): `,`
SyntaxKind[Identifier](670,43): VariableDeclaration
SyntaxKind[OpenBracketToken](670,62): [
SyntaxKind[QuestionToken](670,63): ?
SyntaxKind[Identifier](670,64): In
SyntaxKind[CommaToken](670,66): ,
SyntaxKind[QuestionToken](670,68): ?
SyntaxKind[Identifier](670,69): Yield
SyntaxKind[CloseBracketToken](670,74): ]
SyntaxKind[LineTerminatorToken](671,1): «line terminator»
SyntaxKind[DedentToken](671,1): «dedent»
SyntaxKind[LineTerminatorToken](672,1): «line terminator»
SyntaxKind[Identifier](672,1): VariableDeclaration
SyntaxKind[OpenBracketToken](672,20): [
SyntaxKind[Identifier](672,21): In
SyntaxKind[CommaToken](672,23): ,
SyntaxKind[Identifier](672,25): Yield
SyntaxKind[CloseBracketToken](672,30): ]
SyntaxKind[ColonToken](672,32): :
SyntaxKind[LineTerminatorToken](673,1): «line terminator»
SyntaxKind[IndentToken](673,1): «indent»
SyntaxKind[Identifier](673,2): BindingIdentifier
SyntaxKind[OpenBracketToken](673,19): [
SyntaxKind[QuestionToken](673,20): ?
SyntaxKind[Identifier](673,21): Yield
SyntaxKind[CloseBracketToken](673,26): ]
SyntaxKind[Identifier](673,28): Initializer
SyntaxKind[OpenBracketToken](673,39): [
SyntaxKind[QuestionToken](673,40): ?
SyntaxKind[Identifier](673,41): In
SyntaxKind[CommaToken](673,43): ,
SyntaxKind[QuestionToken](673,45): ?
SyntaxKind[Identifier](673,46): Yield
SyntaxKind[CloseBracketToken](673,51): ]
SyntaxKind[QuestionToken](673,52): ?
SyntaxKind[LineTerminatorToken](674,1): «line terminator»
SyntaxKind[Identifier](674,2): BindingPattern
SyntaxKind[OpenBracketToken](674,16): [
SyntaxKind[QuestionToken](674,17): ?
SyntaxKind[Identifier](674,18): Yield
SyntaxKind[CloseBracketToken](674,23): ]
SyntaxKind[Identifier](674,25): Initializer
SyntaxKind[OpenBracketToken](674,36): [
SyntaxKind[QuestionToken](674,37): ?
SyntaxKind[Identifier](674,38): In
SyntaxKind[CommaToken](674,40): ,
SyntaxKind[QuestionToken](674,42): ?
SyntaxKind[Identifier](674,43): Yield
SyntaxKind[CloseBracketToken](674,48): ]
SyntaxKind[LineTerminatorToken](675,1): «line terminator»
SyntaxKind[DedentToken](675,1): «dedent»
SyntaxKind[LineTerminatorToken](676,1): «line terminator»
SyntaxKind[Identifier](676,1): BindingPattern
SyntaxKind[OpenBracketToken](676,15): [
SyntaxKind[Identifier](676,16): Yield
SyntaxKind[CloseBracketToken](676,21): ]
SyntaxKind[ColonToken](676,23): :
SyntaxKind[LineTerminatorToken](677,1): «line terminator»
SyntaxKind[IndentToken](677,1): «indent»
SyntaxKind[Identifier](677,2): ObjectBindingPattern
SyntaxKind[OpenBracketToken](677,22): [
SyntaxKind[QuestionToken](677,23): ?
SyntaxKind[Identifier](677,24): Yield
SyntaxKind[CloseBracketToken](677,29): ]
SyntaxKind[LineTerminatorToken](678,1): «line terminator»
SyntaxKind[Identifier](678,2): ArrayBindingPattern
SyntaxKind[OpenBracketToken](678,21): [
SyntaxKind[QuestionToken](678,22): ?
SyntaxKind[Identifier](678,23): Yield
SyntaxKind[CloseBracketToken](678,28): ]
SyntaxKind[LineTerminatorToken](679,1): «line terminator»
SyntaxKind[DedentToken](679,1): «dedent»
SyntaxKind[LineTerminatorToken](680,1): «line terminator»
SyntaxKind[Identifier](680,1): ObjectBindingPattern
SyntaxKind[OpenBracketToken](680,21): [
SyntaxKind[Identifier](680,22): Yield
SyntaxKind[CloseBracketToken](680,27): ]
SyntaxKind[ColonToken](680,29): :
SyntaxKind[LineTerminatorToken](681,1): «line terminator»
SyntaxKind[IndentToken](681,1): «indent»
SyntaxKind[Terminal](681,2): `{`
SyntaxKind[Terminal](681,6): `}`
SyntaxKind[LineTerminatorToken](682,1): «line terminator»
SyntaxKind[Terminal](682,2): `{`
SyntaxKind[Identifier](682,6): BindingPropertyList
SyntaxKind[OpenBracketToken](682,25): [
SyntaxKind[QuestionToken](682,26): ?
SyntaxKind[Identifier](682,27): Yield
SyntaxKind[CloseBracketToken](682,32): ]
SyntaxKind[Terminal](682,34): `}`
SyntaxKind[LineTerminatorToken](683,1): «line terminator»
SyntaxKind[Terminal](683,2): `{`
SyntaxKind[Identifier](683,6): BindingPropertyList
SyntaxKind[OpenBracketToken](683,25): [
SyntaxKind[QuestionToken](683,26): ?
SyntaxKind[Identifier](683,27): Yield
SyntaxKind[CloseBracketToken](683,32): ]
SyntaxKind[Terminal](683,34): `,`
SyntaxKind[Terminal](683,38): `}`
SyntaxKind[LineTerminatorToken](684,1): «line terminator»
SyntaxKind[DedentToken](684,1): «dedent»
SyntaxKind[LineTerminatorToken](685,1): «line terminator»
SyntaxKind[Identifier](685,1): ArrayBindingPattern
SyntaxKind[OpenBracketToken](685,20): [
SyntaxKind[Identifier](685,21): Yield
SyntaxKind[CloseBracketToken](685,26): ]
SyntaxKind[ColonToken](685,28): :
SyntaxKind[LineTerminatorToken](686,1): «line terminator»
SyntaxKind[IndentToken](686,1): «indent»
SyntaxKind[Terminal](686,2): `[`
SyntaxKind[Identifier](686,6): Elision
SyntaxKind[QuestionToken](686,13): ?
SyntaxKind[Identifier](686,15): BindingRestElement
SyntaxKind[OpenBracketToken](686,33): [
SyntaxKind[QuestionToken](686,34): ?
SyntaxKind[Identifier](686,35): Yield
SyntaxKind[CloseBracketToken](686,40): ]
SyntaxKind[QuestionToken](686,41): ?
SyntaxKind[Terminal](686,43): `]`
SyntaxKind[LineTerminatorToken](687,1): «line terminator»
SyntaxKind[Terminal](687,2): `[`
SyntaxKind[Identifier](687,6): BindingElementList
SyntaxKind[OpenBracketToken](687,24): [
SyntaxKind[QuestionToken](687,25): ?
SyntaxKind[Identifier](687,26): Yield
SyntaxKind[CloseBracketToken](687,31): ]
SyntaxKind[Terminal](687,33): `]`
SyntaxKind[LineTerminatorToken](688,1): «line terminator»
SyntaxKind[Terminal](688,2): `[`
SyntaxKind[Identifier](688,6): BindingElementList
SyntaxKind[OpenBracketToken](688,24): [
SyntaxKind[QuestionToken](688,25): ?
SyntaxKind[Identifier](688,26): Yield
SyntaxKind[CloseBracketToken](688,31): ]
SyntaxKind[Terminal](688,33): `,`
SyntaxKind[Identifier](688,37): Elision
SyntaxKind[QuestionToken](688,44): ?
SyntaxKind[Identifier](688,46): BindingRestElement
SyntaxKind[OpenBracketToken](688,64): [
SyntaxKind[QuestionToken](688,65): ?
SyntaxKind[Identifier](688,66): Yield
SyntaxKind[CloseBracketToken](688,71): ]
SyntaxKind[QuestionToken](688,72): ?
SyntaxKind[Terminal](688,74): `]`
SyntaxKind[LineTerminatorToken](689,1): «line terminator»
SyntaxKind[DedentToken](689,1): «dedent»
SyntaxKind[LineTerminatorToken](690,1): «line terminator»
SyntaxKind[Identifier](690,1): BindingPropertyList
SyntaxKind[OpenBracketToken](690,20): [
SyntaxKind[Identifier](690,21): Yield
SyntaxKind[CloseBracketToken](690,26): ]
SyntaxKind[ColonToken](690,28): :
SyntaxKind[LineTerminatorToken](691,1): «line terminator»
SyntaxKind[IndentToken](691,1): «indent»
SyntaxKind[Identifier](691,2): BindingProperty
SyntaxKind[OpenBracketToken](691,17): [
SyntaxKind[QuestionToken](691,18): ?
SyntaxKind[Identifier](691,19): Yield
SyntaxKind[CloseBracketToken](691,24): ]
SyntaxKind[LineTerminatorToken](692,1): «line terminator»
SyntaxKind[Identifier](692,2): BindingPropertyList
SyntaxKind[OpenBracketToken](692,21): [
SyntaxKind[QuestionToken](692,22): ?
SyntaxKind[Identifier](692,23): Yield
SyntaxKind[CloseBracketToken](692,28): ]
SyntaxKind[Terminal](692,30): `,`
SyntaxKind[Identifier](692,34): BindingProperty
SyntaxKind[OpenBracketToken](692,49): [
SyntaxKind[QuestionToken](692,50): ?
SyntaxKind[Identifier](692,51): Yield
SyntaxKind[CloseBracketToken](692,56): ]
SyntaxKind[LineTerminatorToken](693,1): «line terminator»
SyntaxKind[DedentToken](693,1): «dedent»
SyntaxKind[LineTerminatorToken](694,1): «line terminator»
SyntaxKind[Identifier](694,1): BindingElementList
SyntaxKind[OpenBracketToken](694,19): [
SyntaxKind[Identifier](694,20): Yield
SyntaxKind[CloseBracketToken](694,25): ]
SyntaxKind[ColonToken](694,27): :
SyntaxKind[LineTerminatorToken](695,1): «line terminator»
SyntaxKind[IndentToken](695,1): «indent»
SyntaxKind[Identifier](695,2): BindingElisionElement
SyntaxKind[OpenBracketToken](695,23): [
SyntaxKind[QuestionToken](695,24): ?
SyntaxKind[Identifier](695,25): Yield
SyntaxKind[CloseBracketToken](695,30): ]
SyntaxKind[LineTerminatorToken](696,1): «line terminator»
SyntaxKind[Identifier](696,2): BindingElementList
SyntaxKind[OpenBracketToken](696,20): [
SyntaxKind[QuestionToken](696,21): ?
SyntaxKind[Identifier](696,22): Yield
SyntaxKind[CloseBracketToken](696,27): ]
SyntaxKind[Terminal](696,29): `,`
SyntaxKind[Identifier](696,33): BindingElisionElement
SyntaxKind[OpenBracketToken](696,54): [
SyntaxKind[QuestionToken](696,55): ?
SyntaxKind[Identifier](696,56): Yield
SyntaxKind[CloseBracketToken](696,61): ]
SyntaxKind[LineTerminatorToken](697,1): «line terminator»
SyntaxKind[DedentToken](697,1): «dedent»
SyntaxKind[LineTerminatorToken](698,1): «line terminator»
SyntaxKind[Identifier](698,1): BindingElisionElement
SyntaxKind[OpenBracketToken](698,22): [
SyntaxKind[Identifier](698,23): Yield
SyntaxKind[CloseBracketToken](698,28): ]
SyntaxKind[ColonToken](698,30): :
SyntaxKind[LineTerminatorToken](699,1): «line terminator»
SyntaxKind[IndentToken](699,1): «indent»
SyntaxKind[Identifier](699,2): Elision
SyntaxKind[QuestionToken](699,9): ?
SyntaxKind[Identifier](699,11): BindingElement
SyntaxKind[OpenBracketToken](699,25): [
SyntaxKind[QuestionToken](699,26): ?
SyntaxKind[Identifier](699,27): Yield
SyntaxKind[CloseBracketToken](699,32): ]
SyntaxKind[LineTerminatorToken](700,1): «line terminator»
SyntaxKind[DedentToken](700,1): «dedent»
SyntaxKind[LineTerminatorToken](701,1): «line terminator»
SyntaxKind[Identifier](701,1): BindingProperty
SyntaxKind[OpenBracketToken](701,16): [
SyntaxKind[Identifier](701,17): Yield
SyntaxKind[CloseBracketToken](701,22): ]
SyntaxKind[ColonToken](701,24): :
SyntaxKind[LineTerminatorToken](702,1): «line terminator»
SyntaxKind[IndentToken](702,1): «indent»
SyntaxKind[Identifier](702,2): SingleNameBinding
SyntaxKind[OpenBracketToken](702,19): [
SyntaxKind[QuestionToken](702,20): ?
SyntaxKind[Identifier](702,21): Yield
SyntaxKind[CloseBracketToken](702,26): ]
SyntaxKind[LineTerminatorToken](703,1): «line terminator»
SyntaxKind[Identifier](703,2): PropertyName
SyntaxKind[OpenBracketToken](703,14): [
SyntaxKind[QuestionToken](703,15): ?
SyntaxKind[Identifier](703,16): Yield
SyntaxKind[CloseBracketToken](703,21): ]
SyntaxKind[Terminal](703,23): `:`
SyntaxKind[Identifier](703,27): BindingElement
SyntaxKind[OpenBracketToken](703,41): [
SyntaxKind[QuestionToken](703,42): ?
SyntaxKind[Identifier](703,43): Yield
SyntaxKind[CloseBracketToken](703,48): ]
SyntaxKind[LineTerminatorToken](704,1): «line terminator»
SyntaxKind[DedentToken](704,1): «dedent»
SyntaxKind[LineTerminatorToken](705,1): «line terminator»
SyntaxKind[Identifier](705,1): BindingElement
SyntaxKind[OpenBracketToken](705,15): [
SyntaxKind[Identifier](705,16): Yield
SyntaxKind[CloseBracketToken](705,21): ]
SyntaxKind[ColonToken](705,23): :
SyntaxKind[LineTerminatorToken](706,1): «line terminator»
SyntaxKind[IndentToken](706,1): «indent»
SyntaxKind[Identifier](706,2): SingleNameBinding
SyntaxKind[OpenBracketToken](706,19): [
SyntaxKind[QuestionToken](706,20): ?
SyntaxKind[Identifier](706,21): Yield
SyntaxKind[CloseBracketToken](706,26): ]
SyntaxKind[LineTerminatorToken](707,1): «line terminator»
SyntaxKind[Identifier](707,2): BindingPattern
SyntaxKind[OpenBracketToken](707,16): [
SyntaxKind[QuestionToken](707,17): ?
SyntaxKind[Identifier](707,18): Yield
SyntaxKind[CloseBracketToken](707,23): ]
SyntaxKind[Identifier](707,25): Initializer
SyntaxKind[OpenBracketToken](707,36): [
SyntaxKind[Identifier](707,37): In
SyntaxKind[CommaToken](707,39): ,
SyntaxKind[QuestionToken](707,41): ?
SyntaxKind[Identifier](707,42): Yield
SyntaxKind[CloseBracketToken](707,47): ]
SyntaxKind[QuestionToken](707,48): ?
SyntaxKind[LineTerminatorToken](708,1): «line terminator»
SyntaxKind[DedentToken](708,1): «dedent»
SyntaxKind[LineTerminatorToken](709,1): «line terminator»
SyntaxKind[Identifier](709,1): SingleNameBinding
SyntaxKind[OpenBracketToken](709,18): [
SyntaxKind[Identifier](709,19): Yield
SyntaxKind[CloseBracketToken](709,24): ]
SyntaxKind[ColonToken](709,26): :
SyntaxKind[LineTerminatorToken](710,1): «line terminator»
SyntaxKind[IndentToken](710,1): «indent»
SyntaxKind[Identifier](710,2): BindingIdentifier
SyntaxKind[OpenBracketToken](710,19): [
SyntaxKind[QuestionToken](710,20): ?
SyntaxKind[Identifier](710,21): Yield
SyntaxKind[CloseBracketToken](710,26): ]
SyntaxKind[Identifier](710,28): Initializer
SyntaxKind[OpenBracketToken](710,39): [
SyntaxKind[Identifier](710,40): In
SyntaxKind[CommaToken](710,42): ,
SyntaxKind[QuestionToken](710,44): ?
SyntaxKind[Identifier](710,45): Yield
SyntaxKind[CloseBracketToken](710,50): ]
SyntaxKind[QuestionToken](710,51): ?
SyntaxKind[LineTerminatorToken](711,1): «line terminator»
SyntaxKind[DedentToken](711,1): «dedent»
SyntaxKind[LineTerminatorToken](712,1): «line terminator»
SyntaxKind[Identifier](712,1): BindingRestElement
SyntaxKind[OpenBracketToken](712,19): [
SyntaxKind[Identifier](712,20): Yield
SyntaxKind[CloseBracketToken](712,25): ]
SyntaxKind[ColonToken](712,27): :
SyntaxKind[LineTerminatorToken](713,1): «line terminator»
SyntaxKind[IndentToken](713,1): «indent»
SyntaxKind[Terminal](713,2): `...`
SyntaxKind[Identifier](713,8): BindingIdentifier
SyntaxKind[OpenBracketToken](713,25): [
SyntaxKind[QuestionToken](713,26): ?
SyntaxKind[Identifier](713,27): Yield
SyntaxKind[CloseBracketToken](713,32): ]
SyntaxKind[LineTerminatorToken](714,1): «line terminator»
SyntaxKind[DedentToken](714,1): «dedent»
SyntaxKind[LineTerminatorToken](715,1): «line terminator»
SyntaxKind[Identifier](715,1): EmptyStatement
SyntaxKind[ColonToken](715,16): :
SyntaxKind[LineTerminatorToken](716,1): «line terminator»
SyntaxKind[IndentToken](716,1): «indent»
SyntaxKind[Terminal](716,2): `;`
SyntaxKind[LineTerminatorToken](717,1): «line terminator»
SyntaxKind[DedentToken](717,1): «dedent»
SyntaxKind[LineTerminatorToken](718,1): «line terminator»
SyntaxKind[Identifier](718,1): ExpressionStatement
SyntaxKind[OpenBracketToken](718,20): [
SyntaxKind[Identifier](718,21): Yield
SyntaxKind[CloseBracketToken](718,26): ]
SyntaxKind[ColonToken](718,28): :
SyntaxKind[LineTerminatorToken](719,1): «line terminator»
SyntaxKind[IndentToken](719,1): «indent»
SyntaxKind[OpenBracketToken](719,2): [
SyntaxKind[LookaheadKeyword](719,3): lookahead
SyntaxKind[LessThanExclamationToken](719,13): <!
SyntaxKind[OpenBraceToken](719,16): {
SyntaxKind[Terminal](719,18): `{`
SyntaxKind[CommaToken](719,21): ,
SyntaxKind[Terminal](719,23): `function`
SyntaxKind[CommaToken](719,33): ,
SyntaxKind[Terminal](719,35): `class`
SyntaxKind[CommaToken](719,42): ,
SyntaxKind[Terminal](719,44): `let`
SyntaxKind[Terminal](719,50): `[`
SyntaxKind[CloseBraceToken](719,54): }
SyntaxKind[CloseBracketToken](719,55): ]
SyntaxKind[Identifier](719,57): Expression
SyntaxKind[OpenBracketToken](719,67): [
SyntaxKind[Identifier](719,68): In
SyntaxKind[CommaToken](719,70): ,
SyntaxKind[QuestionToken](719,72): ?
SyntaxKind[Identifier](719,73): Yield
SyntaxKind[CloseBracketToken](719,78): ]
SyntaxKind[Terminal](719,80): `;`
SyntaxKind[LineTerminatorToken](720,1): «line terminator»
SyntaxKind[DedentToken](720,1): «dedent»
SyntaxKind[LineTerminatorToken](721,1): «line terminator»
SyntaxKind[Identifier](721,1): IfStatement
SyntaxKind[OpenBracketToken](721,12): [
SyntaxKind[Identifier](721,13): Yield
SyntaxKind[CommaToken](721,18): ,
SyntaxKind[Identifier](721,20): Return
SyntaxKind[CloseBracketToken](721,26): ]
SyntaxKind[ColonToken](721,28): :
SyntaxKind[LineTerminatorToken](722,1): «line terminator»
SyntaxKind[IndentToken](722,1): «indent»
SyntaxKind[Terminal](722,2): `if`
SyntaxKind[Terminal](722,7): `(`
SyntaxKind[Identifier](722,11): Expression
SyntaxKind[OpenBracketToken](722,21): [
SyntaxKind[Identifier](722,22): In
SyntaxKind[CommaToken](722,24): ,
SyntaxKind[QuestionToken](722,26): ?
SyntaxKind[Identifier](722,27): Yield
SyntaxKind[CloseBracketToken](722,32): ]
SyntaxKind[Terminal](722,34): `)`
SyntaxKind[Identifier](722,38): Statement
SyntaxKind[OpenBracketToken](722,47): [
SyntaxKind[QuestionToken](722,48): ?
SyntaxKind[Identifier](722,49): Yield
SyntaxKind[CommaToken](722,54): ,
SyntaxKind[QuestionToken](722,56): ?
SyntaxKind[Identifier](722,57): Return
SyntaxKind[CloseBracketToken](722,63): ]
SyntaxKind[Terminal](722,65): `else`
SyntaxKind[Identifier](722,72): Statement
SyntaxKind[OpenBracketToken](722,81): [
SyntaxKind[QuestionToken](722,82): ?
SyntaxKind[Identifier](722,83): Yield
SyntaxKind[CommaToken](722,88): ,
SyntaxKind[QuestionToken](722,90): ?
SyntaxKind[Identifier](722,91): Return
SyntaxKind[CloseBracketToken](722,97): ]
SyntaxKind[LineTerminatorToken](723,1): «line terminator»
SyntaxKind[Terminal](723,2): `if`
SyntaxKind[Terminal](723,7): `(`
SyntaxKind[Identifier](723,11): Expression
SyntaxKind[OpenBracketToken](723,21): [
SyntaxKind[Identifier](723,22): In
SyntaxKind[CommaToken](723,24): ,
SyntaxKind[QuestionToken](723,26): ?
SyntaxKind[Identifier](723,27): Yield
SyntaxKind[CloseBracketToken](723,32): ]
SyntaxKind[Terminal](723,34): `)`
SyntaxKind[Identifier](723,38): Statement
SyntaxKind[OpenBracketToken](723,47): [
SyntaxKind[QuestionToken](723,48): ?
SyntaxKind[Identifier](723,49): Yield
SyntaxKind[CommaToken](723,54): ,
SyntaxKind[QuestionToken](723,56): ?
SyntaxKind[Identifier](723,57): Return
SyntaxKind[CloseBracketToken](723,63): ]
SyntaxKind[LineTerminatorToken](724,1): «line terminator»
SyntaxKind[DedentToken](724,1): «dedent»
SyntaxKind[LineTerminatorToken](725,1): «line terminator»
SyntaxKind[Identifier](725,1): IterationStatement
SyntaxKind[OpenBracketToken](725,19): [
SyntaxKind[Identifier](725,20): Yield
SyntaxKind[CommaToken](725,25): ,
SyntaxKind[Identifier](725,27): Return
SyntaxKind[CloseBracketToken](725,33): ]
SyntaxKind[ColonToken](725,35): :
SyntaxKind[LineTerminatorToken](726,1): «line terminator»
SyntaxKind[IndentToken](726,1): «indent»
SyntaxKind[Terminal](726,2): `do`
SyntaxKind[Identifier](726,7): Statement
SyntaxKind[OpenBracketToken](726,16): [
SyntaxKind[QuestionToken](726,17): ?
SyntaxKind[Identifier](726,18): Yield
SyntaxKind[CommaToken](726,23): ,
SyntaxKind[QuestionToken](726,25): ?
SyntaxKind[Identifier](726,26): Return
SyntaxKind[CloseBracketToken](726,32): ]
SyntaxKind[Terminal](726,34): `while`
SyntaxKind[Terminal](726,42): `(`
SyntaxKind[Identifier](726,46): Expression
SyntaxKind[OpenBracketToken](726,56): [
SyntaxKind[Identifier](726,57): In
SyntaxKind[CommaToken](726,59): ,
SyntaxKind[QuestionToken](726,61): ?
SyntaxKind[Identifier](726,62): Yield
SyntaxKind[CloseBracketToken](726,67): ]
SyntaxKind[Terminal](726,69): `)`
SyntaxKind[Terminal](726,73): `;`
SyntaxKind[LineTerminatorToken](727,1): «line terminator»
SyntaxKind[Terminal](727,2): `while`
SyntaxKind[Terminal](727,10): `(`
SyntaxKind[Identifier](727,14): Expression
SyntaxKind[OpenBracketToken](727,24): [
SyntaxKind[Identifier](727,25): In
SyntaxKind[CommaToken](727,27): ,
SyntaxKind[QuestionToken](727,29): ?
SyntaxKind[Identifier](727,30): Yield
SyntaxKind[CloseBracketToken](727,35): ]
SyntaxKind[Terminal](727,37): `)`
SyntaxKind[Identifier](727,41): Statement
SyntaxKind[OpenBracketToken](727,50): [
SyntaxKind[QuestionToken](727,51): ?
SyntaxKind[Identifier](727,52): Yield
SyntaxKind[CommaToken](727,57): ,
SyntaxKind[QuestionToken](727,59): ?
SyntaxKind[Identifier](727,60): Return
SyntaxKind[CloseBracketToken](727,66): ]
SyntaxKind[LineTerminatorToken](728,1): «line terminator»
SyntaxKind[Terminal](728,2): `for`
SyntaxKind[Terminal](728,8): `(`
SyntaxKind[OpenBracketToken](728,12): [
SyntaxKind[LookaheadKeyword](728,13): lookahead
SyntaxKind[LessThanExclamationToken](728,23): <!
SyntaxKind[OpenBraceToken](728,26): {
SyntaxKind[Terminal](728,28): `let`
SyntaxKind[Terminal](728,34): `[`
SyntaxKind[CloseBraceToken](728,38): }
SyntaxKind[CloseBracketToken](728,39): ]
SyntaxKind[Identifier](728,41): Expression
SyntaxKind[OpenBracketToken](728,51): [
SyntaxKind[QuestionToken](728,52): ?
SyntaxKind[Identifier](728,53): Yield
SyntaxKind[CloseBracketToken](728,58): ]
SyntaxKind[QuestionToken](728,59): ?
SyntaxKind[Terminal](728,61): `;`
SyntaxKind[Identifier](728,65): Expression
SyntaxKind[OpenBracketToken](728,75): [
SyntaxKind[Identifier](728,76): In
SyntaxKind[CommaToken](728,78): ,
SyntaxKind[QuestionToken](728,80): ?
SyntaxKind[Identifier](728,81): Yield
SyntaxKind[CloseBracketToken](728,86): ]
SyntaxKind[QuestionToken](728,87): ?
SyntaxKind[Terminal](728,89): `;`
SyntaxKind[Identifier](728,93): Expression
SyntaxKind[OpenBracketToken](728,103): [
SyntaxKind[Identifier](728,104): In
SyntaxKind[CommaToken](728,106): ,
SyntaxKind[QuestionToken](728,108): ?
SyntaxKind[Identifier](728,109): Yield
SyntaxKind[CloseBracketToken](728,114): ]
SyntaxKind[QuestionToken](728,115): ?
SyntaxKind[Terminal](728,117): `)`
SyntaxKind[Identifier](728,121): Statement
SyntaxKind[OpenBracketToken](728,130): [
SyntaxKind[QuestionToken](728,131): ?
SyntaxKind[Identifier](728,132): Yield
SyntaxKind[CommaToken](728,137): ,
SyntaxKind[QuestionToken](728,139): ?
SyntaxKind[Identifier](728,140): Return
SyntaxKind[CloseBracketToken](728,146): ]
SyntaxKind[LineTerminatorToken](729,1): «line terminator»
SyntaxKind[Terminal](729,2): `for`
SyntaxKind[Terminal](729,8): `(`
SyntaxKind[Terminal](729,12): `var`
SyntaxKind[Identifier](729,18): VariableDeclarationList
SyntaxKind[OpenBracketToken](729,41): [
SyntaxKind[QuestionToken](729,42): ?
SyntaxKind[Identifier](729,43): Yield
SyntaxKind[CloseBracketToken](729,48): ]
SyntaxKind[Terminal](729,50): `;`
SyntaxKind[Identifier](729,54): Expression
SyntaxKind[OpenBracketToken](729,64): [
SyntaxKind[Identifier](729,65): In
SyntaxKind[CommaToken](729,67): ,
SyntaxKind[QuestionToken](729,69): ?
SyntaxKind[Identifier](729,70): Yield
SyntaxKind[CloseBracketToken](729,75): ]
SyntaxKind[QuestionToken](729,76): ?
SyntaxKind[Terminal](729,78): `;`
SyntaxKind[Identifier](729,82): Expression
SyntaxKind[OpenBracketToken](729,92): [
SyntaxKind[Identifier](729,93): In
SyntaxKind[CommaToken](729,95): ,
SyntaxKind[QuestionToken](729,97): ?
SyntaxKind[Identifier](729,98): Yield
SyntaxKind[CloseBracketToken](729,103): ]
SyntaxKind[QuestionToken](729,104): ?
SyntaxKind[Terminal](729,106): `)`
SyntaxKind[Identifier](729,110): Statement
SyntaxKind[OpenBracketToken](729,119): [
SyntaxKind[QuestionToken](729,120): ?
SyntaxKind[Identifier](729,121): Yield
SyntaxKind[CommaToken](729,126): ,
SyntaxKind[QuestionToken](729,128): ?
SyntaxKind[Identifier](729,129): Return
SyntaxKind[CloseBracketToken](729,135): ]
SyntaxKind[LineTerminatorToken](730,1): «line terminator»
SyntaxKind[Terminal](730,2): `for`
SyntaxKind[Terminal](730,8): `(`
SyntaxKind[Identifier](730,12): LexicalDeclaration
SyntaxKind[OpenBracketToken](730,30): [
SyntaxKind[QuestionToken](730,31): ?
SyntaxKind[Identifier](730,32): Yield
SyntaxKind[CloseBracketToken](730,37): ]
SyntaxKind[Identifier](730,39): Expression
SyntaxKind[OpenBracketToken](730,49): [
SyntaxKind[Identifier](730,50): In
SyntaxKind[CommaToken](730,52): ,
SyntaxKind[QuestionToken](730,54): ?
SyntaxKind[Identifier](730,55): Yield
SyntaxKind[CloseBracketToken](730,60): ]
SyntaxKind[QuestionToken](730,61): ?
SyntaxKind[Terminal](730,63): `;`
SyntaxKind[Identifier](730,67): Expression
SyntaxKind[OpenBracketToken](730,77): [
SyntaxKind[Identifier](730,78): In
SyntaxKind[CommaToken](730,80): ,
SyntaxKind[QuestionToken](730,82): ?
SyntaxKind[Identifier](730,83): Yield
SyntaxKind[CloseBracketToken](730,88): ]
SyntaxKind[QuestionToken](730,89): ?
SyntaxKind[Terminal](730,91): `)`
SyntaxKind[Identifier](730,95): Statement
SyntaxKind[OpenBracketToken](730,104): [
SyntaxKind[QuestionToken](730,105): ?
SyntaxKind[Identifier](730,106): Yield
SyntaxKind[CommaToken](730,111): ,
SyntaxKind[QuestionToken](730,113): ?
SyntaxKind[Identifier](730,114): Return
SyntaxKind[CloseBracketToken](730,120): ]
SyntaxKind[LineTerminatorToken](731,1): «line terminator»
SyntaxKind[Terminal](731,2): `for`
SyntaxKind[Terminal](731,8): `(`
SyntaxKind[OpenBracketToken](731,12): [
SyntaxKind[LookaheadKeyword](731,13): lookahead
SyntaxKind[LessThanExclamationToken](731,23): <!
SyntaxKind[OpenBraceToken](731,26): {
SyntaxKind[Terminal](731,28): `let`
SyntaxKind[Terminal](731,34): `[`
SyntaxKind[CloseBraceToken](731,38): }
SyntaxKind[CloseBracketToken](731,39): ]
SyntaxKind[Identifier](731,41): LeftHandSideExpression
SyntaxKind[OpenBracketToken](731,63): [
SyntaxKind[QuestionToken](731,64): ?
SyntaxKind[Identifier](731,65): Yield
SyntaxKind[CloseBracketToken](731,70): ]
SyntaxKind[Terminal](731,72): `in`
SyntaxKind[Identifier](731,77): Expression
SyntaxKind[OpenBracketToken](731,87): [
SyntaxKind[Identifier](731,88): In
SyntaxKind[CommaToken](731,90): ,
SyntaxKind[QuestionToken](731,92): ?
SyntaxKind[Identifier](731,93): Yield
SyntaxKind[CloseBracketToken](731,98): ]
SyntaxKind[Terminal](731,100): `)`
SyntaxKind[Identifier](731,104): Statement
SyntaxKind[OpenBracketToken](731,113): [
SyntaxKind[QuestionToken](731,114): ?
SyntaxKind[Identifier](731,115): Yield
SyntaxKind[CommaToken](731,120): ,
SyntaxKind[QuestionToken](731,122): ?
SyntaxKind[Identifier](731,123): Return
SyntaxKind[CloseBracketToken](731,129): ]
SyntaxKind[LineTerminatorToken](732,1): «line terminator»
SyntaxKind[Terminal](732,2): `for`
SyntaxKind[Terminal](732,8): `(`
SyntaxKind[Terminal](732,12): `var`
SyntaxKind[Identifier](732,18): ForBinding
SyntaxKind[OpenBracketToken](732,28): [
SyntaxKind[QuestionToken](732,29): ?
SyntaxKind[Identifier](732,30): Yield
SyntaxKind[CloseBracketToken](732,35): ]
SyntaxKind[Terminal](732,37): `in`
SyntaxKind[Identifier](732,42): Expression
SyntaxKind[OpenBracketToken](732,52): [
SyntaxKind[Identifier](732,53): In
SyntaxKind[CommaToken](732,55): ,
SyntaxKind[QuestionToken](732,57): ?
SyntaxKind[Identifier](732,58): Yield
SyntaxKind[CloseBracketToken](732,63): ]
SyntaxKind[Terminal](732,65): `)`
SyntaxKind[Identifier](732,69): Statement
SyntaxKind[OpenBracketToken](732,78): [
SyntaxKind[QuestionToken](732,79): ?
SyntaxKind[Identifier](732,80): Yield
SyntaxKind[CommaToken](732,85): ,
SyntaxKind[QuestionToken](732,87): ?
SyntaxKind[Identifier](732,88): Return
SyntaxKind[CloseBracketToken](732,94): ]
SyntaxKind[LineTerminatorToken](733,1): «line terminator»
SyntaxKind[Terminal](733,2): `for`
SyntaxKind[Terminal](733,8): `(`
SyntaxKind[Identifier](733,12): ForDeclaration
SyntaxKind[OpenBracketToken](733,26): [
SyntaxKind[QuestionToken](733,27): ?
SyntaxKind[Identifier](733,28): Yield
SyntaxKind[CloseBracketToken](733,33): ]
SyntaxKind[Terminal](733,35): `in`
SyntaxKind[Identifier](733,40): Expression
SyntaxKind[OpenBracketToken](733,50): [
SyntaxKind[Identifier](733,51): In
SyntaxKind[CommaToken](733,53): ,
SyntaxKind[QuestionToken](733,55): ?
SyntaxKind[Identifier](733,56): Yield
SyntaxKind[CloseBracketToken](733,61): ]
SyntaxKind[Terminal](733,63): `)`
SyntaxKind[Identifier](733,67): Statement
SyntaxKind[OpenBracketToken](733,76): [
SyntaxKind[QuestionToken](733,77): ?
SyntaxKind[Identifier](733,78): Yield
SyntaxKind[CommaToken](733,83): ,
SyntaxKind[QuestionToken](733,85): ?
SyntaxKind[Identifier](733,86): Return
SyntaxKind[CloseBracketToken](733,92): ]
SyntaxKind[LineTerminatorToken](734,1): «line terminator»
SyntaxKind[Terminal](734,2): `for`
SyntaxKind[Terminal](734,8): `(`
SyntaxKind[OpenBracketToken](734,12): [
SyntaxKind[LookaheadKeyword](734,13): lookahead
SyntaxKind[ExclamationEqualsToken](734,23): !=
SyntaxKind[Terminal](734,26): `let`
SyntaxKind[CloseBracketToken](734,31): ]
SyntaxKind[Identifier](734,33): LeftHandSideExpression
SyntaxKind[OpenBracketToken](734,55): [
SyntaxKind[QuestionToken](734,56): ?
SyntaxKind[Identifier](734,57): Yield
SyntaxKind[CloseBracketToken](734,62): ]
SyntaxKind[Terminal](734,64): `of`
SyntaxKind[Identifier](734,69): AssignmentExpression
SyntaxKind[OpenBracketToken](734,89): [
SyntaxKind[Identifier](734,90): In
SyntaxKind[CommaToken](734,92): ,
SyntaxKind[QuestionToken](734,94): ?
SyntaxKind[Identifier](734,95): Yield
SyntaxKind[CloseBracketToken](734,100): ]
SyntaxKind[Terminal](734,102): `)`
SyntaxKind[Identifier](734,106): Statement
SyntaxKind[OpenBracketToken](734,115): [
SyntaxKind[QuestionToken](734,116): ?
SyntaxKind[Identifier](734,117): Yield
SyntaxKind[CommaToken](734,122): ,
SyntaxKind[QuestionToken](734,124): ?
SyntaxKind[Identifier](734,125): Return
SyntaxKind[CloseBracketToken](734,131): ]
SyntaxKind[LineTerminatorToken](735,1): «line terminator»
SyntaxKind[Terminal](735,2): `for`
SyntaxKind[Terminal](735,8): `(`
SyntaxKind[Terminal](735,12): `var`
SyntaxKind[Identifier](735,18): ForBinding
SyntaxKind[OpenBracketToken](735,28): [
SyntaxKind[QuestionToken](735,29): ?
SyntaxKind[Identifier](735,30): Yield
SyntaxKind[CloseBracketToken](735,35): ]
SyntaxKind[Terminal](735,37): `of`
SyntaxKind[Identifier](735,42): AssignmentExpression
SyntaxKind[OpenBracketToken](735,62): [
SyntaxKind[Identifier](735,63): In
SyntaxKind[CommaToken](735,65): ,
SyntaxKind[QuestionToken](735,67): ?
SyntaxKind[Identifier](735,68): Yield
SyntaxKind[CloseBracketToken](735,73): ]
SyntaxKind[Terminal](735,75): `)`
SyntaxKind[Identifier](735,79): Statement
SyntaxKind[OpenBracketToken](735,88): [
SyntaxKind[QuestionToken](735,89): ?
SyntaxKind[Identifier](735,90): Yield
SyntaxKind[CommaToken](735,95): ,
SyntaxKind[QuestionToken](735,97): ?
SyntaxKind[Identifier](735,98): Return
SyntaxKind[CloseBracketToken](735,104): ]
SyntaxKind[LineTerminatorToken](736,1): «line terminator»
SyntaxKind[Terminal](736,2): `for`
SyntaxKind[Terminal](736,8): `(`
SyntaxKind[Identifier](736,12): ForDeclaration
SyntaxKind[OpenBracketToken](736,26): [
SyntaxKind[QuestionToken](736,27): ?
SyntaxKind[Identifier](736,28): Yield
SyntaxKind[CloseBracketToken](736,33): ]
SyntaxKind[Terminal](736,35): `of`
SyntaxKind[Identifier](736,40): AssignmentExpression
SyntaxKind[OpenBracketToken](736,60): [
SyntaxKind[Identifier](736,61): In
SyntaxKind[CommaToken](736,63): ,
SyntaxKind[QuestionToken](736,65): ?
SyntaxKind[Identifier](736,66): Yield
SyntaxKind[CloseBracketToken](736,71): ]
SyntaxKind[Terminal](736,73): `)`
SyntaxKind[Identifier](736,77): Statement
SyntaxKind[OpenBracketToken](736,86): [
SyntaxKind[QuestionToken](736,87): ?
SyntaxKind[Identifier](736,88): Yield
SyntaxKind[CommaToken](736,93): ,
SyntaxKind[QuestionToken](736,95): ?
SyntaxKind[Identifier](736,96): Return
SyntaxKind[CloseBracketToken](736,102): ]
SyntaxKind[LineTerminatorToken](737,1): «line terminator»
SyntaxKind[DedentToken](737,1): «dedent»
SyntaxKind[LineTerminatorToken](738,1): «line terminator»
SyntaxKind[Identifier](738,1): ForDeclaration
SyntaxKind[OpenBracketToken](738,15): [
SyntaxKind[Identifier](738,16): Yield
SyntaxKind[CloseBracketToken](738,21): ]
SyntaxKind[ColonToken](738,23): :
SyntaxKind[LineTerminatorToken](739,1): «line terminator»
SyntaxKind[IndentToken](739,1): «indent»
SyntaxKind[Identifier](739,2): LetOrConst
SyntaxKind[Identifier](739,13): ForBinding
SyntaxKind[OpenBracketToken](739,23): [
SyntaxKind[QuestionToken](739,24): ?
SyntaxKind[Identifier](739,25): Yield
SyntaxKind[CloseBracketToken](739,30): ]
SyntaxKind[LineTerminatorToken](740,1): «line terminator»
SyntaxKind[DedentToken](740,1): «dedent»
SyntaxKind[LineTerminatorToken](741,1): «line terminator»
SyntaxKind[Identifier](741,1): ForBinding
SyntaxKind[OpenBracketToken](741,11): [
SyntaxKind[Identifier](741,12): Yield
SyntaxKind[CloseBracketToken](741,17): ]
SyntaxKind[ColonToken](741,19): :
SyntaxKind[LineTerminatorToken](742,1): «line terminator»
SyntaxKind[IndentToken](742,1): «indent»
SyntaxKind[Identifier](742,2): BindingIdentifier
SyntaxKind[OpenBracketToken](742,19): [
SyntaxKind[QuestionToken](742,20): ?
SyntaxKind[Identifier](742,21): Yield
SyntaxKind[CloseBracketToken](742,26): ]
SyntaxKind[LineTerminatorToken](743,1): «line terminator»
SyntaxKind[Identifier](743,2): BindingPattern
SyntaxKind[OpenBracketToken](743,16): [
SyntaxKind[QuestionToken](743,17): ?
SyntaxKind[Identifier](743,18): Yield
SyntaxKind[CloseBracketToken](743,23): ]
SyntaxKind[LineTerminatorToken](744,1): «line terminator»
SyntaxKind[DedentToken](744,1): «dedent»
SyntaxKind[LineTerminatorToken](745,1): «line terminator»
SyntaxKind[Identifier](745,1): ContinueStatement
SyntaxKind[OpenBracketToken](745,18): [
SyntaxKind[Identifier](745,19): Yield
SyntaxKind[CloseBracketToken](745,24): ]
SyntaxKind[ColonToken](745,26): :
SyntaxKind[LineTerminatorToken](746,1): «line terminator»
SyntaxKind[IndentToken](746,1): «indent»
SyntaxKind[Terminal](746,2): `continue`
SyntaxKind[Terminal](746,13): `;`
SyntaxKind[LineTerminatorToken](747,1): «line terminator»
SyntaxKind[Terminal](747,2): `continue`
SyntaxKind[OpenBracketToken](747,13): [
SyntaxKind[NoKeyword](747,14): no
SyntaxKind[Identifier](747,17): LineTerminator
SyntaxKind[HereKeyword](747,32): here
SyntaxKind[CloseBracketToken](747,36): ]
SyntaxKind[Identifier](747,38): LabelIdentifier
SyntaxKind[OpenBracketToken](747,53): [
SyntaxKind[QuestionToken](747,54): ?
SyntaxKind[Identifier](747,55): Yield
SyntaxKind[CloseBracketToken](747,60): ]
SyntaxKind[Terminal](747,62): `;`
SyntaxKind[LineTerminatorToken](748,1): «line terminator»
SyntaxKind[DedentToken](748,1): «dedent»
SyntaxKind[LineTerminatorToken](749,1): «line terminator»
SyntaxKind[Identifier](749,1): BreakStatement
SyntaxKind[OpenBracketToken](749,15): [
SyntaxKind[Identifier](749,16): Yield
SyntaxKind[CloseBracketToken](749,21): ]
SyntaxKind[ColonToken](749,24): :
SyntaxKind[LineTerminatorToken](750,1): «line terminator»
SyntaxKind[IndentToken](750,1): «indent»
SyntaxKind[Terminal](750,2): `break`
SyntaxKind[Terminal](750,10): `;`
SyntaxKind[LineTerminatorToken](751,1): «line terminator»
SyntaxKind[Terminal](751,2): `break`
SyntaxKind[OpenBracketToken](751,10): [
SyntaxKind[NoKeyword](751,11): no
SyntaxKind[Identifier](751,14): LineTerminator
SyntaxKind[HereKeyword](751,29): here
SyntaxKind[CloseBracketToken](751,33): ]
SyntaxKind[Identifier](751,35): LabelIdentifier
SyntaxKind[OpenBracketToken](751,50): [
SyntaxKind[QuestionToken](751,51): ?
SyntaxKind[Identifier](751,52): Yield
SyntaxKind[CloseBracketToken](751,57): ]
SyntaxKind[Terminal](751,59): `;`
SyntaxKind[LineTerminatorToken](752,1): «line terminator»
SyntaxKind[DedentToken](752,1): «dedent»
SyntaxKind[LineTerminatorToken](753,1): «line terminator»
SyntaxKind[Identifier](753,1): ReturnStatement
SyntaxKind[OpenBracketToken](753,16): [
SyntaxKind[Identifier](753,17): Yield
SyntaxKind[CloseBracketToken](753,22): ]
SyntaxKind[ColonToken](753,24): :
SyntaxKind[LineTerminatorToken](754,1): «line terminator»
SyntaxKind[IndentToken](754,1): «indent»
SyntaxKind[Terminal](754,2): `return`
SyntaxKind[Terminal](754,11): `;`
SyntaxKind[LineTerminatorToken](755,1): «line terminator»
SyntaxKind[Terminal](755,2): `return`
SyntaxKind[OpenBracketToken](755,11): [
SyntaxKind[NoKeyword](755,12): no
SyntaxKind[Identifier](755,15): LineTerminator
SyntaxKind[HereKeyword](755,30): here
SyntaxKind[CloseBracketToken](755,34): ]
SyntaxKind[Identifier](755,36): Expression
SyntaxKind[OpenBracketToken](755,46): [
SyntaxKind[Identifier](755,47): In
SyntaxKind[CommaToken](755,49): ,
SyntaxKind[QuestionToken](755,51): ?
SyntaxKind[Identifier](755,52): Yield
SyntaxKind[CloseBracketToken](755,57): ]
SyntaxKind[Terminal](755,59): `;`
SyntaxKind[LineTerminatorToken](756,1): «line terminator»
SyntaxKind[DedentToken](756,1): «dedent»
SyntaxKind[LineTerminatorToken](757,1): «line terminator»
SyntaxKind[Identifier](757,1): WithStatement
SyntaxKind[OpenBracketToken](757,14): [
SyntaxKind[Identifier](757,15): Yield
SyntaxKind[CommaToken](757,20): ,
SyntaxKind[Identifier](757,22): Return
SyntaxKind[CloseBracketToken](757,28): ]
SyntaxKind[ColonToken](757,30): :
SyntaxKind[LineTerminatorToken](758,1): «line terminator»
SyntaxKind[IndentToken](758,1): «indent»
SyntaxKind[Terminal](758,2): `with`
SyntaxKind[Terminal](758,9): `(`
SyntaxKind[Identifier](758,13): Expression
SyntaxKind[OpenBracketToken](758,23): [
SyntaxKind[Identifier](758,24): In
SyntaxKind[CommaToken](758,26): ,
SyntaxKind[QuestionToken](758,28): ?
SyntaxKind[Identifier](758,29): Yield
SyntaxKind[CloseBracketToken](758,34): ]
SyntaxKind[Terminal](758,36): `)`
SyntaxKind[Identifier](758,40): Statement
SyntaxKind[OpenBracketToken](758,49): [
SyntaxKind[QuestionToken](758,50): ?
SyntaxKind[Identifier](758,51): Yield
SyntaxKind[CommaToken](758,56): ,
SyntaxKind[QuestionToken](758,58): ?
SyntaxKind[Identifier](758,59): Return
SyntaxKind[CloseBracketToken](758,65): ]
SyntaxKind[LineTerminatorToken](759,1): «line terminator»
SyntaxKind[DedentToken](759,1): «dedent»
SyntaxKind[LineTerminatorToken](760,1): «line terminator»
SyntaxKind[Identifier](760,1): SwitchStatement
SyntaxKind[OpenBracketToken](760,16): [
SyntaxKind[Identifier](760,17): Yield
SyntaxKind[CommaToken](760,22): ,
SyntaxKind[Identifier](760,24): Return
SyntaxKind[CloseBracketToken](760,30): ]
SyntaxKind[ColonToken](760,32): :
SyntaxKind[LineTerminatorToken](761,1): «line terminator»
SyntaxKind[IndentToken](761,1): «indent»
SyntaxKind[Terminal](761,2): `switch`
SyntaxKind[Terminal](761,11): `(`
SyntaxKind[Identifier](761,15): Expression
SyntaxKind[OpenBracketToken](761,25): [
SyntaxKind[Identifier](761,26): In
SyntaxKind[CommaToken](761,28): ,
SyntaxKind[QuestionToken](761,30): ?
SyntaxKind[Identifier](761,31): Yield
SyntaxKind[CloseBracketToken](761,36): ]
SyntaxKind[Terminal](761,38): `)`
SyntaxKind[Identifier](761,42): CaseBlock
SyntaxKind[OpenBracketToken](761,51): [
SyntaxKind[QuestionToken](761,52): ?
SyntaxKind[Identifier](761,53): Yield
SyntaxKind[CommaToken](761,58): ,
SyntaxKind[QuestionToken](761,60): ?
SyntaxKind[Identifier](761,61): Return
SyntaxKind[CloseBracketToken](761,67): ]
SyntaxKind[LineTerminatorToken](762,1): «line terminator»
SyntaxKind[DedentToken](762,1): «dedent»
SyntaxKind[LineTerminatorToken](763,1): «line terminator»
SyntaxKind[Identifier](763,1): CaseBlock
SyntaxKind[OpenBracketToken](763,10): [
SyntaxKind[Identifier](763,11): Yield
SyntaxKind[CommaToken](763,16): ,
SyntaxKind[Identifier](763,18): Return
SyntaxKind[CloseBracketToken](763,24): ]
SyntaxKind[ColonToken](763,26): :
SyntaxKind[LineTerminatorToken](764,1): «line terminator»
SyntaxKind[IndentToken](764,1): «indent»
SyntaxKind[Terminal](764,2): `{`
SyntaxKind[Identifier](764,6): CaseClauses
SyntaxKind[OpenBracketToken](764,17): [
SyntaxKind[QuestionToken](764,18): ?
SyntaxKind[Identifier](764,19): Yield
SyntaxKind[CommaToken](764,24): ,
SyntaxKind[QuestionToken](764,26): ?
SyntaxKind[Identifier](764,27): Return
SyntaxKind[CloseBracketToken](764,33): ]
SyntaxKind[QuestionToken](764,34): ?
SyntaxKind[Terminal](764,36): `}`
SyntaxKind[LineTerminatorToken](765,1): «line terminator»
SyntaxKind[Terminal](765,2): `{`
SyntaxKind[Identifier](765,6): CaseClauses
SyntaxKind[OpenBracketToken](765,17): [
SyntaxKind[QuestionToken](765,18): ?
SyntaxKind[Identifier](765,19): Yield
SyntaxKind[CommaToken](765,24): ,
SyntaxKind[QuestionToken](765,26): ?
SyntaxKind[Identifier](765,27): Return
SyntaxKind[CloseBracketToken](765,33): ]
SyntaxKind[QuestionToken](765,34): ?
SyntaxKind[Identifier](765,36): DefaultClause
SyntaxKind[OpenBracketToken](765,49): [
SyntaxKind[QuestionToken](765,50): ?
SyntaxKind[Identifier](765,51): Yield
SyntaxKind[CommaToken](765,56): ,
SyntaxKind[QuestionToken](765,58): ?
SyntaxKind[Identifier](765,59): Return
SyntaxKind[CloseBracketToken](765,65): ]
SyntaxKind[Identifier](765,67): CaseClauses
SyntaxKind[OpenBracketToken](765,78): [
SyntaxKind[QuestionToken](765,79): ?
SyntaxKind[Identifier](765,80): Yield
SyntaxKind[CommaToken](765,85): ,
SyntaxKind[QuestionToken](765,87): ?
SyntaxKind[Identifier](765,88): Return
SyntaxKind[CloseBracketToken](765,94): ]
SyntaxKind[QuestionToken](765,95): ?
SyntaxKind[Terminal](765,97): `}`
SyntaxKind[LineTerminatorToken](766,1): «line terminator»
SyntaxKind[DedentToken](766,1): «dedent»
SyntaxKind[LineTerminatorToken](767,1): «line terminator»
SyntaxKind[Identifier](767,1): CaseClauses
SyntaxKind[OpenBracketToken](767,12): [
SyntaxKind[Identifier](767,13): Yield
SyntaxKind[CommaToken](767,18): ,
SyntaxKind[Identifier](767,20): Return
SyntaxKind[CloseBracketToken](767,26): ]
SyntaxKind[ColonToken](767,28): :
SyntaxKind[LineTerminatorToken](768,1): «line terminator»
SyntaxKind[IndentToken](768,1): «indent»
SyntaxKind[Identifier](768,2): CaseClause
SyntaxKind[OpenBracketToken](768,12): [
SyntaxKind[QuestionToken](768,13): ?
SyntaxKind[Identifier](768,14): Yield
SyntaxKind[CommaToken](768,19): ,
SyntaxKind[QuestionToken](768,21): ?
SyntaxKind[Identifier](768,22): Return
SyntaxKind[CloseBracketToken](768,28): ]
SyntaxKind[LineTerminatorToken](769,1): «line terminator»
SyntaxKind[Identifier](769,2): CaseClauses
SyntaxKind[OpenBracketToken](769,13): [
SyntaxKind[QuestionToken](769,14): ?
SyntaxKind[Identifier](769,15): Yield
SyntaxKind[CommaToken](769,20): ,
SyntaxKind[QuestionToken](769,22): ?
SyntaxKind[Identifier](769,23): Return
SyntaxKind[CloseBracketToken](769,29): ]
SyntaxKind[Identifier](769,31): CaseClause
SyntaxKind[OpenBracketToken](769,41): [
SyntaxKind[QuestionToken](769,42): ?
SyntaxKind[Identifier](769,43): Yield
SyntaxKind[CommaToken](769,48): ,
SyntaxKind[QuestionToken](769,50): ?
SyntaxKind[Identifier](769,51): Return
SyntaxKind[CloseBracketToken](769,57): ]
SyntaxKind[LineTerminatorToken](770,1): «line terminator»
SyntaxKind[DedentToken](770,1): «dedent»
SyntaxKind[LineTerminatorToken](771,1): «line terminator»
SyntaxKind[Identifier](771,1): CaseClause
SyntaxKind[OpenBracketToken](771,11): [
SyntaxKind[Identifier](771,12): Yield
SyntaxKind[CommaToken](771,17): ,
SyntaxKind[Identifier](771,19): Return
SyntaxKind[CloseBracketToken](771,25): ]
SyntaxKind[ColonToken](771,27): :
SyntaxKind[LineTerminatorToken](772,1): «line terminator»
SyntaxKind[IndentToken](772,1): «indent»
SyntaxKind[Terminal](772,2): `case`
SyntaxKind[Identifier](772,9): Expression
SyntaxKind[OpenBracketToken](772,19): [
SyntaxKind[Identifier](772,20): In
SyntaxKind[CommaToken](772,22): ,
SyntaxKind[QuestionToken](772,24): ?
SyntaxKind[Identifier](772,25): Yield
SyntaxKind[CloseBracketToken](772,30): ]
SyntaxKind[Terminal](772,32): `:`
SyntaxKind[Identifier](772,36): StatementList
SyntaxKind[OpenBracketToken](772,49): [
SyntaxKind[QuestionToken](772,50): ?
SyntaxKind[Identifier](772,51): Yield
SyntaxKind[CommaToken](772,56): ,
SyntaxKind[QuestionToken](772,58): ?
SyntaxKind[Identifier](772,59): Return
SyntaxKind[CloseBracketToken](772,65): ]
SyntaxKind[QuestionToken](772,66): ?
SyntaxKind[LineTerminatorToken](773,1): «line terminator»
SyntaxKind[DedentToken](773,1): «dedent»
SyntaxKind[LineTerminatorToken](774,1): «line terminator»
SyntaxKind[Identifier](774,1): DefaultClause
SyntaxKind[OpenBracketToken](774,14): [
SyntaxKind[Identifier](774,15): Yield
SyntaxKind[CommaToken](774,20): ,
SyntaxKind[Identifier](774,22): Return
SyntaxKind[CloseBracketToken](774,28): ]
SyntaxKind[ColonToken](774,30): :
SyntaxKind[LineTerminatorToken](775,1): «line terminator»
SyntaxKind[IndentToken](775,1): «indent»
SyntaxKind[Terminal](775,2): `default`
SyntaxKind[Terminal](775,12): `:`
SyntaxKind[Identifier](775,16): StatementList
SyntaxKind[OpenBracketToken](775,29): [
SyntaxKind[QuestionToken](775,30): ?
SyntaxKind[Identifier](775,31): Yield
SyntaxKind[CommaToken](775,36): ,
SyntaxKind[QuestionToken](775,38): ?
SyntaxKind[Identifier](775,39): Return
SyntaxKind[CloseBracketToken](775,45): ]
SyntaxKind[QuestionToken](775,46): ?
SyntaxKind[LineTerminatorToken](776,1): «line terminator»
SyntaxKind[DedentToken](776,1): «dedent»
SyntaxKind[LineTerminatorToken](777,1): «line terminator»
SyntaxKind[Identifier](777,1): LabelledStatement
SyntaxKind[OpenBracketToken](777,18): [
SyntaxKind[Identifier](777,19): Yield
SyntaxKind[CommaToken](777,24): ,
SyntaxKind[Identifier](777,26): Return
SyntaxKind[CloseBracketToken](777,32): ]
SyntaxKind[ColonToken](777,34): :
SyntaxKind[LineTerminatorToken](778,1): «line terminator»
SyntaxKind[IndentToken](778,1): «indent»
SyntaxKind[Identifier](778,2): LabelIdentifier
SyntaxKind[OpenBracketToken](778,17): [
SyntaxKind[QuestionToken](778,18): ?
SyntaxKind[Identifier](778,19): Yield
SyntaxKind[CloseBracketToken](778,24): ]
SyntaxKind[Terminal](778,26): `:`
SyntaxKind[Identifier](778,30): LabelledItem
SyntaxKind[OpenBracketToken](778,42): [
SyntaxKind[QuestionToken](778,43): ?
SyntaxKind[Identifier](778,44): Yield
SyntaxKind[CommaToken](778,49): ,
SyntaxKind[QuestionToken](778,51): ?
SyntaxKind[Identifier](778,52): Return
SyntaxKind[CloseBracketToken](778,58): ]
SyntaxKind[LineTerminatorToken](779,1): «line terminator»
SyntaxKind[DedentToken](779,1): «dedent»
SyntaxKind[LineTerminatorToken](780,1): «line terminator»
SyntaxKind[Identifier](780,1): LabelledItem
SyntaxKind[OpenBracketToken](780,13): [
SyntaxKind[Identifier](780,14): Yield
SyntaxKind[CommaToken](780,19): ,
SyntaxKind[Identifier](780,21): Return
SyntaxKind[CloseBracketToken](780,27): ]
SyntaxKind[ColonToken](780,29): :
SyntaxKind[LineTerminatorToken](781,1): «line terminator»
SyntaxKind[IndentToken](781,1): «indent»
SyntaxKind[Identifier](781,2): Statement
SyntaxKind[OpenBracketToken](781,11): [
SyntaxKind[QuestionToken](781,12): ?
SyntaxKind[Identifier](781,13): Yield
SyntaxKind[CommaToken](781,18): ,
SyntaxKind[QuestionToken](781,20): ?
SyntaxKind[Identifier](781,21): Return
SyntaxKind[CloseBracketToken](781,27): ]
SyntaxKind[LineTerminatorToken](782,1): «line terminator»
SyntaxKind[Identifier](782,2): FunctionDeclaration
SyntaxKind[OpenBracketToken](782,21): [
SyntaxKind[QuestionToken](782,22): ?
SyntaxKind[Identifier](782,23): Yield
SyntaxKind[CloseBracketToken](782,28): ]
SyntaxKind[LineTerminatorToken](783,1): «line terminator»
SyntaxKind[DedentToken](783,1): «dedent»
SyntaxKind[LineTerminatorToken](784,1): «line terminator»
SyntaxKind[Identifier](784,1): ThrowStatement
SyntaxKind[OpenBracketToken](784,15): [
SyntaxKind[Identifier](784,16): Yield
SyntaxKind[CloseBracketToken](784,21): ]
SyntaxKind[ColonToken](784,23): :
SyntaxKind[LineTerminatorToken](785,1): «line terminator»
SyntaxKind[IndentToken](785,1): «indent»
SyntaxKind[Terminal](785,2): `throw`
SyntaxKind[OpenBracketToken](785,10): [
SyntaxKind[NoKeyword](785,11): no
SyntaxKind[Identifier](785,14): LineTerminator
SyntaxKind[HereKeyword](785,29): here
SyntaxKind[CloseBracketToken](785,33): ]
SyntaxKind[Identifier](785,35): Expression
SyntaxKind[OpenBracketToken](785,45): [
SyntaxKind[Identifier](785,46): In
SyntaxKind[CommaToken](785,48): ,
SyntaxKind[QuestionToken](785,50): ?
SyntaxKind[Identifier](785,51): Yield
SyntaxKind[CloseBracketToken](785,56): ]
SyntaxKind[Terminal](785,58): `;`
SyntaxKind[LineTerminatorToken](786,1): «line terminator»
SyntaxKind[DedentToken](786,1): «dedent»
SyntaxKind[LineTerminatorToken](787,1): «line terminator»
SyntaxKind[Identifier](787,1): TryStatement
SyntaxKind[OpenBracketToken](787,13): [
SyntaxKind[Identifier](787,14): Yield
SyntaxKind[CommaToken](787,19): ,
SyntaxKind[Identifier](787,21): Return
SyntaxKind[CloseBracketToken](787,27): ]
SyntaxKind[ColonToken](787,29): :
SyntaxKind[LineTerminatorToken](788,1): «line terminator»
SyntaxKind[IndentToken](788,1): «indent»
SyntaxKind[Terminal](788,2): `try`
SyntaxKind[Identifier](788,8): Block
SyntaxKind[OpenBracketToken](788,13): [
SyntaxKind[QuestionToken](788,14): ?
SyntaxKind[Identifier](788,15): Yield
SyntaxKind[CommaToken](788,20): ,
SyntaxKind[QuestionToken](788,22): ?
SyntaxKind[Identifier](788,23): Return
SyntaxKind[CloseBracketToken](788,29): ]
SyntaxKind[Identifier](788,31): Catch
SyntaxKind[OpenBracketToken](788,36): [
SyntaxKind[QuestionToken](788,37): ?
SyntaxKind[Identifier](788,38): Yield
SyntaxKind[CommaToken](788,43): ,
SyntaxKind[QuestionToken](788,45): ?
SyntaxKind[Identifier](788,46): Return
SyntaxKind[CloseBracketToken](788,52): ]
SyntaxKind[LineTerminatorToken](789,1): «line terminator»
SyntaxKind[Terminal](789,2): `try`
SyntaxKind[Identifier](789,8): Block
SyntaxKind[OpenBracketToken](789,13): [
SyntaxKind[QuestionToken](789,14): ?
SyntaxKind[Identifier](789,15): Yield
SyntaxKind[CommaToken](789,20): ,
SyntaxKind[QuestionToken](789,22): ?
SyntaxKind[Identifier](789,23): Return
SyntaxKind[CloseBracketToken](789,29): ]
SyntaxKind[Identifier](789,31): Finally
SyntaxKind[OpenBracketToken](789,38): [
SyntaxKind[QuestionToken](789,39): ?
SyntaxKind[Identifier](789,40): Yield
SyntaxKind[CommaToken](789,45): ,
SyntaxKind[QuestionToken](789,47): ?
SyntaxKind[Identifier](789,48): Return
SyntaxKind[CloseBracketToken](789,54): ]
SyntaxKind[LineTerminatorToken](790,1): «line terminator»
SyntaxKind[Terminal](790,2): `try`
SyntaxKind[Identifier](790,8): Block
SyntaxKind[OpenBracketToken](790,13): [
SyntaxKind[QuestionToken](790,14): ?
SyntaxKind[Identifier](790,15): Yield
SyntaxKind[CommaToken](790,20): ,
SyntaxKind[QuestionToken](790,22): ?
SyntaxKind[Identifier](790,23): Return
SyntaxKind[CloseBracketToken](790,29): ]
SyntaxKind[Identifier](790,31): Catch
SyntaxKind[OpenBracketToken](790,36): [
SyntaxKind[QuestionToken](790,37): ?
SyntaxKind[Identifier](790,38): Yield
SyntaxKind[CommaToken](790,43): ,
SyntaxKind[QuestionToken](790,45): ?
SyntaxKind[Identifier](790,46): Return
SyntaxKind[CloseBracketToken](790,52): ]
SyntaxKind[Identifier](790,54): Finally
SyntaxKind[OpenBracketToken](790,61): [
SyntaxKind[QuestionToken](790,62): ?
SyntaxKind[Identifier](790,63): Yield
SyntaxKind[CommaToken](790,68): ,
SyntaxKind[QuestionToken](790,70): ?
SyntaxKind[Identifier](790,71): Return
SyntaxKind[CloseBracketToken](790,77): ]
SyntaxKind[LineTerminatorToken](791,1): «line terminator»
SyntaxKind[DedentToken](791,1): «dedent»
SyntaxKind[LineTerminatorToken](792,1): «line terminator»
SyntaxKind[Identifier](792,1): Catch
SyntaxKind[OpenBracketToken](792,6): [
SyntaxKind[Identifier](792,7): Yield
SyntaxKind[CommaToken](792,12): ,
SyntaxKind[Identifier](792,14): Return
SyntaxKind[CloseBracketToken](792,20): ]
SyntaxKind[ColonToken](792,22): :
SyntaxKind[LineTerminatorToken](793,1): «line terminator»
SyntaxKind[IndentToken](793,1): «indent»
SyntaxKind[Terminal](793,2): `catch`
SyntaxKind[Terminal](793,10): `(`
SyntaxKind[Identifier](793,14): CatchParameter
SyntaxKind[OpenBracketToken](793,28): [
SyntaxKind[QuestionToken](793,29): ?
SyntaxKind[Identifier](793,30): Yield
SyntaxKind[CloseBracketToken](793,35): ]
SyntaxKind[Terminal](793,37): `)`
SyntaxKind[Identifier](793,41): Block
SyntaxKind[OpenBracketToken](793,46): [
SyntaxKind[QuestionToken](793,47): ?
SyntaxKind[Identifier](793,48): Yield
SyntaxKind[CommaToken](793,53): ,
SyntaxKind[QuestionToken](793,55): ?
SyntaxKind[Identifier](793,56): Return
SyntaxKind[CloseBracketToken](793,62): ]
SyntaxKind[LineTerminatorToken](794,1): «line terminator»
SyntaxKind[DedentToken](794,1): «dedent»
SyntaxKind[LineTerminatorToken](795,1): «line terminator»
SyntaxKind[Identifier](795,1): Finally
SyntaxKind[OpenBracketToken](795,8): [
SyntaxKind[Identifier](795,9): Yield
SyntaxKind[CommaToken](795,14): ,
SyntaxKind[Identifier](795,16): Return
SyntaxKind[CloseBracketToken](795,22): ]
SyntaxKind[ColonToken](795,24): :
SyntaxKind[LineTerminatorToken](796,1): «line terminator»
SyntaxKind[IndentToken](796,1): «indent»
SyntaxKind[Terminal](796,2): `finally`
SyntaxKind[Identifier](796,12): Block
SyntaxKind[OpenBracketToken](796,17): [
SyntaxKind[QuestionToken](796,18): ?
SyntaxKind[Identifier](796,19): Yield
SyntaxKind[CommaToken](796,24): ,
SyntaxKind[QuestionToken](796,26): ?
SyntaxKind[Identifier](796,27): Return
SyntaxKind[CloseBracketToken](796,33): ]
SyntaxKind[LineTerminatorToken](797,1): «line terminator»
SyntaxKind[DedentToken](797,1): «dedent»
SyntaxKind[LineTerminatorToken](798,1): «line terminator»
SyntaxKind[Identifier](798,1): CatchParameter
SyntaxKind[OpenBracketToken](798,15): [
SyntaxKind[Identifier](798,16): Yield
SyntaxKind[CloseBracketToken](798,21): ]
SyntaxKind[ColonToken](798,23): :
SyntaxKind[LineTerminatorToken](799,1): «line terminator»
SyntaxKind[IndentToken](799,1): «indent»
SyntaxKind[Identifier](799,2): BindingIdentifier
SyntaxKind[OpenBracketToken](799,19): [
SyntaxKind[QuestionToken](799,20): ?
SyntaxKind[Identifier](799,21): Yield
SyntaxKind[CloseBracketToken](799,26): ]
SyntaxKind[LineTerminatorToken](800,1): «line terminator»
SyntaxKind[Identifier](800,2): BindingPattern
SyntaxKind[OpenBracketToken](800,16): [
SyntaxKind[QuestionToken](800,17): ?
SyntaxKind[Identifier](800,18): Yield
SyntaxKind[CloseBracketToken](800,23): ]
SyntaxKind[LineTerminatorToken](801,1): «line terminator»
SyntaxKind[DedentToken](801,1): «dedent»
SyntaxKind[LineTerminatorToken](802,1): «line terminator»
SyntaxKind[Identifier](802,1): DebuggerStatement
SyntaxKind[ColonToken](802,19): :
SyntaxKind[LineTerminatorToken](803,1): «line terminator»
SyntaxKind[IndentToken](803,1): «indent»
SyntaxKind[Terminal](803,2): `debugger`
SyntaxKind[Terminal](803,13): `;`
SyntaxKind[LineTerminatorToken](804,1): «line terminator»
SyntaxKind[DedentToken](804,1): «dedent»
SyntaxKind[LineTerminatorToken](805,1): «line terminator»
SyntaxKind[LineTerminatorToken](806,1): «line terminator»
SyntaxKind[LineTerminatorToken](807,1): «line terminator»
SyntaxKind[Identifier](807,1): FunctionDeclaration
SyntaxKind[OpenBracketToken](807,20): [
SyntaxKind[Identifier](807,21): Yield
SyntaxKind[CommaToken](807,26): ,
SyntaxKind[Identifier](807,28): Default
SyntaxKind[CloseBracketToken](807,35): ]
SyntaxKind[ColonToken](807,38): :
SyntaxKind[LineTerminatorToken](808,1): «line terminator»
SyntaxKind[IndentToken](808,1): «indent»
SyntaxKind[Terminal](808,2): `function`
SyntaxKind[Identifier](808,13): BindingIdentifier
SyntaxKind[OpenBracketToken](808,30): [
SyntaxKind[QuestionToken](808,31): ?
SyntaxKind[Identifier](808,32): Yield
SyntaxKind[CloseBracketToken](808,37): ]
SyntaxKind[Terminal](808,39): `(`
SyntaxKind[Identifier](808,43): FormalParameters
SyntaxKind[Terminal](808,60): `)`
SyntaxKind[Terminal](808,64): `{`
SyntaxKind[Identifier](808,68): FunctionBody
SyntaxKind[Terminal](808,81): `}`
SyntaxKind[LineTerminatorToken](809,1): «line terminator»
SyntaxKind[OpenBracketToken](809,2): [
SyntaxKind[PlusToken](809,3): +
SyntaxKind[Identifier](809,4): Default
SyntaxKind[CloseBracketToken](809,11): ]
SyntaxKind[Terminal](809,13): `function`
SyntaxKind[Terminal](809,24): `(`
SyntaxKind[Identifier](809,28): FormalParameters
SyntaxKind[Terminal](809,45): `)`
SyntaxKind[Terminal](809,49): `{`
SyntaxKind[Identifier](809,53): FunctionBody
SyntaxKind[Terminal](809,66): `}`
SyntaxKind[LineTerminatorToken](810,1): «line terminator»
SyntaxKind[DedentToken](810,1): «dedent»
SyntaxKind[LineTerminatorToken](811,1): «line terminator»
SyntaxKind[Identifier](811,1): FunctionExpression
SyntaxKind[ColonToken](811,20): :
SyntaxKind[LineTerminatorToken](812,1): «line terminator»
SyntaxKind[IndentToken](812,1): «indent»
SyntaxKind[Terminal](812,2): `function`
SyntaxKind[Identifier](812,13): BindingIdentifier
SyntaxKind[QuestionToken](812,30): ?
SyntaxKind[Terminal](812,32): `(`
SyntaxKind[Identifier](812,36): FormalParameters
SyntaxKind[Terminal](812,53): `)`
SyntaxKind[Terminal](812,57): `{`
SyntaxKind[Identifier](812,61): FunctionBody
SyntaxKind[Terminal](812,74): `}`
SyntaxKind[LineTerminatorToken](813,1): «line terminator»
SyntaxKind[DedentToken](813,1): «dedent»
SyntaxKind[LineTerminatorToken](814,1): «line terminator»
SyntaxKind[Identifier](814,1): StrictFormalParameters
SyntaxKind[OpenBracketToken](814,23): [
SyntaxKind[Identifier](814,24): Yield
SyntaxKind[CloseBracketToken](814,29): ]
SyntaxKind[ColonToken](814,31): :
SyntaxKind[LineTerminatorToken](815,1): «line terminator»
SyntaxKind[IndentToken](815,1): «indent»
SyntaxKind[Identifier](815,2): FormalParameters
SyntaxKind[OpenBracketToken](815,18): [
SyntaxKind[QuestionToken](815,19): ?
SyntaxKind[Identifier](815,20): Yield
SyntaxKind[CloseBracketToken](815,25): ]
SyntaxKind[LineTerminatorToken](816,1): «line terminator»
SyntaxKind[DedentToken](816,1): «dedent»
SyntaxKind[LineTerminatorToken](817,1): «line terminator»
SyntaxKind[Identifier](817,1): FormalParameters
SyntaxKind[OpenBracketToken](817,17): [
SyntaxKind[Identifier](817,18): Yield
SyntaxKind[CloseBracketToken](817,23): ]
SyntaxKind[ColonToken](817,25): :
SyntaxKind[LineTerminatorToken](818,1): «line terminator»
SyntaxKind[IndentToken](818,1): «indent»
SyntaxKind[OpenBracketToken](818,2): [
SyntaxKind[EmptyKeyword](818,3): empty
SyntaxKind[CloseBracketToken](818,8): ]
SyntaxKind[LineTerminatorToken](819,1): «line terminator»
SyntaxKind[Identifier](819,2): FormalParameterList
SyntaxKind[OpenBracketToken](819,21): [
SyntaxKind[QuestionToken](819,22): ?
SyntaxKind[Identifier](819,23): Yield
SyntaxKind[CloseBracketToken](819,28): ]
SyntaxKind[LineTerminatorToken](820,1): «line terminator»
SyntaxKind[DedentToken](820,1): «dedent»
SyntaxKind[LineTerminatorToken](821,1): «line terminator»
SyntaxKind[Identifier](821,1): FormalParameterList
SyntaxKind[OpenBracketToken](821,20): [
SyntaxKind[Identifier](821,21): Yield
SyntaxKind[CloseBracketToken](821,26): ]
SyntaxKind[ColonToken](821,29): :
SyntaxKind[LineTerminatorToken](822,1): «line terminator»
SyntaxKind[IndentToken](822,1): «indent»
SyntaxKind[Identifier](822,2): FunctionRestParameter
SyntaxKind[OpenBracketToken](822,23): [
SyntaxKind[QuestionToken](822,24): ?
SyntaxKind[Identifier](822,25): Yield
SyntaxKind[CloseBracketToken](822,30): ]
SyntaxKind[LineTerminatorToken](823,1): «line terminator»
SyntaxKind[Identifier](823,2): FormalsList
SyntaxKind[OpenBracketToken](823,13): [
SyntaxKind[QuestionToken](823,14): ?
SyntaxKind[Identifier](823,15): Yield
SyntaxKind[CloseBracketToken](823,20): ]
SyntaxKind[LineTerminatorToken](824,1): «line terminator»
SyntaxKind[Identifier](824,2): FormalsList
SyntaxKind[OpenBracketToken](824,13): [
SyntaxKind[QuestionToken](824,14): ?
SyntaxKind[Identifier](824,15): Yield
SyntaxKind[CloseBracketToken](824,20): ]
SyntaxKind[Terminal](824,22): `,`
SyntaxKind[Identifier](824,26): FunctionRestParameter
SyntaxKind[OpenBracketToken](824,47): [
SyntaxKind[QuestionToken](824,48): ?
SyntaxKind[Identifier](824,49): Yield
SyntaxKind[CloseBracketToken](824,54): ]
SyntaxKind[LineTerminatorToken](825,1): «line terminator»
SyntaxKind[DedentToken](825,1): «dedent»
SyntaxKind[LineTerminatorToken](826,1): «line terminator»
SyntaxKind[Identifier](826,1): FormalsList
SyntaxKind[OpenBracketToken](826,12): [
SyntaxKind[Identifier](826,13): Yield
SyntaxKind[CloseBracketToken](826,18): ]
SyntaxKind[ColonToken](826,20): :
SyntaxKind[LineTerminatorToken](827,1): «line terminator»
SyntaxKind[IndentToken](827,1): «indent»
SyntaxKind[Identifier](827,2): FormalParameter
SyntaxKind[OpenBracketToken](827,17): [
SyntaxKind[QuestionToken](827,18): ?
SyntaxKind[Identifier](827,19): Yield
SyntaxKind[CloseBracketToken](827,24): ]
SyntaxKind[LineTerminatorToken](828,1): «line terminator»
SyntaxKind[Identifier](828,2): FormalsList
SyntaxKind[OpenBracketToken](828,13): [
SyntaxKind[QuestionToken](828,14): ?
SyntaxKind[Identifier](828,15): Yield
SyntaxKind[CloseBracketToken](828,20): ]
SyntaxKind[Terminal](828,22): `,`
SyntaxKind[Identifier](828,26): FormalParameter
SyntaxKind[OpenBracketToken](828,41): [
SyntaxKind[QuestionToken](828,42): ?
SyntaxKind[Identifier](828,43): Yield
SyntaxKind[CloseBracketToken](828,48): ]
SyntaxKind[LineTerminatorToken](829,1): «line terminator»
SyntaxKind[DedentToken](829,1): «dedent»
SyntaxKind[LineTerminatorToken](830,1): «line terminator»
SyntaxKind[Identifier](830,1): FunctionRestParameter
SyntaxKind[OpenBracketToken](830,22): [
SyntaxKind[Identifier](830,23): Yield
SyntaxKind[CloseBracketToken](830,28): ]
SyntaxKind[ColonToken](830,30): :
SyntaxKind[LineTerminatorToken](831,1): «line terminator»
SyntaxKind[IndentToken](831,1): «indent»
SyntaxKind[Identifier](831,2): BindingRestElement
SyntaxKind[OpenBracketToken](831,20): [
SyntaxKind[QuestionToken](831,21): ?
SyntaxKind[Identifier](831,22): Yield
SyntaxKind[CloseBracketToken](831,27): ]
SyntaxKind[LineTerminatorToken](832,1): «line terminator»
SyntaxKind[DedentToken](832,1): «dedent»
SyntaxKind[LineTerminatorToken](833,1): «line terminator»
SyntaxKind[Identifier](833,1): FormalParameter
SyntaxKind[OpenBracketToken](833,16): [
SyntaxKind[Identifier](833,17): Yield
SyntaxKind[CloseBracketToken](833,22): ]
SyntaxKind[ColonToken](833,24): :
SyntaxKind[LineTerminatorToken](834,1): «line terminator»
SyntaxKind[IndentToken](834,1): «indent»
SyntaxKind[Identifier](834,2): BindingElement
SyntaxKind[OpenBracketToken](834,16): [
SyntaxKind[QuestionToken](834,17): ?
SyntaxKind[Identifier](834,18): Yield
SyntaxKind[CloseBracketToken](834,23): ]
SyntaxKind[LineTerminatorToken](835,1): «line terminator»
SyntaxKind[DedentToken](835,1): «dedent»
SyntaxKind[LineTerminatorToken](836,1): «line terminator»
SyntaxKind[Identifier](836,1): FunctionBody
SyntaxKind[OpenBracketToken](836,13): [
SyntaxKind[Identifier](836,14): Yield
SyntaxKind[CloseBracketToken](836,19): ]
SyntaxKind[ColonToken](836,21): :
SyntaxKind[LineTerminatorToken](837,1): «line terminator»
SyntaxKind[IndentToken](837,1): «indent»
SyntaxKind[Identifier](837,2): FunctionStatementList
SyntaxKind[OpenBracketToken](837,23): [
SyntaxKind[QuestionToken](837,24): ?
SyntaxKind[Identifier](837,25): Yield
SyntaxKind[CloseBracketToken](837,30): ]
SyntaxKind[LineTerminatorToken](838,1): «line terminator»
SyntaxKind[DedentToken](838,1): «dedent»
SyntaxKind[LineTerminatorToken](839,1): «line terminator»
SyntaxKind[Identifier](839,1): FunctionStatementList
SyntaxKind[OpenBracketToken](839,22): [
SyntaxKind[Identifier](839,23): Yield
SyntaxKind[CloseBracketToken](839,28): ]
SyntaxKind[ColonToken](839,30): :
SyntaxKind[LineTerminatorToken](840,1): «line terminator»
SyntaxKind[IndentToken](840,1): «indent»
SyntaxKind[Identifier](840,2): StatementList
SyntaxKind[OpenBracketToken](840,15): [
SyntaxKind[QuestionToken](840,16): ?
SyntaxKind[Identifier](840,17): Yield
SyntaxKind[CommaToken](840,22): ,
SyntaxKind[Identifier](840,24): Return
SyntaxKind[CloseBracketToken](840,30): ]
SyntaxKind[QuestionToken](840,31): ?
SyntaxKind[LineTerminatorToken](841,1): «line terminator»
SyntaxKind[DedentToken](841,1): «dedent»
SyntaxKind[LineTerminatorToken](842,1): «line terminator»
SyntaxKind[Identifier](842,1): ArrowFunction
SyntaxKind[OpenBracketToken](842,14): [
SyntaxKind[Identifier](842,15): In
SyntaxKind[CommaToken](842,17): ,
SyntaxKind[Identifier](842,19): Yield
SyntaxKind[CloseBracketToken](842,24): ]
SyntaxKind[ColonToken](842,27): :
SyntaxKind[LineTerminatorToken](843,1): «line terminator»
SyntaxKind[IndentToken](843,1): «indent»
SyntaxKind[Identifier](843,2): ArrowParameters
SyntaxKind[OpenBracketToken](843,17): [
SyntaxKind[QuestionToken](843,18): ?
SyntaxKind[Identifier](843,19): Yield
SyntaxKind[CloseBracketToken](843,24): ]
SyntaxKind[OpenBracketToken](843,26): [
SyntaxKind[NoKeyword](843,27): no
SyntaxKind[Identifier](843,30): LineTerminator
SyntaxKind[HereKeyword](843,45): here
SyntaxKind[CloseBracketToken](843,49): ]
SyntaxKind[Terminal](843,51): `=>`
SyntaxKind[Identifier](843,56): ConciseBody
SyntaxKind[OpenBracketToken](843,67): [
SyntaxKind[QuestionToken](843,68): ?
SyntaxKind[Identifier](843,69): In
SyntaxKind[CloseBracketToken](843,71): ]
SyntaxKind[LineTerminatorToken](844,1): «line terminator»
SyntaxKind[DedentToken](844,1): «dedent»
SyntaxKind[LineTerminatorToken](845,1): «line terminator»
SyntaxKind[Identifier](845,1): ArrowParameters
SyntaxKind[OpenBracketToken](845,16): [
SyntaxKind[Identifier](845,17): Yield
SyntaxKind[CloseBracketToken](845,22): ]
SyntaxKind[ColonToken](845,25): :
SyntaxKind[LineTerminatorToken](846,1): «line terminator»
SyntaxKind[IndentToken](846,1): «indent»
SyntaxKind[Identifier](846,2): BindingIdentifier
SyntaxKind[OpenBracketToken](846,19): [
SyntaxKind[QuestionToken](846,20): ?
SyntaxKind[Identifier](846,21): Yield
SyntaxKind[CloseBracketToken](846,26): ]
SyntaxKind[LineTerminatorToken](847,1): «line terminator»
SyntaxKind[Identifier](847,2): CoverParenthesizedExpressionAndArrowParameterList
SyntaxKind[OpenBracketToken](847,51): [
SyntaxKind[QuestionToken](847,52): ?
SyntaxKind[Identifier](847,53): Yield
SyntaxKind[CloseBracketToken](847,58): ]
SyntaxKind[LineTerminatorToken](848,1): «line terminator»
SyntaxKind[DedentToken](848,1): «dedent»
SyntaxKind[LineTerminatorToken](849,1): «line terminator»
SyntaxKind[Identifier](849,1): ConciseBody
SyntaxKind[OpenBracketToken](849,12): [
SyntaxKind[Identifier](849,13): In
SyntaxKind[CloseBracketToken](849,15): ]
SyntaxKind[ColonToken](849,17): :
SyntaxKind[LineTerminatorToken](850,1): «line terminator»
SyntaxKind[IndentToken](850,1): «indent»
SyntaxKind[OpenBracketToken](850,2): [
SyntaxKind[LookaheadKeyword](850,3): lookahead
SyntaxKind[ExclamationEqualsToken](850,13): !=
SyntaxKind[Terminal](850,16): `{`
SyntaxKind[CloseBracketToken](850,19): ]
SyntaxKind[Identifier](850,21): AssignmentExpression
SyntaxKind[OpenBracketToken](850,41): [
SyntaxKind[QuestionToken](850,42): ?
SyntaxKind[Identifier](850,43): In
SyntaxKind[CloseBracketToken](850,45): ]
SyntaxKind[LineTerminatorToken](851,1): «line terminator»
SyntaxKind[Terminal](851,2): `{`
SyntaxKind[Identifier](851,6): FunctionBody
SyntaxKind[Terminal](851,19): `}`
SyntaxKind[LineTerminatorToken](852,1): «line terminator»
SyntaxKind[DedentToken](852,1): «dedent»
SyntaxKind[LineTerminatorToken](853,1): «line terminator»
SyntaxKind[Identifier](853,1): MethodDefinition
SyntaxKind[OpenBracketToken](853,17): [
SyntaxKind[Identifier](853,18): Yield
SyntaxKind[CloseBracketToken](853,23): ]
SyntaxKind[ColonToken](853,25): :
SyntaxKind[LineTerminatorToken](854,1): «line terminator»
SyntaxKind[IndentToken](854,1): «indent»
SyntaxKind[Identifier](854,2): PropertyName
SyntaxKind[OpenBracketToken](854,14): [
SyntaxKind[QuestionToken](854,15): ?
SyntaxKind[Identifier](854,16): Yield
SyntaxKind[CloseBracketToken](854,21): ]
SyntaxKind[Terminal](854,23): `(`
SyntaxKind[Identifier](854,27): StrictFormalParameters
SyntaxKind[Terminal](854,50): `)`
SyntaxKind[Terminal](854,54): `{`
SyntaxKind[Identifier](854,58): FunctionBody
SyntaxKind[Terminal](854,71): `}`
SyntaxKind[LineTerminatorToken](855,1): «line terminator»
SyntaxKind[Identifier](855,2): GeneratorMethod
SyntaxKind[OpenBracketToken](855,17): [
SyntaxKind[QuestionToken](855,18): ?
SyntaxKind[Identifier](855,19): Yield
SyntaxKind[CloseBracketToken](855,24): ]
SyntaxKind[LineTerminatorToken](856,1): «line terminator»
SyntaxKind[Terminal](856,2): `get`
SyntaxKind[Identifier](856,8): PropertyName
SyntaxKind[OpenBracketToken](856,20): [
SyntaxKind[QuestionToken](856,21): ?
SyntaxKind[Identifier](856,22): Yield
SyntaxKind[CloseBracketToken](856,27): ]
SyntaxKind[Terminal](856,29): `(`
SyntaxKind[Terminal](856,33): `)`
SyntaxKind[Terminal](856,37): `{`
SyntaxKind[Identifier](856,41): FunctionBody
SyntaxKind[Terminal](856,54): `}`
SyntaxKind[LineTerminatorToken](857,1): «line terminator»
SyntaxKind[Terminal](857,2): `set`
SyntaxKind[Identifier](857,8): PropertyName
SyntaxKind[OpenBracketToken](857,20): [
SyntaxKind[QuestionToken](857,21): ?
SyntaxKind[Identifier](857,22): Yield
SyntaxKind[CloseBracketToken](857,27): ]
SyntaxKind[Terminal](857,29): `(`
SyntaxKind[Identifier](857,33): PropertySetParameterList
SyntaxKind[Terminal](857,58): `)`
SyntaxKind[Terminal](857,62): `{`
SyntaxKind[Identifier](857,66): FunctionBody
SyntaxKind[Terminal](857,79): `}`
SyntaxKind[LineTerminatorToken](858,1): «line terminator»
SyntaxKind[DedentToken](858,1): «dedent»
SyntaxKind[LineTerminatorToken](859,1): «line terminator»
SyntaxKind[Identifier](859,1): PropertySetParameterList
SyntaxKind[ColonToken](859,26): :
SyntaxKind[LineTerminatorToken](860,1): «line terminator»
SyntaxKind[IndentToken](860,1): «indent»
SyntaxKind[Identifier](860,2): FormalParameter
SyntaxKind[LineTerminatorToken](861,1): «line terminator»
SyntaxKind[DedentToken](861,1): «dedent»
SyntaxKind[LineTerminatorToken](862,1): «line terminator»
SyntaxKind[Identifier](862,1): GeneratorMethod
SyntaxKind[OpenBracketToken](862,16): [
SyntaxKind[Identifier](862,17): Yield
SyntaxKind[CloseBracketToken](862,22): ]
SyntaxKind[ColonToken](862,24): :
SyntaxKind[LineTerminatorToken](863,1): «line terminator»
SyntaxKind[IndentToken](863,1): «indent»
SyntaxKind[Terminal](863,2): `*`
SyntaxKind[Identifier](863,6): PropertyName
SyntaxKind[OpenBracketToken](863,18): [
SyntaxKind[QuestionToken](863,19): ?
SyntaxKind[Identifier](863,20): Yield
SyntaxKind[CloseBracketToken](863,25): ]
SyntaxKind[Terminal](863,27): `(`
SyntaxKind[Identifier](863,31): StrictFormalParameters
SyntaxKind[OpenBracketToken](863,53): [
SyntaxKind[Identifier](863,54): Yield
SyntaxKind[CloseBracketToken](863,59): ]
SyntaxKind[Terminal](863,61): `)`
SyntaxKind[Terminal](863,65): `{`
SyntaxKind[Identifier](863,69): GeneratorBody
SyntaxKind[Terminal](863,83): `}`
SyntaxKind[LineTerminatorToken](864,1): «line terminator»
SyntaxKind[DedentToken](864,1): «dedent»
SyntaxKind[LineTerminatorToken](865,1): «line terminator»
SyntaxKind[Identifier](865,1): GeneratorDeclaration
SyntaxKind[OpenBracketToken](865,21): [
SyntaxKind[Identifier](865,22): Yield
SyntaxKind[CommaToken](865,27): ,
SyntaxKind[Identifier](865,29): Default
SyntaxKind[CloseBracketToken](865,36): ]
SyntaxKind[ColonToken](865,38): :
SyntaxKind[LineTerminatorToken](866,1): «line terminator»
SyntaxKind[IndentToken](866,1): «indent»
SyntaxKind[Terminal](866,2): `function`
SyntaxKind[Terminal](866,13): `*`
SyntaxKind[Identifier](866,17): BindingIdentifier
SyntaxKind[OpenBracketToken](866,34): [
SyntaxKind[QuestionToken](866,35): ?
SyntaxKind[Identifier](866,36): Yield
SyntaxKind[CloseBracketToken](866,41): ]
SyntaxKind[Terminal](866,43): `(`
SyntaxKind[Identifier](866,47): FormalParameters
SyntaxKind[OpenBracketToken](866,63): [
SyntaxKind[Identifier](866,64): Yield
SyntaxKind[CloseBracketToken](866,69): ]
SyntaxKind[Terminal](866,71): `)`
SyntaxKind[Terminal](866,75): `{`
SyntaxKind[Identifier](866,79): GeneratorBody
SyntaxKind[Terminal](866,93): `}`
SyntaxKind[LineTerminatorToken](867,1): «line terminator»
SyntaxKind[OpenBracketToken](867,2): [
SyntaxKind[PlusToken](867,3): +
SyntaxKind[Identifier](867,4): Default
SyntaxKind[CloseBracketToken](867,11): ]
SyntaxKind[Terminal](867,13): `function`
SyntaxKind[Terminal](867,24): `*`
SyntaxKind[Terminal](867,28): `(`
SyntaxKind[Identifier](867,32): FormalParameters
SyntaxKind[OpenBracketToken](867,48): [
SyntaxKind[Identifier](867,49): Yield
SyntaxKind[CloseBracketToken](867,54): ]
SyntaxKind[Terminal](867,56): `)`
SyntaxKind[Terminal](867,60): `{`
SyntaxKind[Identifier](867,64): GeneratorBody
SyntaxKind[Terminal](867,78): `}`
SyntaxKind[LineTerminatorToken](868,1): «line terminator»
SyntaxKind[DedentToken](868,1): «dedent»
SyntaxKind[LineTerminatorToken](869,1): «line terminator»
SyntaxKind[Identifier](869,1): GeneratorExpression
SyntaxKind[ColonToken](869,21): :
SyntaxKind[LineTerminatorToken](870,1): «line terminator»
SyntaxKind[IndentToken](870,1): «indent»
SyntaxKind[Terminal](870,2): `function`
SyntaxKind[Terminal](870,13): `*`
SyntaxKind[Identifier](870,17): BindingIdentifier
SyntaxKind[OpenBracketToken](870,34): [
SyntaxKind[Identifier](870,35): Yield
SyntaxKind[CloseBracketToken](870,40): ]
SyntaxKind[QuestionToken](870,41): ?
SyntaxKind[Terminal](870,43): `(`
SyntaxKind[Identifier](870,47): FormalParameters
SyntaxKind[OpenBracketToken](870,63): [
SyntaxKind[Identifier](870,64): Yield
SyntaxKind[CloseBracketToken](870,69): ]
SyntaxKind[Terminal](870,71): `)`
SyntaxKind[Terminal](870,75): `{`
SyntaxKind[Identifier](870,79): GeneratorBody
SyntaxKind[Terminal](870,93): `}`
SyntaxKind[LineTerminatorToken](871,1): «line terminator»
SyntaxKind[DedentToken](871,1): «dedent»
SyntaxKind[LineTerminatorToken](872,1): «line terminator»
SyntaxKind[Identifier](872,1): GeneratorBody
SyntaxKind[ColonToken](872,15): :
SyntaxKind[LineTerminatorToken](873,1): «line terminator»
SyntaxKind[IndentToken](873,1): «indent»
SyntaxKind[Identifier](873,2): FunctionBody
SyntaxKind[OpenBracketToken](873,14): [
SyntaxKind[Identifier](873,15): Yield
SyntaxKind[CloseBracketToken](873,20): ]
SyntaxKind[LineTerminatorToken](874,1): «line terminator»
SyntaxKind[DedentToken](874,1): «dedent»
SyntaxKind[LineTerminatorToken](875,1): «line terminator»
SyntaxKind[Identifier](875,1): YieldExpression
SyntaxKind[OpenBracketToken](875,16): [
SyntaxKind[Identifier](875,17): In
SyntaxKind[CloseBracketToken](875,19): ]
SyntaxKind[ColonToken](875,21): :
SyntaxKind[LineTerminatorToken](876,1): «line terminator»
SyntaxKind[IndentToken](876,1): «indent»
SyntaxKind[Terminal](876,2): `yield`
SyntaxKind[LineTerminatorToken](877,1): «line terminator»
SyntaxKind[Terminal](877,2): `yield`
SyntaxKind[OpenBracketToken](877,10): [
SyntaxKind[NoKeyword](877,11): no
SyntaxKind[Identifier](877,14): LineTerminator
SyntaxKind[HereKeyword](877,29): here
SyntaxKind[CloseBracketToken](877,33): ]
SyntaxKind[Identifier](877,35): AssignmentExpression
SyntaxKind[OpenBracketToken](877,55): [
SyntaxKind[QuestionToken](877,56): ?
SyntaxKind[Identifier](877,57): In
SyntaxKind[CommaToken](877,59): ,
SyntaxKind[Identifier](877,61): Yield
SyntaxKind[CloseBracketToken](877,66): ]
SyntaxKind[LineTerminatorToken](878,1): «line terminator»
SyntaxKind[Terminal](878,2): `yield`
SyntaxKind[OpenBracketToken](878,10): [
SyntaxKind[NoKeyword](878,11): no
SyntaxKind[Identifier](878,14): LineTerminator
SyntaxKind[HereKeyword](878,29): here
SyntaxKind[CloseBracketToken](878,33): ]
SyntaxKind[Terminal](878,35): `*`
SyntaxKind[Identifier](878,39): AssignmentExpression
SyntaxKind[OpenBracketToken](878,59): [
SyntaxKind[QuestionToken](878,60): ?
SyntaxKind[Identifier](878,61): In
SyntaxKind[CommaToken](878,63): ,
SyntaxKind[Identifier](878,65): Yield
SyntaxKind[CloseBracketToken](878,70): ]
SyntaxKind[LineTerminatorToken](879,1): «line terminator»
SyntaxKind[DedentToken](879,1): «dedent»
SyntaxKind[LineTerminatorToken](880,1): «line terminator»
SyntaxKind[Identifier](880,1): ClassDeclaration
SyntaxKind[OpenBracketToken](880,17): [
SyntaxKind[Identifier](880,18): Yield
SyntaxKind[CommaToken](880,23): ,
SyntaxKind[Identifier](880,25): Default
SyntaxKind[CloseBracketToken](880,32): ]
SyntaxKind[ColonToken](880,34): :
SyntaxKind[LineTerminatorToken](881,1): «line terminator»
SyntaxKind[IndentToken](881,1): «indent»
SyntaxKind[Terminal](881,2): `class`
SyntaxKind[Identifier](881,10): BindingIdentifier
SyntaxKind[OpenBracketToken](881,27): [
SyntaxKind[QuestionToken](881,28): ?
SyntaxKind[Identifier](881,29): Yield
SyntaxKind[CloseBracketToken](881,34): ]
SyntaxKind[Identifier](881,36): ClassTail
SyntaxKind[OpenBracketToken](881,45): [
SyntaxKind[QuestionToken](881,46): ?
SyntaxKind[Identifier](881,47): Yield
SyntaxKind[CloseBracketToken](881,52): ]
SyntaxKind[LineTerminatorToken](882,1): «line terminator»
SyntaxKind[OpenBracketToken](882,2): [
SyntaxKind[PlusToken](882,3): +
SyntaxKind[Identifier](882,4): Default
SyntaxKind[CloseBracketToken](882,11): ]
SyntaxKind[Terminal](882,13): `class`
SyntaxKind[Identifier](882,21): ClassTail
SyntaxKind[OpenBracketToken](882,30): [
SyntaxKind[QuestionToken](882,31): ?
SyntaxKind[Identifier](882,32): Yield
SyntaxKind[CloseBracketToken](882,37): ]
SyntaxKind[LineTerminatorToken](883,1): «line terminator»
SyntaxKind[DedentToken](883,1): «dedent»
SyntaxKind[LineTerminatorToken](884,1): «line terminator»
SyntaxKind[Identifier](884,1): ClassExpression
SyntaxKind[OpenBracketToken](884,16): [
SyntaxKind[Identifier](884,17): Yield
SyntaxKind[CloseBracketToken](884,22): ]
SyntaxKind[ColonToken](884,24): :
SyntaxKind[LineTerminatorToken](885,1): «line terminator»
SyntaxKind[IndentToken](885,1): «indent»
SyntaxKind[Terminal](885,2): `class`
SyntaxKind[Identifier](885,10): BindingIdentifier
SyntaxKind[OpenBracketToken](885,27): [
SyntaxKind[QuestionToken](885,28): ?
SyntaxKind[Identifier](885,29): Yield
SyntaxKind[CloseBracketToken](885,34): ]
SyntaxKind[QuestionToken](885,35): ?
SyntaxKind[Identifier](885,37): ClassTail
SyntaxKind[OpenBracketToken](885,46): [
SyntaxKind[QuestionToken](885,47): ?
SyntaxKind[Identifier](885,48): Yield
SyntaxKind[CloseBracketToken](885,53): ]
SyntaxKind[LineTerminatorToken](886,1): «line terminator»
SyntaxKind[DedentToken](886,1): «dedent»
SyntaxKind[LineTerminatorToken](887,1): «line terminator»
SyntaxKind[Identifier](887,1): ClassTail
SyntaxKind[OpenBracketToken](887,10): [
SyntaxKind[Identifier](887,11): Yield
SyntaxKind[CloseBracketToken](887,16): ]
SyntaxKind[ColonToken](887,18): :
SyntaxKind[LineTerminatorToken](888,1): «line terminator»
SyntaxKind[IndentToken](888,1): «indent»
SyntaxKind[Identifier](888,2): ClassHeritage
SyntaxKind[OpenBracketToken](888,15): [
SyntaxKind[QuestionToken](888,16): ?
SyntaxKind[Identifier](888,17): Yield
SyntaxKind[CloseBracketToken](888,22): ]
SyntaxKind[QuestionToken](888,23): ?
SyntaxKind[Terminal](888,25): `{`
SyntaxKind[Identifier](888,29): ClassBody
SyntaxKind[OpenBracketToken](888,38): [
SyntaxKind[QuestionToken](888,39): ?
SyntaxKind[Identifier](888,40): Yield
SyntaxKind[CloseBracketToken](888,45): ]
SyntaxKind[QuestionToken](888,46): ?
SyntaxKind[Terminal](888,48): `}`
SyntaxKind[LineTerminatorToken](889,1): «line terminator»
SyntaxKind[DedentToken](889,1): «dedent»
SyntaxKind[LineTerminatorToken](890,1): «line terminator»
SyntaxKind[Identifier](890,1): ClassHeritage
SyntaxKind[OpenBracketToken](890,14): [
SyntaxKind[Identifier](890,15): Yield
SyntaxKind[CloseBracketToken](890,20): ]
SyntaxKind[ColonToken](890,22): :
SyntaxKind[LineTerminatorToken](891,1): «line terminator»
SyntaxKind[IndentToken](891,1): «indent»
SyntaxKind[Terminal](891,2): `extends`
SyntaxKind[Identifier](891,12): LeftHandSideExpression
SyntaxKind[OpenBracketToken](891,34): [
SyntaxKind[QuestionToken](891,35): ?
SyntaxKind[Identifier](891,36): Yield
SyntaxKind[CloseBracketToken](891,41): ]
SyntaxKind[LineTerminatorToken](892,1): «line terminator»
SyntaxKind[DedentToken](892,1): «dedent»
SyntaxKind[LineTerminatorToken](893,1): «line terminator»
SyntaxKind[Identifier](893,1): ClassBody
SyntaxKind[OpenBracketToken](893,10): [
SyntaxKind[Identifier](893,11): Yield
SyntaxKind[CloseBracketToken](893,16): ]
SyntaxKind[ColonToken](893,18): :
SyntaxKind[LineTerminatorToken](894,1): «line terminator»
SyntaxKind[IndentToken](894,1): «indent»
SyntaxKind[Identifier](894,2): ClassElementList
SyntaxKind[OpenBracketToken](894,18): [
SyntaxKind[QuestionToken](894,19): ?
SyntaxKind[Identifier](894,20): Yield
SyntaxKind[CloseBracketToken](894,25): ]
SyntaxKind[LineTerminatorToken](895,1): «line terminator»
SyntaxKind[DedentToken](895,1): «dedent»
SyntaxKind[LineTerminatorToken](896,1): «line terminator»
SyntaxKind[Identifier](896,1): ClassElementList
SyntaxKind[OpenBracketToken](896,17): [
SyntaxKind[Identifier](896,18): Yield
SyntaxKind[CloseBracketToken](896,23): ]
SyntaxKind[ColonToken](896,25): :
SyntaxKind[LineTerminatorToken](897,1): «line terminator»
SyntaxKind[IndentToken](897,1): «indent»
SyntaxKind[Identifier](897,2): ClassElement
SyntaxKind[OpenBracketToken](897,14): [
SyntaxKind[QuestionToken](897,15): ?
SyntaxKind[Identifier](897,16): Yield
SyntaxKind[CloseBracketToken](897,21): ]
SyntaxKind[LineTerminatorToken](898,1): «line terminator»
SyntaxKind[Identifier](898,2): ClassElementList
SyntaxKind[OpenBracketToken](898,18): [
SyntaxKind[QuestionToken](898,19): ?
SyntaxKind[Identifier](898,20): Yield
SyntaxKind[CloseBracketToken](898,25): ]
SyntaxKind[Identifier](898,28): ClassElement
SyntaxKind[OpenBracketToken](898,40): [
SyntaxKind[QuestionToken](898,41): ?
SyntaxKind[Identifier](898,42): Yield
SyntaxKind[CloseBracketToken](898,47): ]
SyntaxKind[LineTerminatorToken](899,1): «line terminator»
SyntaxKind[DedentToken](899,1): «dedent»
SyntaxKind[LineTerminatorToken](900,1): «line terminator»
SyntaxKind[Identifier](900,1): ClassElement
SyntaxKind[OpenBracketToken](900,13): [
SyntaxKind[Identifier](900,14): Yield
SyntaxKind[CloseBracketToken](900,19): ]
SyntaxKind[ColonToken](900,21): :
SyntaxKind[LineTerminatorToken](901,1): «line terminator»
SyntaxKind[IndentToken](901,1): «indent»
SyntaxKind[Identifier](901,2): MethodDefinition
SyntaxKind[OpenBracketToken](901,18): [
SyntaxKind[QuestionToken](901,19): ?
SyntaxKind[Identifier](901,20): Yield
SyntaxKind[CloseBracketToken](901,25): ]
SyntaxKind[LineTerminatorToken](902,1): «line terminator»
SyntaxKind[Terminal](902,2): `static`
SyntaxKind[Identifier](902,11): MethodDefinition
SyntaxKind[OpenBracketToken](902,27): [
SyntaxKind[QuestionToken](902,28): ?
SyntaxKind[Identifier](902,29): Yield
SyntaxKind[CloseBracketToken](902,34): ]
SyntaxKind[LineTerminatorToken](903,1): «line terminator»
SyntaxKind[Terminal](903,2): `;`
SyntaxKind[LineTerminatorToken](904,1): «line terminator»
SyntaxKind[DedentToken](904,1): «dedent»
SyntaxKind[LineTerminatorToken](905,1): «line terminator»
SyntaxKind[LineTerminatorToken](906,1): «line terminator»
SyntaxKind[Identifier](906,1): Script
SyntaxKind[ColonToken](906,8): :
SyntaxKind[LineTerminatorToken](907,1): «line terminator»
SyntaxKind[IndentToken](907,1): «indent»
SyntaxKind[Identifier](907,2): ScriptBody
SyntaxKind[QuestionToken](907,12): ?
SyntaxKind[LineTerminatorToken](908,1): «line terminator»
SyntaxKind[DedentToken](908,1): «dedent»
SyntaxKind[LineTerminatorToken](909,1): «line terminator»
SyntaxKind[Identifier](909,1): ScriptBody
SyntaxKind[ColonToken](909,12): :
SyntaxKind[LineTerminatorToken](910,1): «line terminator»
SyntaxKind[IndentToken](910,1): «indent»
SyntaxKind[Identifier](910,2): StatementList
SyntaxKind[LineTerminatorToken](911,1): «line terminator»
SyntaxKind[DedentToken](911,1): «dedent»
SyntaxKind[LineTerminatorToken](912,1): «line terminator»
SyntaxKind[Identifier](912,1): Module
SyntaxKind[ColonToken](912,8): :
SyntaxKind[LineTerminatorToken](913,1): «line terminator»
SyntaxKind[IndentToken](913,1): «indent»
SyntaxKind[Identifier](913,2): ModuleBody
SyntaxKind[QuestionToken](913,12): ?
SyntaxKind[LineTerminatorToken](914,1): «line terminator»
SyntaxKind[DedentToken](914,1): «dedent»
SyntaxKind[LineTerminatorToken](915,1): «line terminator»
SyntaxKind[Identifier](915,1): ModuleBody
SyntaxKind[ColonToken](915,12): :
SyntaxKind[LineTerminatorToken](916,1): «line terminator»
SyntaxKind[IndentToken](916,1): «indent»
SyntaxKind[Identifier](916,2): ModuleItemList
SyntaxKind[LineTerminatorToken](917,1): «line terminator»
SyntaxKind[DedentToken](917,1): «dedent»
SyntaxKind[LineTerminatorToken](918,1): «line terminator»
SyntaxKind[Identifier](918,1): ModuleItemList
SyntaxKind[ColonToken](918,16): :
SyntaxKind[LineTerminatorToken](919,1): «line terminator»
SyntaxKind[IndentToken](919,1): «indent»
SyntaxKind[Identifier](919,2): ModuleItem
SyntaxKind[LineTerminatorToken](920,1): «line terminator»
SyntaxKind[Identifier](920,2): ModuleItemList
SyntaxKind[Identifier](920,18): ModuleItem
SyntaxKind[LineTerminatorToken](921,1): «line terminator»
SyntaxKind[DedentToken](921,1): «dedent»
SyntaxKind[LineTerminatorToken](922,1): «line terminator»
SyntaxKind[Identifier](922,1): ModuleItem
SyntaxKind[ColonToken](922,12): :
SyntaxKind[LineTerminatorToken](923,1): «line terminator»
SyntaxKind[IndentToken](923,1): «indent»
SyntaxKind[Identifier](923,2): ImportDeclaration
SyntaxKind[LineTerminatorToken](924,1): «line terminator»
SyntaxKind[Identifier](924,2): ExportDeclaration
SyntaxKind[LineTerminatorToken](925,1): «line terminator»
SyntaxKind[Identifier](925,2): StatementListItem
SyntaxKind[LineTerminatorToken](926,1): «line terminator»
SyntaxKind[DedentToken](926,1): «dedent»
SyntaxKind[LineTerminatorToken](927,1): «line terminator»
SyntaxKind[Identifier](927,1): ImportDeclaration
SyntaxKind[ColonToken](927,19): :
SyntaxKind[LineTerminatorToken](928,1): «line terminator»
SyntaxKind[IndentToken](928,1): «indent»
SyntaxKind[Terminal](928,2): `import`
SyntaxKind[Identifier](928,12): ImportClause
SyntaxKind[Identifier](928,25): FromClause
SyntaxKind[Terminal](928,36): `;`
SyntaxKind[LineTerminatorToken](929,1): «line terminator»
SyntaxKind[Terminal](929,2): `import`
SyntaxKind[Identifier](929,12): ModuleSpecifier
SyntaxKind[Terminal](929,28): `;`
SyntaxKind[LineTerminatorToken](930,1): «line terminator»
SyntaxKind[DedentToken](930,1): «dedent»
SyntaxKind[LineTerminatorToken](931,1): «line terminator»
SyntaxKind[Identifier](931,1): ImportClause
SyntaxKind[ColonToken](931,14): :
SyntaxKind[LineTerminatorToken](932,1): «line terminator»
SyntaxKind[IndentToken](932,1): «indent»
SyntaxKind[Identifier](932,2): ImportedDefaultBinding
SyntaxKind[LineTerminatorToken](933,1): «line terminator»
SyntaxKind[Identifier](933,2): NameSpaceImport
SyntaxKind[LineTerminatorToken](934,1): «line terminator»
SyntaxKind[Identifier](934,2): NamedImports
SyntaxKind[LineTerminatorToken](935,1): «line terminator»
SyntaxKind[Identifier](935,2): ImportedDefaultBinding
SyntaxKind[Terminal](935,25): `,`
SyntaxKind[Identifier](935,29): NameSpaceImport
SyntaxKind[LineTerminatorToken](936,1): «line terminator»
SyntaxKind[Identifier](936,2): ImportedDefaultBinding
SyntaxKind[Terminal](936,25): `,`
SyntaxKind[Identifier](936,29): NamedImports
SyntaxKind[LineTerminatorToken](937,1): «line terminator»
SyntaxKind[DedentToken](937,1): «dedent»
SyntaxKind[LineTerminatorToken](938,1): «line terminator»
SyntaxKind[Identifier](938,1): ImportedDefaultBinding
SyntaxKind[ColonToken](938,24): :
SyntaxKind[LineTerminatorToken](939,1): «line terminator»
SyntaxKind[IndentToken](939,1): «indent»
SyntaxKind[Identifier](939,2): ImportedBinding
SyntaxKind[LineTerminatorToken](940,1): «line terminator»
SyntaxKind[DedentToken](940,1): «dedent»
SyntaxKind[LineTerminatorToken](941,1): «line terminator»
SyntaxKind[Identifier](941,1): NameSpaceImport
SyntaxKind[ColonToken](941,17): :
SyntaxKind[LineTerminatorToken](942,1): «line terminator»
SyntaxKind[IndentToken](942,1): «indent»
SyntaxKind[Terminal](942,2): `*`
SyntaxKind[Terminal](942,6): `as`
SyntaxKind[Identifier](942,11): ImportedBinding
SyntaxKind[LineTerminatorToken](943,1): «line terminator»
SyntaxKind[DedentToken](943,1): «dedent»
SyntaxKind[LineTerminatorToken](944,1): «line terminator»
SyntaxKind[Identifier](944,1): NamedImports
SyntaxKind[ColonToken](944,14): :
SyntaxKind[LineTerminatorToken](945,1): «line terminator»
SyntaxKind[IndentToken](945,1): «indent»
SyntaxKind[Terminal](945,2): `{`
SyntaxKind[Terminal](945,6): `}`
SyntaxKind[LineTerminatorToken](946,1): «line terminator»
SyntaxKind[Terminal](946,2): `{`
SyntaxKind[Identifier](946,6): ImportsList
SyntaxKind[Terminal](946,18): `}`
SyntaxKind[LineTerminatorToken](947,1): «line terminator»
SyntaxKind[Terminal](947,2): `{`
SyntaxKind[Identifier](947,6): ImportsList
SyntaxKind[Terminal](947,18): `,`
SyntaxKind[Terminal](947,22): `}`
SyntaxKind[LineTerminatorToken](948,1): «line terminator»
SyntaxKind[DedentToken](948,1): «dedent»
SyntaxKind[LineTerminatorToken](949,1): «line terminator»
SyntaxKind[Identifier](949,1): FromClause
SyntaxKind[ColonToken](949,12): :
SyntaxKind[LineTerminatorToken](950,1): «line terminator»
SyntaxKind[IndentToken](950,1): «indent»
SyntaxKind[Terminal](950,2): `from`
SyntaxKind[Identifier](950,9): ModuleSpecifier
SyntaxKind[LineTerminatorToken](951,1): «line terminator»
SyntaxKind[DedentToken](951,1): «dedent»
SyntaxKind[LineTerminatorToken](952,1): «line terminator»
SyntaxKind[Identifier](952,1): ImportsList
SyntaxKind[ColonToken](952,13): :
SyntaxKind[LineTerminatorToken](953,1): «line terminator»
SyntaxKind[IndentToken](953,1): «indent»
SyntaxKind[Identifier](953,2): ImportSpecifier
SyntaxKind[LineTerminatorToken](954,1): «line terminator»
SyntaxKind[Identifier](954,2): ImportsList
SyntaxKind[Terminal](954,14): `,`
SyntaxKind[Identifier](954,18): ImportSpecifier
SyntaxKind[LineTerminatorToken](955,1): «line terminator»
SyntaxKind[DedentToken](955,1): «dedent»
SyntaxKind[LineTerminatorToken](956,1): «line terminator»
SyntaxKind[Identifier](956,1): ImportSpecifier
SyntaxKind[ColonToken](956,17): :
SyntaxKind[LineTerminatorToken](957,1): «line terminator»
SyntaxKind[IndentToken](957,1): «indent»
SyntaxKind[Identifier](957,2): ImportedBinding
SyntaxKind[LineTerminatorToken](958,1): «line terminator»
SyntaxKind[Identifier](958,2): IdentifierName
SyntaxKind[Terminal](958,17): `as`
SyntaxKind[Identifier](958,22): ImportedBinding
SyntaxKind[LineTerminatorToken](959,1): «line terminator»
SyntaxKind[DedentToken](959,1): «dedent»
SyntaxKind[LineTerminatorToken](960,1): «line terminator»
SyntaxKind[Identifier](960,1): ModuleSpecifier
SyntaxKind[ColonToken](960,17): :
SyntaxKind[LineTerminatorToken](961,1): «line terminator»
SyntaxKind[IndentToken](961,1): «indent»
SyntaxKind[Identifier](961,2): StringLiteral
SyntaxKind[LineTerminatorToken](962,1): «line terminator»
SyntaxKind[DedentToken](962,1): «dedent»
SyntaxKind[LineTerminatorToken](963,1): «line terminator»
SyntaxKind[Identifier](963,1): ImportedBinding
SyntaxKind[ColonToken](963,17): :
SyntaxKind[LineTerminatorToken](964,1): «line terminator»
SyntaxKind[IndentToken](964,1): «indent»
SyntaxKind[Identifier](964,2): BindingIdentifier
SyntaxKind[LineTerminatorToken](965,1): «line terminator»
SyntaxKind[DedentToken](965,1): «dedent»
SyntaxKind[LineTerminatorToken](966,1): «line terminator»
SyntaxKind[Identifier](966,1): ExportDeclaration
SyntaxKind[ColonToken](966,19): :
SyntaxKind[LineTerminatorToken](967,1): «line terminator»
SyntaxKind[IndentToken](967,1): «indent»
SyntaxKind[Terminal](967,2): `export`
SyntaxKind[Terminal](967,11): `*`
SyntaxKind[Identifier](967,15): FromClause
SyntaxKind[Terminal](967,26): `;`
SyntaxKind[LineTerminatorToken](968,1): «line terminator»
SyntaxKind[Terminal](968,2): `export`
SyntaxKind[Identifier](968,11): ExportClause
SyntaxKind[Identifier](968,24): FromClause
SyntaxKind[Terminal](968,35): `;`
SyntaxKind[LineTerminatorToken](969,1): «line terminator»
SyntaxKind[Terminal](969,2): `export`
SyntaxKind[Identifier](969,11): ExportClause
SyntaxKind[Terminal](969,24): `;`
SyntaxKind[LineTerminatorToken](970,1): «line terminator»
SyntaxKind[Terminal](970,2): `export`
SyntaxKind[Identifier](970,11): VariableStatement
SyntaxKind[LineTerminatorToken](971,1): «line terminator»
SyntaxKind[Terminal](971,2): `export`
SyntaxKind[Identifier](971,11): Declaration
SyntaxKind[LineTerminatorToken](972,1): «line terminator»
SyntaxKind[Terminal](972,2): `export`
SyntaxKind[Terminal](972,11): `default`
SyntaxKind[Identifier](972,21): HoistableDeclaration
SyntaxKind[OpenBracketToken](972,41): [
SyntaxKind[Identifier](972,42): Default
SyntaxKind[CloseBracketToken](972,49): ]
SyntaxKind[LineTerminatorToken](973,1): «line terminator»
SyntaxKind[Terminal](973,2): `export`
SyntaxKind[Terminal](973,11): `default`
SyntaxKind[Identifier](973,21): ClassDeclaration
SyntaxKind[OpenBracketToken](973,37): [
SyntaxKind[Identifier](973,38): Default
SyntaxKind[CloseBracketToken](973,45): ]
SyntaxKind[LineTerminatorToken](974,1): «line terminator»
SyntaxKind[Terminal](974,2): `export`
SyntaxKind[Terminal](974,11): `default`
SyntaxKind[OpenBracketToken](974,21): [
SyntaxKind[LookaheadKeyword](974,22): lookahead
SyntaxKind[LessThanExclamationToken](974,32): <!
SyntaxKind[OpenBraceToken](974,35): {
SyntaxKind[Terminal](974,37): `function`
SyntaxKind[CommaToken](974,47): ,
SyntaxKind[Terminal](974,49): `class`
SyntaxKind[CloseBraceToken](974,57): }
SyntaxKind[CloseBracketToken](974,58): ]
SyntaxKind[Identifier](974,60): AssignmentExpression
SyntaxKind[OpenBracketToken](974,80): [
SyntaxKind[Identifier](974,81): In
SyntaxKind[CloseBracketToken](974,83): ]
SyntaxKind[Terminal](974,85): `;`
SyntaxKind[LineTerminatorToken](975,1): «line terminator»
SyntaxKind[DedentToken](975,1): «dedent»
SyntaxKind[LineTerminatorToken](976,1): «line terminator»
SyntaxKind[Identifier](976,1): ExportClause
SyntaxKind[ColonToken](976,14): :
SyntaxKind[LineTerminatorToken](977,1): «line terminator»
SyntaxKind[IndentToken](977,1): «indent»
SyntaxKind[Terminal](977,2): `{`
SyntaxKind[Terminal](977,6): `}`
SyntaxKind[LineTerminatorToken](978,1): «line terminator»
SyntaxKind[Terminal](978,2): `{`
SyntaxKind[Identifier](978,6): ExportsList
SyntaxKind[Terminal](978,18): `}`
SyntaxKind[LineTerminatorToken](979,1): «line terminator»
SyntaxKind[Terminal](979,2): `{`
SyntaxKind[Identifier](979,6): ExportsList
SyntaxKind[Terminal](979,18): `,`
SyntaxKind[Terminal](979,22): `}`
SyntaxKind[LineTerminatorToken](980,1): «line terminator»
SyntaxKind[DedentToken](980,1): «dedent»
SyntaxKind[LineTerminatorToken](981,1): «line terminator»
SyntaxKind[Identifier](981,1): ExportsList
SyntaxKind[ColonToken](981,13): :
SyntaxKind[LineTerminatorToken](982,1): «line terminator»
SyntaxKind[IndentToken](982,1): «indent»
SyntaxKind[Identifier](982,2): ExportSpecifier
SyntaxKind[LineTerminatorToken](983,1): «line terminator»
SyntaxKind[Identifier](983,2): ExportsList
SyntaxKind[Terminal](983,14): `,`
SyntaxKind[Identifier](983,18): ExportSpecifier
SyntaxKind[LineTerminatorToken](984,1): «line terminator»
SyntaxKind[DedentToken](984,1): «dedent»
SyntaxKind[LineTerminatorToken](985,1): «line terminator»
SyntaxKind[Identifier](985,1): ExportSpecifier
SyntaxKind[ColonToken](985,17): :
SyntaxKind[LineTerminatorToken](986,1): «line terminator»
SyntaxKind[IndentToken](986,1): «indent»
SyntaxKind[Identifier](986,2): IdentifierName
SyntaxKind[LineTerminatorToken](987,1): «line terminator»
SyntaxKind[Identifier](987,2): IdentifierName
SyntaxKind[Terminal](987,17): `as`
SyntaxKind[Identifier](987,22): IdentifierName
SyntaxKind[LineTerminatorToken](988,1): «line terminator»
SyntaxKind[DedentToken](988,1): «dedent»
SyntaxKind[EndOfFileToken](988,1): «EndOfFileToken»
