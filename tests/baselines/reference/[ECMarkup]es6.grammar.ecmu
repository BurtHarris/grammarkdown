<emu-production name="SourceCharacter" type="lexical">
    <emu-rhs><emu-gprose>any Unicode code point</emu-gprose></emu-rhs>
</emu-production>
<emu-production name="InputElementDiv" type="lexical">
    <emu-rhs><emu-nt>WhiteSpace</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>LineTerminator</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>Comment</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>CommonToken</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>DivPunctuator</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>RightBracePunctuator</emu-nt></emu-rhs>
</emu-production>
<emu-production name="InputElementRegExp" type="lexical">
    <emu-rhs><emu-nt>WhiteSpace</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>LineTerminator</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>Comment</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>CommonToken</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>RightBracePunctuator</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>RegularExpressionLiteral</emu-nt></emu-rhs>
</emu-production>
<emu-production name="InputElementRegExpOrTemplateTail" type="lexical">
    <emu-rhs><emu-nt>WhiteSpace</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>LineTerminator</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>Comment</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>CommonToken</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>RegularExpressionLiteral</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>TemplateSubstitutionTail</emu-nt></emu-rhs>
</emu-production>
<emu-production name="InputElementTemplateTail" type="lexical">
    <emu-rhs><emu-nt>WhiteSpace</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>LineTerminator</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>Comment</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>CommonToken</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>DivPunctuator</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>TemplateSubstitutionTail</emu-nt></emu-rhs>
</emu-production>
<emu-production name="WhiteSpace" type="lexical">
    <emu-rhs><emu-gprose>&lt;TAB&gt;</emu-gprose></emu-rhs>
    <emu-rhs><emu-gprose>&lt;VT&gt;</emu-gprose></emu-rhs>
    <emu-rhs><emu-gprose>&lt;FF&gt;</emu-gprose></emu-rhs>
    <emu-rhs><emu-gprose>&lt;SP&gt;</emu-gprose></emu-rhs>
    <emu-rhs><emu-gprose>&lt;NBSP&gt;</emu-gprose></emu-rhs>
    <emu-rhs><emu-gprose>&lt;ZWNBSP&gt;</emu-gprose></emu-rhs>
    <emu-rhs><emu-gprose>&lt;USP&gt;</emu-gprose></emu-rhs>
</emu-production>
<emu-production name="LineTerminator" type="lexical">
    <emu-rhs><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>
    <emu-rhs><emu-gprose>&lt;CR&gt;</emu-gprose></emu-rhs>
    <emu-rhs><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>
    <emu-rhs><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>
</emu-production>
<emu-production name="LineTerminatorSequence" type="lexical">
    <emu-rhs><emu-gprose>&lt;LF&gt;</emu-gprose></emu-rhs>
    <emu-rhs>
        <emu-gprose>&lt;CR&gt;</emu-gprose>
        <emu-gann>lookahead â‰  <emu-gprose>&lt;LF&gt;</emu-gprose></emu-gann>
    </emu-rhs>
    <emu-rhs><emu-gprose>&lt;LS&gt;</emu-gprose></emu-rhs>
    <emu-rhs><emu-gprose>&lt;PS&gt;</emu-gprose></emu-rhs>
    <emu-rhs>
        <emu-gprose>&lt;CR&gt;</emu-gprose>
        <emu-gprose>&lt;LF&gt;</emu-gprose>
    </emu-rhs>
</emu-production>
<emu-production name="Comment" type="lexical">
    <emu-rhs><emu-nt>MultiLineComment</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>SingleLineComment</emu-nt></emu-rhs>
</emu-production>
<emu-production name="MultiLineComment" type="lexical">
    <emu-rhs>
        <emu-t>/*</emu-t>
        <emu-nt optional>MultiLineCommentChars</emu-nt>
        <emu-t>*/</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="MultiLineCommentChars" type="lexical">
    <emu-rhs>
        <emu-nt>MultiLineNotAsteriskChar</emu-nt>
        <emu-nt optional>MultiLineCommentChars</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>*</emu-t>
        <emu-nt optional>PostAsteriskCommentChars</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="PostAsteriskCommentChars" type="lexical">
    <emu-rhs>
        <emu-nt>MultiLineNotForwardSlashOrAsteriskChar</emu-nt>
        <emu-nt optional>MultiLineCommentChars</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>*</emu-t>
        <emu-nt optional>PostAsteriskCommentChars</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="MultiLineNotAsteriskChar" type="lexical">
    <emu-rhs><emu-nt>SourceCharacter</emu-nt><emu-gmod>but not <emu-t>*</emu-t></emu-gmod></emu-rhs>
</emu-production>
<emu-production name="MultiLineNotForwardSlashOrAsteriskChar" type="lexical">
    <emu-rhs><emu-nt>SourceCharacter</emu-nt><emu-gmod>but not one of <emu-t>/</emu-t> or <emu-t>*</emu-t></emu-gmod></emu-rhs>
</emu-production>
<emu-production name="SingleLineComment" type="lexical">
    <emu-rhs>
        <emu-t>//</emu-t>
        <emu-nt optional>SingleLineCommentChars</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="SingleLineCommentChars" type="lexical">
    <emu-rhs>
        <emu-nt>SingleLineCommentChar</emu-nt>
        <emu-nt optional>SingleLineCommentChars</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="SingleLineCommentChar" type="lexical">
    <emu-rhs><emu-nt>SourceCharacter</emu-nt><emu-gmod>but not <emu-nt>LineTerminator</emu-nt></emu-gmod></emu-rhs>
</emu-production>
<emu-production name="CommonToken" type="lexical">
    <emu-rhs><emu-nt>IdentifierName</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>Punctuator</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>NumericLiteral</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>StringLiteral</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>Template</emu-nt></emu-rhs>
</emu-production>
<emu-production name="IdentifierName" type="lexical">
    <emu-rhs><emu-nt>IdentifierStart</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt>IdentifierName</emu-nt>
        <emu-nt>IdentifierPart</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="IdentifierStart" type="lexical">
    <emu-rhs><emu-nt>UnicodeIDStart</emu-nt></emu-rhs>
    <emu-rhs><emu-t>$</emu-t></emu-rhs>
    <emu-rhs><emu-t>_</emu-t></emu-rhs>
    <emu-rhs>
        <emu-t>\</emu-t>
        <emu-nt>UnicodeEscapeSequence</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="IdentifierPart" type="lexical">
    <emu-rhs><emu-nt>UnicodeIDContinue</emu-nt></emu-rhs>
    <emu-rhs><emu-t>$</emu-t></emu-rhs>
    <emu-rhs><emu-t>_</emu-t></emu-rhs>
    <emu-rhs>
        <emu-t>\</emu-t>
        <emu-nt>UnicodeEscapeSequence</emu-nt>
    </emu-rhs>
    <emu-rhs><emu-gprose>&lt;ZWNJ&gt;</emu-gprose></emu-rhs>
    <emu-rhs><emu-gprose>&lt;ZWJ&gt;</emu-gprose></emu-rhs>
</emu-production>
<emu-production name="UnicodeIDStart" type="lexical">
    <emu-rhs><emu-gprose>any Unicode code point with the Unicode property &quot;ID_Start&quot; or &quot;Other_ID_Start&quot;</emu-gprose></emu-rhs>
</emu-production>
<emu-production name="UnicodeIDContinue" type="lexical">
    <emu-rhs><emu-gprose>any Unicode code point with the Unicode property &quot;ID_Continue&quot; or &quot;Other_ID_Continue&quot;, or &quot;Other_ID_Start&quot;</emu-gprose></emu-rhs>
</emu-production>
<emu-production name="ReservedWord" type="lexical">
    <emu-rhs><emu-nt>Keyword</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>FutureReservedWord</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>NullLiteral</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>BooleanLiteral</emu-nt></emu-rhs>
</emu-production>
<emu-production name="Keyword" type="lexical"oneof>
    <emu-rhs>break do in typeof case else instanceof var catch export new void class extends return while const finally super with continue for switch yield debugger function this default if throw delete import try</emu-rhs>
</emu-production>
<emu-production name="FutureReservedWord" type="lexical"oneof>
    <emu-rhs>enum await implements package protected interface private public</emu-rhs>
</emu-production>
<emu-production name="Punctuator" type="lexical"oneof>
    <emu-rhs>{ } ( ) [ ] . ; , &lt; &gt; &lt;= &gt;= == != === !== + - * % ++ -- &lt;&lt; &gt;&gt; &gt;&gt;&gt; &amp; | ^ ! ~ &amp;&amp; || ?  :: = += -= *= %= &lt;&lt;= &gt;&gt;= &gt;&gt;&gt;= &amp;= |= ^= =&gt;</emu-rhs>
</emu-production>
<emu-production name="DivPunctuator" type="lexical"oneof>
    <emu-rhs>/ /=</emu-rhs>
</emu-production>
<emu-production name="RightBracePunctuator" type="lexical"oneof>
    <emu-rhs>)</emu-rhs>
</emu-production>
<emu-production name="NullLiteral" type="lexical">
    <emu-rhs><emu-t>null</emu-t></emu-rhs>
</emu-production>
<emu-production name="BooleanLiteral" type="lexical">
    <emu-rhs><emu-t>true</emu-t></emu-rhs>
    <emu-rhs><emu-t>false</emu-t></emu-rhs>
</emu-production>
<emu-production name="NumericLiteral" type="lexical">
    <emu-rhs><emu-nt>DecimalLiteral</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>BinaryIntegerLiteral</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>OctalIntegerLiteral</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>HexIntegerLiteral</emu-nt></emu-rhs>
</emu-production>
<emu-production name="DecimalLiteral" type="lexical">
    <emu-rhs>
        <emu-nt>DecimalIntegerLiteral</emu-nt>
        <emu-t>.</emu-t>
        <emu-nt optional>DecimalDigits</emu-nt>
        <emu-nt optional>ExponentPart</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>.</emu-t>
        <emu-nt>DecimalDigits</emu-nt>
        <emu-nt optional>ExponentPart</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt>DecimalIntegerLiteral</emu-nt>
        <emu-nt optional>ExponentPart</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="DecimalIntegerLiteral" type="lexical">
    <emu-rhs><emu-t>0</emu-t></emu-rhs>
    <emu-rhs>
        <emu-nt>NonZeroDigit</emu-nt>
        <emu-nt optional>DecimalDigits</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="DecimalDigits" type="lexical">
    <emu-rhs><emu-nt>DecimalDigit</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt>DecimalDigits</emu-nt>
        <emu-nt>DecimalDigit</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="DecimalDigit" type="lexical"oneof>
    <emu-rhs>0 1 2 3 4 5 6 7 8 9</emu-rhs>
</emu-production>
<emu-production name="NonZeroDigit" type="lexical"oneof>
    <emu-rhs>1 2 3 4 5 6 7 8 9</emu-rhs>
</emu-production>
<emu-production name="ExponentPart" type="lexical">
    <emu-rhs>
        <emu-nt>ExponentIndicator</emu-nt>
        <emu-nt>SignedInteger</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="ExponentIndicator" type="lexical"oneof>
    <emu-rhs>e E</emu-rhs>
</emu-production>
<emu-production name="SignedInteger" type="lexical">
    <emu-rhs><emu-nt>DecimalDigits</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-t>+</emu-t>
        <emu-nt>DecimalDigits</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>-</emu-t>
        <emu-nt>DecimalDigits</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="BinaryIntegerLiteral" type="lexical">
    <emu-rhs>
        <emu-t>0b</emu-t>
        <emu-nt>BinaryDigits</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>0B</emu-t>
        <emu-nt>BinaryDigits</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="BinaryDigits" type="lexical">
    <emu-rhs><emu-nt>BinaryDigit</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt>BinaryDigits</emu-nt>
        <emu-nt>BinaryDigit</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="BinaryDigit" type="lexical"oneof>
    <emu-rhs>0 1</emu-rhs>
</emu-production>
<emu-production name="OctalIntegerLiteral" type="lexical">
    <emu-rhs>
        <emu-t>0o</emu-t>
        <emu-nt>OctalDigits</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>0O</emu-t>
        <emu-nt>OctalDigits</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="OctalDigits" type="lexical">
    <emu-rhs><emu-nt>OctalDigit</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt>OctalDigits</emu-nt>
        <emu-nt>OctalDigit</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="OctalDigit" type="lexical"oneof>
    <emu-rhs>0 1 2 3 4 5 6 7</emu-rhs>
</emu-production>
<emu-production name="HexIntegerLiteral" type="lexical">
    <emu-rhs>
        <emu-t>0x</emu-t>
        <emu-nt>HexDigits</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>0X</emu-t>
        <emu-nt>HexDigits</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="HexDigits" type="lexical">
    <emu-rhs><emu-nt>HexDigit</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt>HexDigits</emu-nt>
        <emu-nt>HexDigit</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="HexDigit" type="lexical"oneof>
    <emu-rhs>0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F</emu-rhs>
</emu-production>
<emu-production name="StringLiteral" type="lexical">
    <emu-rhs>
        <emu-t>"</emu-t>
        <emu-nt optional>DoubleStringCharacters</emu-nt>
        <emu-t>"</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>'</emu-t>
        <emu-nt optional>SingleStringCharacters</emu-nt>
        <emu-t>'</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="DoubleStringCharacters" type="lexical">
    <emu-rhs>
        <emu-nt>DoubleStringCharacter</emu-nt>
        <emu-nt optional>DoubleStringCharacters</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="SingleStringCharacters" type="lexical">
    <emu-rhs>
        <emu-nt>SingleStringCharacter</emu-nt>
        <emu-nt optional>SingleStringCharacters</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="DoubleStringCharacter" type="lexical">
    <emu-rhs><emu-nt>SourceCharacter</emu-nt><emu-gmod>but not one of <emu-t>"</emu-t> or <emu-t>\</emu-t> or <emu-nt>LineTerminator</emu-nt></emu-gmod></emu-rhs>
    <emu-rhs>
        <emu-t>\</emu-t>
        <emu-nt>EscapeSequence</emu-nt>
    </emu-rhs>
    <emu-rhs><emu-nt>LineContinuation</emu-nt></emu-rhs>
</emu-production>
<emu-production name="SingleStringCharacter" type="lexical">
    <emu-rhs><emu-nt>SourceCharacter</emu-nt><emu-gmod>but not one of <emu-t>'</emu-t> or <emu-t>\</emu-t> or <emu-nt>LineTerminator</emu-nt></emu-gmod></emu-rhs>
    <emu-rhs>
        <emu-t>\</emu-t>
        <emu-nt>EscapeSequence</emu-nt>
    </emu-rhs>
    <emu-rhs><emu-nt>LineContinuation</emu-nt></emu-rhs>
</emu-production>
<emu-production name="LineContinuation" type="lexical">
    <emu-rhs>
        <emu-t>\</emu-t>
        <emu-nt>LineTerminatorSequence</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="EscapeSequence" type="lexical">
    <emu-rhs><emu-nt>CharacterEscapeSequence</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-t>0</emu-t>
        <emu-gann>lookahead â‰  <emu-nt>DecimalDigit</emu-nt></emu-gann>
    </emu-rhs>
    <emu-rhs><emu-nt>HexEscapeSequence</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>UnicodeEscapeSequence</emu-nt></emu-rhs>
</emu-production>
<emu-production name="CharacterEscapeSequence" type="lexical">
    <emu-rhs><emu-nt>SingleEscapeCharacter</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>NonEscapeCharacter</emu-nt></emu-rhs>
</emu-production>
<emu-production name="SingleEscapeCharacter" type="lexical"oneof>
    <emu-rhs>&apos; &quot; \ b f n r t v</emu-rhs>
</emu-production>
<emu-production name="NonEscapeCharacter" type="lexical">
    <emu-rhs><emu-nt>SourceCharacter</emu-nt><emu-gmod>but not one of <emu-nt>EscapeCharacter</emu-nt> or <emu-nt>LineTerminator</emu-nt></emu-gmod></emu-rhs>
</emu-production>
<emu-production name="EscapeCharacter" type="lexical">
    <emu-rhs><emu-nt>SingleEscapeCharacter</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>DecimalDigit</emu-nt></emu-rhs>
    <emu-rhs><emu-t>x</emu-t></emu-rhs>
    <emu-rhs><emu-t>u</emu-t></emu-rhs>
</emu-production>
<emu-production name="HexEscapeSequence" type="lexical">
    <emu-rhs>
        <emu-t>x</emu-t>
        <emu-nt>HexDigit</emu-nt>
        <emu-nt>HexDigit</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="UnicodeEscapeSequence" type="lexical">
    <emu-rhs>
        <emu-t>u</emu-t>
        <emu-nt>Hex4Digits</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>u{</emu-t>
        <emu-nt>HexDigits</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="Hex4Digits" type="lexical">
    <emu-rhs>
        <emu-nt>HexDigit</emu-nt>
        <emu-nt>HexDigit</emu-nt>
        <emu-nt>HexDigit</emu-nt>
        <emu-nt>HexDigit</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="RegularExpressionLiteral" type="lexical">
    <emu-rhs>
        <emu-t>/</emu-t>
        <emu-nt>RegularExpressionBody</emu-nt>
        <emu-t>/</emu-t>
        <emu-nt>RegularExpressionFlags</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="RegularExpressionBody" type="lexical">
    <emu-rhs>
        <emu-nt>RegularExpressionFirstChar</emu-nt>
        <emu-nt>RegularExpressionChars</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="RegularExpressionChars" type="lexical">
    <emu-rhs><emu-gann>empty</emu-gann></emu-rhs>
    <emu-rhs>
        <emu-nt>RegularExpressionChars</emu-nt>
        <emu-nt>RegularExpressionChar</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="RegularExpressionFirstChar" type="lexical">
    <emu-rhs><emu-nt>RegularExpressionNonTerminator</emu-nt><emu-gmod>but not one of <emu-t>*</emu-t> or <emu-t>\</emu-t> or <emu-t>/</emu-t> or <emu-t>[</emu-t></emu-gmod></emu-rhs>
    <emu-rhs><emu-nt>RegularExpressionBackslashSequence</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>RegularExpressionClass</emu-nt></emu-rhs>
</emu-production>
<emu-production name="RegularExpressionChar" type="lexical">
    <emu-rhs><emu-nt>RegularExpressionNonTerminator</emu-nt><emu-gmod>but not one of <emu-t>\</emu-t> or <emu-t>/</emu-t> or <emu-t>[</emu-t></emu-gmod></emu-rhs>
    <emu-rhs><emu-nt>RegularExpressionBackslashSequence</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>RegularExpressionClass</emu-nt></emu-rhs>
</emu-production>
<emu-production name="RegularExpressionBackslashSequence" type="lexical">
    <emu-rhs>
        <emu-t>\</emu-t>
        <emu-nt>RegularExpressionNonTerminator</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="RegularExpressionNonTerminator" type="lexical">
    <emu-rhs><emu-nt>SourceCharacter</emu-nt><emu-gmod>but not <emu-nt>LineTerminator</emu-nt></emu-gmod></emu-rhs>
</emu-production>
<emu-production name="RegularExpressionClass" type="lexical">
    <emu-rhs>
        <emu-t>[</emu-t>
        <emu-nt>RegularExpressionClassChars</emu-nt>
        <emu-t>]</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="RegularExpressionClassChars" type="lexical">
    <emu-rhs><emu-gann>empty</emu-gann></emu-rhs>
    <emu-rhs>
        <emu-nt>RegularExpressionClassChars</emu-nt>
        <emu-nt>RegularExpressionClassChar</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="RegularExpressionClassChar" type="lexical">
    <emu-rhs><emu-nt>RegularExpressionNonTerminator</emu-nt><emu-gmod>but not one of <emu-t>]</emu-t> or <emu-t>\</emu-t></emu-gmod></emu-rhs>
    <emu-rhs><emu-nt>RegularExpressionBackslashSequence</emu-nt></emu-rhs>
</emu-production>
<emu-production name="RegularExpressionFlags" type="lexical">
    <emu-rhs><emu-gann>empty</emu-gann></emu-rhs>
    <emu-rhs>
        <emu-nt>RegularExpressionFlags</emu-nt>
        <emu-nt>IdentifierPart</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="Template" type="lexical">
    <emu-rhs><emu-nt>NoSubstitutionTemplate</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>TemplateHead</emu-nt></emu-rhs>
</emu-production>
<emu-production name="NoSubstitutionTemplate" type="lexical">
    <emu-rhs>
        <emu-t>`</emu-t>
        <emu-nt optional>TemplateCharacters</emu-nt>
        <emu-t>`</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="TemplateHead" type="lexical">
    <emu-rhs>
        <emu-t>`</emu-t>
        <emu-nt optional>TemplateCharacters</emu-nt>
        <emu-t>${</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="TemplateSubstitutionTail" type="lexical">
    <emu-rhs><emu-nt>TemplateMiddle</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>TemplateTail</emu-nt></emu-rhs>
</emu-production>
<emu-production name="TemplateMiddle" type="lexical">
    <emu-rhs>
        <emu-t>}</emu-t>
        <emu-nt optional>TemplateCharacters</emu-nt>
        <emu-t>${</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="TemplateTail" type="lexical">
    <emu-rhs>
        <emu-t>}</emu-t>
        <emu-nt optional>TemplateCharacters</emu-nt>
        <emu-t>`</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="TemplateCharacters" type="lexical">
    <emu-rhs>
        <emu-nt>TemplateCharacter</emu-nt>
        <emu-nt optional>TemplateCharacters</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="TemplateCharacter" type="lexical">
    <emu-rhs>
        <emu-t>$</emu-t>
        <emu-gann>lookahead â‰  <emu-t>{</emu-t></emu-gann>
    </emu-rhs>
    <emu-rhs>
        <emu-t>\</emu-t>
        <emu-nt>EscapeSequence</emu-nt>
    </emu-rhs>
    <emu-rhs><emu-nt>LineContinuation</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>LineTerminatorSequence</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>SourceCharacter</emu-nt><emu-gmod>but not one of <emu-t>`</emu-t> or <emu-t>\</emu-t> or <emu-t>$</emu-t> or <emu-nt>LineTerminator</emu-nt></emu-gmod></emu-rhs>
</emu-production>
<emu-production name="IdentifierReference" params="Yield">
    <emu-rhs><emu-nt>Identifier</emu-nt></emu-rhs>
    <emu-rhs constraints="~Yield"><emu-t>yield</emu-t></emu-rhs>
</emu-production>
<emu-production name="BindingIdentifier" params="Yield">
    <emu-rhs><emu-nt>Identifier</emu-nt></emu-rhs>
    <emu-rhs constraints="~Yield"><emu-t>yield</emu-t></emu-rhs>
</emu-production>
<emu-production name="LabelIdentifier" params="Yield">
    <emu-rhs><emu-nt>Identifier</emu-nt></emu-rhs>
    <emu-rhs constraints="~Yield"><emu-t>yield</emu-t></emu-rhs>
</emu-production>
<emu-production name="Identifier">
    <emu-rhs><emu-nt>IdentifierName</emu-nt><emu-gmod>but not <emu-nt>ReservedWord</emu-nt></emu-gmod></emu-rhs>
</emu-production>
<emu-production name="PrimaryExpression" params="Yield">
    <emu-rhs><emu-t>this</emu-t></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">IdentifierReference</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>Literal</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">ArrayLiteral</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">ObjectLiteral</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>FunctionExpression</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">ClassExpression</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>GeneratorExpression</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>RegularExpressionLiteral</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">TemplateLiteral</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">CoverParenthesizedExpressionAndArrowParameterList</emu-nt></emu-rhs>
</emu-production>
<emu-production name="CoverParenthesizedExpressionAndArrowParameterList" params="Yield">
    <emu-rhs>
        <emu-t>(</emu-t>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-t>)</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>(</emu-t>
        <emu-t>)</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>(</emu-t>
        <emu-t>...</emu-t>
        <emu-nt params="?Yield">BindingIdentifier</emu-nt>
        <emu-t>)</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>(</emu-t>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-t>,</emu-t>
        <emu-t>...</emu-t>
        <emu-nt params="?Yield">BindingIdentifier</emu-nt>
        <emu-t>)</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="Literal">
    <emu-rhs><emu-nt>NullLiteral</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>BooleanLiteral</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>NumericLiteral</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>StringLiteral</emu-nt></emu-rhs>
</emu-production>
<emu-production name="ArrayLiteral" params="Yield">
    <emu-rhs>
        <emu-t>[</emu-t>
        <emu-nt optional>Elision</emu-nt>
        <emu-t>]</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>[</emu-t>
        <emu-nt params="?Yield">ElementList</emu-nt>
        <emu-t>]</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>[</emu-t>
        <emu-nt params="?Yield">ElementList</emu-nt>
        <emu-t>,</emu-t>
        <emu-nt optional>Elision</emu-nt>
        <emu-t>]</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="ElementList" params="Yield">
    <emu-rhs>
        <emu-nt optional>Elision</emu-nt>
        <emu-nt params="In, ?Yield">AssignmentExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt optional>Elision</emu-nt>
        <emu-nt params="?Yield">SpreadElement</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">ElementList</emu-nt>
        <emu-t>,</emu-t>
        <emu-nt optional>Elision</emu-nt>
        <emu-nt params="In, ?Yield">AssignmentExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">ElementList</emu-nt>
        <emu-t>,</emu-t>
        <emu-nt optional>Elision</emu-nt>
        <emu-nt params="?Yield">SpreadElement</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="Elision">
    <emu-rhs><emu-t>,</emu-t></emu-rhs>
    <emu-rhs>
        <emu-nt>Elision</emu-nt>
        <emu-t>,</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="SpreadElement" params="Yield">
    <emu-rhs>
        <emu-t>...</emu-t>
        <emu-nt params="In, ?Yield">AssignmentExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="ObjectLiteral" params="Yield">
    <emu-rhs>
        <emu-t>{</emu-t>
        <emu-t>}</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>{</emu-t>
        <emu-nt params="?Yield">PropertyDefinitionList</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>{</emu-t>
        <emu-nt params="?Yield">PropertyDefinitionList</emu-nt>
        <emu-t>,</emu-t>
        <emu-t>}</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="PropertyDefinitionList" params="Yield">
    <emu-rhs><emu-nt params="?Yield">PropertyDefinition</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">PropertyDefinitionList</emu-nt>
        <emu-t>,</emu-t>
        <emu-nt params="?Yield">PropertyDefinition</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="PropertyDefinition" params="Yield">
    <emu-rhs><emu-nt params="?Yield">IdentifierReference</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">CoverInitializedName</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">PropertyName</emu-nt>
        <emu-t>:</emu-t>
        <emu-nt params="In, ?Yield">AssignmentExpression</emu-nt>
    </emu-rhs>
    <emu-rhs><emu-nt params="?Yield">MethodDefinition</emu-nt></emu-rhs>
</emu-production>
<emu-production name="PropertyName" params="Yield">
    <emu-rhs><emu-nt>LiteralPropertyName</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">ComputedPropertyName</emu-nt></emu-rhs>
</emu-production>
<emu-production name="LiteralPropertyName">
    <emu-rhs><emu-nt>IdentifierName</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>StringLiteral</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>NumericLiteral</emu-nt></emu-rhs>
</emu-production>
<emu-production name="ComputedPropertyName" params="Yield">
    <emu-rhs>
        <emu-t>[</emu-t>
        <emu-nt params="In, ?Yield">AssignmentExpression</emu-nt>
        <emu-t>]</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="CoverInitializedName" params="Yield">
    <emu-rhs>
        <emu-nt params="?Yield">IdentifierReference</emu-nt>
        <emu-nt params="In, ?Yield">Initializer</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="Initializer" params="In, Yield">
    <emu-rhs>
        <emu-t>=</emu-t>
        <emu-nt params="?In, ?Yield">AssignmentExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="TemplateLiteral" params="Yield">
    <emu-rhs><emu-nt>NoSubstitutionTemplate</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt>TemplateHead</emu-nt>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-nt params="?Yield">TemplateSpans</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="TemplateSpans" params="Yield">
    <emu-rhs><emu-nt>TemplateTail</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">TemplateMiddleList</emu-nt>
        <emu-nt>TemplateTail</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="TemplateMiddleList" params="Yield">
    <emu-rhs>
        <emu-nt>TemplateMiddle</emu-nt>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">TemplateMiddleList</emu-nt>
        <emu-nt>TemplateMiddle</emu-nt>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="MemberExpression" params="Yield">
    <emu-rhs><emu-nt params="?Yield">PrimaryExpression</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">MemberExpression</emu-nt>
        <emu-t>[</emu-t>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-t>]</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">MemberExpression</emu-nt>
        <emu-t>.</emu-t>
        <emu-nt>IdentifierName</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">MemberExpression</emu-nt>
        <emu-nt params="?Yield">TemplateLiteral</emu-nt>
    </emu-rhs>
    <emu-rhs><emu-nt params="?Yield">SuperProperty</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>MetaProperty</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-t>new</emu-t>
        <emu-nt params="?Yield">MemberExpression</emu-nt>
        <emu-nt params="?Yield">Arguments</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="SuperProperty" params="Yield">
    <emu-rhs>
        <emu-t>super</emu-t>
        <emu-t>[</emu-t>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-t>]</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>super</emu-t>
        <emu-t>.</emu-t>
        <emu-nt>IdentifierName</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="MetaProperty">
    <emu-rhs><emu-nt>NewTarget</emu-nt></emu-rhs>
</emu-production>
<emu-production name="NewTarget">
    <emu-rhs>
        <emu-t>new</emu-t>
        <emu-t>.</emu-t>
        <emu-t>target</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="NewExpression" params="Yield">
    <emu-rhs><emu-nt params="?Yield">MemberExpression</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-t>new</emu-t>
        <emu-nt params="?Yield">NewExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="CallExpression" params="Yield">
    <emu-rhs>
        <emu-nt params="?Yield">MemberExpression</emu-nt>
        <emu-nt params="?Yield">Arguments</emu-nt>
    </emu-rhs>
    <emu-rhs><emu-nt params="?Yield">SuperCall</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">CallExpression</emu-nt>
        <emu-nt params="?Yield">Arguments</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">CallExpression</emu-nt>
        <emu-t>[</emu-t>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-t>]</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">CallExpression</emu-nt>
        <emu-t>.</emu-t>
        <emu-nt>IdentifierName</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">CallExpression</emu-nt>
        <emu-nt params="?Yield">TemplateLiteral</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="SuperCall" params="Yield">
    <emu-rhs>
        <emu-t>super</emu-t>
        <emu-nt params="?Yield">Arguments</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="Arguments" params="Yield">
    <emu-rhs>
        <emu-t>(</emu-t>
        <emu-t>)</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>(</emu-t>
        <emu-nt params="?Yield">ArgumentList</emu-nt>
        <emu-t>)</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="ArgumentList" params="Yield">
    <emu-rhs><emu-nt params="In, ?Yield">AssignmentExpression</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-t>...</emu-t>
        <emu-nt params="In, ?Yield">AssignmentExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">ArgumentList</emu-nt>
        <emu-t>,</emu-t>
        <emu-nt params="In, ?Yield">AssignmentExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">ArgumentList</emu-nt>
        <emu-t>,</emu-t>
        <emu-t>...</emu-t>
        <emu-nt params="In, ?Yield">AssignmentExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="LeftHandSideExpression" params="Yield">
    <emu-rhs><emu-nt params="?Yield">NewExpression</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">CallExpression</emu-nt></emu-rhs>
</emu-production>
<emu-production name="PostfixExpression" params="Yield">
    <emu-rhs><emu-nt params="?Yield">LeftHandSideExpression</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">LeftHandSideExpression</emu-nt>
        <emu-gann>no <emu-nt>LineTerminator</emu-nt> here</emu-gann>
        <emu-t>++</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">LeftHandSideExpression</emu-nt>
        <emu-gann>no <emu-nt>LineTerminator</emu-nt> here</emu-gann>
        <emu-t>--</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="UnaryExpression" params="Yield">
    <emu-rhs><emu-nt params="?Yield">PostfixExpression</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-t>delete</emu-t>
        <emu-nt params="?Yield">UnaryExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>void</emu-t>
        <emu-nt params="?Yield">UnaryExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>typeof</emu-t>
        <emu-nt params="?Yield">UnaryExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>++</emu-t>
        <emu-nt params="?Yield">UnaryExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>--</emu-t>
        <emu-nt params="?Yield">UnaryExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>+</emu-t>
        <emu-nt params="?Yield">UnaryExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>-</emu-t>
        <emu-nt params="?Yield">UnaryExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>~</emu-t>
        <emu-nt params="?Yield">UnaryExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>!</emu-t>
        <emu-nt params="?Yield">UnaryExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="MultiplicativeExpression" params="Yield">
    <emu-rhs><emu-nt params="?Yield">UnaryExpression</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">MultiplicativeExpression</emu-nt>
        <emu-nt>MultiplicativeOperator</emu-nt>
        <emu-nt params="?Yield">UnaryExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="MultiplicativeOperator"oneof>
    <emu-rhs>* / %</emu-rhs>
</emu-production>
<emu-production name="AdditiveExpression" params="Yield">
    <emu-rhs><emu-nt params="?Yield">MultiplicativeExpression</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">AdditiveExpression</emu-nt>
        <emu-t>+</emu-t>
        <emu-nt params="?Yield">MultiplicativeExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">AdditiveExpression</emu-nt>
        <emu-t>-</emu-t>
        <emu-nt params="?Yield">MultiplicativeExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="ShiftExpression" params="Yield">
    <emu-rhs><emu-nt params="?Yield">AdditiveExpression</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">ShiftExpression</emu-nt>
        <emu-t><<</emu-t>
        <emu-nt params="?Yield">AdditiveExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">ShiftExpression</emu-nt>
        <emu-t>>></emu-t>
        <emu-nt params="?Yield">AdditiveExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">ShiftExpression</emu-nt>
        <emu-t>>>></emu-t>
        <emu-nt params="?Yield">AdditiveExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="RelationalExpression" params="In, Yield">
    <emu-rhs><emu-nt params="?Yield">ShiftExpression</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?In, ?Yield">RelationalExpression</emu-nt>
        <emu-t><</emu-t>
        <emu-nt params="?Yield">ShiftExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?In, ?Yield">RelationalExpression</emu-nt>
        <emu-t>></emu-t>
        <emu-nt params="?Yield">ShiftExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?In, ?Yield">RelationalExpression</emu-nt>
        <emu-t><=</emu-t>
        <emu-nt params="?Yield">ShiftExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?In, ?Yield">RelationalExpression</emu-nt>
        <emu-t>>=</emu-t>
        <emu-nt params="?Yield">ShiftExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?In, ?Yield">RelationalExpression</emu-nt>
        <emu-t>instanceof</emu-t>
        <emu-nt params="?Yield">ShiftExpression</emu-nt>
    </emu-rhs>
    <emu-rhs constraints="+In">
        <emu-nt params="In, ?Yield">RelationalExpression</emu-nt>
        <emu-t>in</emu-t>
        <emu-nt params="?Yield">ShiftExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="EqualityExpression" params="In, Yield">
    <emu-rhs><emu-nt params="?In, ?Yield">RelationalExpression</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?In, ?Yield">EqualityExpression</emu-nt>
        <emu-t>==</emu-t>
        <emu-nt params="?In, ?Yield">RelationalExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?In, ?Yield">EqualityExpression</emu-nt>
        <emu-t>!=</emu-t>
        <emu-nt params="?In, ?Yield">RelationalExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?In, ?Yield">EqualityExpression</emu-nt>
        <emu-t>===</emu-t>
        <emu-nt params="?In, ?Yield">RelationalExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?In, ?Yield">EqualityExpression</emu-nt>
        <emu-t>!==</emu-t>
        <emu-nt params="?In, ?Yield">RelationalExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="BitwiseANDExpression" params="In, Yield">
    <emu-rhs><emu-nt params="?In, ?Yield">EqualityExpression</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?In, ?Yield">BitwiseANDExpression</emu-nt>
        <emu-t>&</emu-t>
        <emu-nt params="?In, ?Yield">EqualityExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="BitwiseXORExpression" params="In, Yield">
    <emu-rhs><emu-nt params="?In, ?Yield">BitwiseANDExpression</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?In, ?Yield">BitwiseXORExpression</emu-nt>
        <emu-t>^</emu-t>
        <emu-nt params="?In, ?Yield">BitwiseANDExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="BitwiseORExpression" params="In, Yield">
    <emu-rhs><emu-nt params="?In, ?Yield">BitwiseXORExpression</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?In, ?Yield">BitwiseORExpression</emu-nt>
        <emu-t>|</emu-t>
        <emu-nt params="?In, ?Yield">BitwiseXORExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="LogicalANDExpression" params="In, Yield">
    <emu-rhs><emu-nt params="?In, ?Yield">BitwiseORExpression</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?In, ?Yield">LogicalANDExpression</emu-nt>
        <emu-t>&&</emu-t>
        <emu-nt params="?In, ?Yield">BitwiseORExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="LogicalORExpression" params="In, Yield">
    <emu-rhs><emu-nt params="?In, ?Yield">LogicalANDExpression</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?In, ?Yield">LogicalORExpression</emu-nt>
        <emu-t>||</emu-t>
        <emu-nt params="?In, ?Yield">LogicalANDExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="ConditionalExpression" params="In, Yield">
    <emu-rhs><emu-nt params="?In, ?Yield">LogicalORExpression</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?In, ?Yield">LogicalORExpression</emu-nt>
        <emu-t>?</emu-t>
        <emu-nt params="In, ?Yield">AssignmentExpression</emu-nt>
        <emu-t>:</emu-t>
        <emu-nt params="?In, ?Yield">AssignmentExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="AssignmentExpression" params="In, Yield">
    <emu-rhs><emu-nt params="?In, ?Yield">ConditionalExpression</emu-nt></emu-rhs>
    <emu-rhs constraints="+Yield"><emu-nt params="?In">YieldExpression</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?In, ?Yield">ArrowFunction</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">LeftHandSideExpression</emu-nt>
        <emu-t>=</emu-t>
        <emu-nt params="?In, ?Yield">AssignmentExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">LeftHandSideExpression</emu-nt>
        <emu-nt>AssignmentOperator</emu-nt>
        <emu-nt params="?In, ?Yield">AssignmentExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="AssignmentOperator"oneof>
    <emu-rhs>*= /= %= += -= &lt;&lt;= &gt;&gt;= &gt;&gt;&gt;= &amp;= ^= |=</emu-rhs>
</emu-production>
<emu-production name="Expression" params="In, Yield">
    <emu-rhs><emu-nt params="?In, ?Yield">AssignmentExpression</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?In, ?Yield">Expression</emu-nt>
        <emu-t>,</emu-t>
        <emu-nt params="?In, ?Yield">AssignmentExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="Statement" params="Yield, Return">
    <emu-rhs><emu-nt params="?Yield, ?Return">BlockStatement</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">VariableStatement</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>EmptyStatement</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">ExpressionStatement</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield, ?Return">IfStatement</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield, ?Return">BreakableStatement</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">ContinueStatement</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">BreakStatement</emu-nt></emu-rhs>
    <emu-rhs constraints="+Return"><emu-nt params="?Yield">ReturnStatement</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield, ?Return">WithStatement</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield, ?Return">LabelledStatement</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">ThrowStatement</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield, ?Return">TryStatement</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>DebuggerStatement</emu-nt></emu-rhs>
</emu-production>
<emu-production name="Declaration" params="Yield">
    <emu-rhs><emu-nt params="?Yield">HoistableDeclaration</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">ClassDeclaration</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="In, ?Yield">LexicalDeclaration</emu-nt></emu-rhs>
</emu-production>
<emu-production name="HoistableDeclaration" params="Yield, Default">
    <emu-rhs><emu-nt params="?Yield, ?Default">FunctionDeclaration</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield, ?Default">GeneratorDeclaration</emu-nt></emu-rhs>
</emu-production>
<emu-production name="BreakableStatement" params="Yield, Return">
    <emu-rhs><emu-nt params="?Yield, ?Return">IterationStatement</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield, ?Return">SwitchStatement</emu-nt></emu-rhs>
</emu-production>
<emu-production name="BlockStatement" params="Yield, Return">
    <emu-rhs><emu-nt params="?Yield, ?Return">Block</emu-nt></emu-rhs>
</emu-production>
<emu-production name="Block" params="Yield, Return">
    <emu-rhs>
        <emu-t>{</emu-t>
        <emu-nt params="?Yield, ?Return" optional>StatementList</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="StatementList" params="Yield, Return">
    <emu-rhs><emu-nt params="?Yield, ?Return">StatementListItem</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield, ?Return">StatementList</emu-nt>
        <emu-nt params="?Yield, ?Return">StatementListItem</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="StatementListItem" params="Yield, Return">
    <emu-rhs><emu-nt params="?Yield, ?Return">Statement</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">Declaration</emu-nt></emu-rhs>
</emu-production>
<emu-production name="LexicalDeclaration" params="In, Yield">
    <emu-rhs>
        <emu-nt>LetOrConst</emu-nt>
        <emu-nt params="?In, ?Yield">BindingList</emu-nt>
        <emu-t>;</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="LetOrConst">
    <emu-rhs><emu-t>let</emu-t></emu-rhs>
    <emu-rhs><emu-t>const</emu-t></emu-rhs>
</emu-production>
<emu-production name="BindingList" params="In, Yield">
    <emu-rhs><emu-nt params="?In, ?Yield">LexicalBinding</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?In, ?Yield">BindingList</emu-nt>
        <emu-t>,</emu-t>
        <emu-nt params="?In, ?Yield">LexicalBinding</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="LexicalBinding" params="In, Yield">
    <emu-rhs>
        <emu-nt params="?Yield">BindingIdentifier</emu-nt>
        <emu-nt params="?In, ?Yield" optional>Initializer</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">BindingPattern</emu-nt>
        <emu-nt params="?In, ?Yield">Initializer</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="VariableStatement" params="Yield">
    <emu-rhs>
        <emu-t>var</emu-t>
        <emu-nt params="In, ?Yield">VariableDeclarationList</emu-nt>
        <emu-t>;</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="VariableDeclarationList" params="In, Yield">
    <emu-rhs><emu-nt params="?In, ?Yield">VariableDeclaration</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?In, ?Yield">VariableDeclarationList</emu-nt>
        <emu-t>,</emu-t>
        <emu-nt params="?In, ?Yield">VariableDeclaration</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="VariableDeclaration" params="In, Yield">
    <emu-rhs>
        <emu-nt params="?Yield">BindingIdentifier</emu-nt>
        <emu-nt params="?In, ?Yield" optional>Initializer</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">BindingPattern</emu-nt>
        <emu-nt params="?In, ?Yield">Initializer</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="BindingPattern" params="Yield">
    <emu-rhs><emu-nt params="?Yield">ObjectBindingPattern</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">ArrayBindingPattern</emu-nt></emu-rhs>
</emu-production>
<emu-production name="ObjectBindingPattern" params="Yield">
    <emu-rhs>
        <emu-t>{</emu-t>
        <emu-t>}</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>{</emu-t>
        <emu-nt params="?Yield">BindingPropertyList</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>{</emu-t>
        <emu-nt params="?Yield">BindingPropertyList</emu-nt>
        <emu-t>,</emu-t>
        <emu-t>}</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="ArrayBindingPattern" params="Yield">
    <emu-rhs>
        <emu-t>[</emu-t>
        <emu-nt optional>Elision</emu-nt>
        <emu-nt params="?Yield" optional>BindingRestElement</emu-nt>
        <emu-t>]</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>[</emu-t>
        <emu-nt params="?Yield">BindingElementList</emu-nt>
        <emu-t>]</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>[</emu-t>
        <emu-nt params="?Yield">BindingElementList</emu-nt>
        <emu-t>,</emu-t>
        <emu-nt optional>Elision</emu-nt>
        <emu-nt params="?Yield" optional>BindingRestElement</emu-nt>
        <emu-t>]</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="BindingPropertyList" params="Yield">
    <emu-rhs><emu-nt params="?Yield">BindingProperty</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">BindingPropertyList</emu-nt>
        <emu-t>,</emu-t>
        <emu-nt params="?Yield">BindingProperty</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="BindingElementList" params="Yield">
    <emu-rhs><emu-nt params="?Yield">BindingElisionElement</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">BindingElementList</emu-nt>
        <emu-t>,</emu-t>
        <emu-nt params="?Yield">BindingElisionElement</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="BindingElisionElement" params="Yield">
    <emu-rhs>
        <emu-nt optional>Elision</emu-nt>
        <emu-nt params="?Yield">BindingElement</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="BindingProperty" params="Yield">
    <emu-rhs><emu-nt params="?Yield">SingleNameBinding</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">PropertyName</emu-nt>
        <emu-t>:</emu-t>
        <emu-nt params="?Yield">BindingElement</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="BindingElement" params="Yield">
    <emu-rhs><emu-nt params="?Yield">SingleNameBinding</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">BindingPattern</emu-nt>
        <emu-nt params="In, ?Yield" optional>Initializer</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="SingleNameBinding" params="Yield">
    <emu-rhs>
        <emu-nt params="?Yield">BindingIdentifier</emu-nt>
        <emu-nt params="In, ?Yield" optional>Initializer</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="BindingRestElement" params="Yield">
    <emu-rhs>
        <emu-t>...</emu-t>
        <emu-nt params="?Yield">BindingIdentifier</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="EmptyStatement">
    <emu-rhs><emu-t>;</emu-t></emu-rhs>
</emu-production>
<emu-production name="ExpressionStatement" params="Yield">
    <emu-rhs>
        <emu-gann>lookahead âˆ‰ <emu-t>{</emu-t><emu-t>function</emu-t><emu-t>class</emu-t><emu-t>let</emu-t>
        <emu-t>[</emu-t></emu-gann>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-t>;</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="IfStatement" params="Yield, Return">
    <emu-rhs>
        <emu-t>if</emu-t>
        <emu-t>(</emu-t>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-t>)</emu-t>
        <emu-nt params="?Yield, ?Return">Statement</emu-nt>
        <emu-t>else</emu-t>
        <emu-nt params="?Yield, ?Return">Statement</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>if</emu-t>
        <emu-t>(</emu-t>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-t>)</emu-t>
        <emu-nt params="?Yield, ?Return">Statement</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="IterationStatement" params="Yield, Return">
    <emu-rhs>
        <emu-t>do</emu-t>
        <emu-nt params="?Yield, ?Return">Statement</emu-nt>
        <emu-t>while</emu-t>
        <emu-t>(</emu-t>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-t>)</emu-t>
        <emu-t>;</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>while</emu-t>
        <emu-t>(</emu-t>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-t>)</emu-t>
        <emu-nt params="?Yield, ?Return">Statement</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>for</emu-t>
        <emu-t>(</emu-t>
        <emu-gann>lookahead âˆ‰ <emu-t>let</emu-t>
        <emu-t>[</emu-t></emu-gann>
        <emu-nt params="?Yield" optional>Expression</emu-nt>
        <emu-t>;</emu-t>
        <emu-nt params="In, ?Yield" optional>Expression</emu-nt>
        <emu-t>;</emu-t>
        <emu-nt params="In, ?Yield" optional>Expression</emu-nt>
        <emu-t>)</emu-t>
        <emu-nt params="?Yield, ?Return">Statement</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>for</emu-t>
        <emu-t>(</emu-t>
        <emu-t>var</emu-t>
        <emu-nt params="?Yield">VariableDeclarationList</emu-nt>
        <emu-t>;</emu-t>
        <emu-nt params="In, ?Yield" optional>Expression</emu-nt>
        <emu-t>;</emu-t>
        <emu-nt params="In, ?Yield" optional>Expression</emu-nt>
        <emu-t>)</emu-t>
        <emu-nt params="?Yield, ?Return">Statement</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>for</emu-t>
        <emu-t>(</emu-t>
        <emu-nt params="?Yield">LexicalDeclaration</emu-nt>
        <emu-nt params="In, ?Yield" optional>Expression</emu-nt>
        <emu-t>;</emu-t>
        <emu-nt params="In, ?Yield" optional>Expression</emu-nt>
        <emu-t>)</emu-t>
        <emu-nt params="?Yield, ?Return">Statement</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>for</emu-t>
        <emu-t>(</emu-t>
        <emu-gann>lookahead âˆ‰ <emu-t>let</emu-t>
        <emu-t>[</emu-t></emu-gann>
        <emu-nt params="?Yield">LeftHandSideExpression</emu-nt>
        <emu-t>in</emu-t>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-t>)</emu-t>
        <emu-nt params="?Yield, ?Return">Statement</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>for</emu-t>
        <emu-t>(</emu-t>
        <emu-t>var</emu-t>
        <emu-nt params="?Yield">ForBinding</emu-nt>
        <emu-t>in</emu-t>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-t>)</emu-t>
        <emu-nt params="?Yield, ?Return">Statement</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>for</emu-t>
        <emu-t>(</emu-t>
        <emu-nt params="?Yield">ForDeclaration</emu-nt>
        <emu-t>in</emu-t>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-t>)</emu-t>
        <emu-nt params="?Yield, ?Return">Statement</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>for</emu-t>
        <emu-t>(</emu-t>
        <emu-gann>lookahead â‰  <emu-t>let</emu-t></emu-gann>
        <emu-nt params="?Yield">LeftHandSideExpression</emu-nt>
        <emu-t>of</emu-t>
        <emu-nt params="In, ?Yield">AssignmentExpression</emu-nt>
        <emu-t>)</emu-t>
        <emu-nt params="?Yield, ?Return">Statement</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>for</emu-t>
        <emu-t>(</emu-t>
        <emu-t>var</emu-t>
        <emu-nt params="?Yield">ForBinding</emu-nt>
        <emu-t>of</emu-t>
        <emu-nt params="In, ?Yield">AssignmentExpression</emu-nt>
        <emu-t>)</emu-t>
        <emu-nt params="?Yield, ?Return">Statement</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>for</emu-t>
        <emu-t>(</emu-t>
        <emu-nt params="?Yield">ForDeclaration</emu-nt>
        <emu-t>of</emu-t>
        <emu-nt params="In, ?Yield">AssignmentExpression</emu-nt>
        <emu-t>)</emu-t>
        <emu-nt params="?Yield, ?Return">Statement</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="ForDeclaration" params="Yield">
    <emu-rhs>
        <emu-nt>LetOrConst</emu-nt>
        <emu-nt params="?Yield">ForBinding</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="ForBinding" params="Yield">
    <emu-rhs><emu-nt params="?Yield">BindingIdentifier</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">BindingPattern</emu-nt></emu-rhs>
</emu-production>
<emu-production name="ContinueStatement" params="Yield">
    <emu-rhs>
        <emu-t>continue</emu-t>
        <emu-t>;</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>continue</emu-t>
        <emu-gann>no <emu-nt>LineTerminator</emu-nt> here</emu-gann>
        <emu-nt params="?Yield">LabelIdentifier</emu-nt>
        <emu-t>;</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="BreakStatement" params="Yield">
    <emu-rhs>
        <emu-t>break</emu-t>
        <emu-t>;</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>break</emu-t>
        <emu-gann>no <emu-nt>LineTerminator</emu-nt> here</emu-gann>
        <emu-nt params="?Yield">LabelIdentifier</emu-nt>
        <emu-t>;</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="ReturnStatement" params="Yield">
    <emu-rhs>
        <emu-t>return</emu-t>
        <emu-t>;</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>return</emu-t>
        <emu-gann>no <emu-nt>LineTerminator</emu-nt> here</emu-gann>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-t>;</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="WithStatement" params="Yield, Return">
    <emu-rhs>
        <emu-t>with</emu-t>
        <emu-t>(</emu-t>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-t>)</emu-t>
        <emu-nt params="?Yield, ?Return">Statement</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="SwitchStatement" params="Yield, Return">
    <emu-rhs>
        <emu-t>switch</emu-t>
        <emu-t>(</emu-t>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-t>)</emu-t>
        <emu-nt params="?Yield, ?Return">CaseBlock</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="CaseBlock" params="Yield, Return">
    <emu-rhs>
        <emu-t>{</emu-t>
        <emu-nt params="?Yield, ?Return" optional>CaseClauses</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>{</emu-t>
        <emu-nt params="?Yield, ?Return" optional>CaseClauses</emu-nt>
        <emu-nt params="?Yield, ?Return">DefaultClause</emu-nt>
        <emu-nt params="?Yield, ?Return" optional>CaseClauses</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="CaseClauses" params="Yield, Return">
    <emu-rhs><emu-nt params="?Yield, ?Return">CaseClause</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield, ?Return">CaseClauses</emu-nt>
        <emu-nt params="?Yield, ?Return">CaseClause</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="CaseClause" params="Yield, Return">
    <emu-rhs>
        <emu-t>case</emu-t>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-t>:</emu-t>
        <emu-nt params="?Yield, ?Return" optional>StatementList</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="DefaultClause" params="Yield, Return">
    <emu-rhs>
        <emu-t>default</emu-t>
        <emu-t>:</emu-t>
        <emu-nt params="?Yield, ?Return" optional>StatementList</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="LabelledStatement" params="Yield, Return">
    <emu-rhs>
        <emu-nt params="?Yield">LabelIdentifier</emu-nt>
        <emu-t>:</emu-t>
        <emu-nt params="?Yield, ?Return">LabelledItem</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="LabelledItem" params="Yield, Return">
    <emu-rhs><emu-nt params="?Yield, ?Return">Statement</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">FunctionDeclaration</emu-nt></emu-rhs>
</emu-production>
<emu-production name="ThrowStatement" params="Yield">
    <emu-rhs>
        <emu-t>throw</emu-t>
        <emu-gann>no <emu-nt>LineTerminator</emu-nt> here</emu-gann>
        <emu-nt params="In, ?Yield">Expression</emu-nt>
        <emu-t>;</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="TryStatement" params="Yield, Return">
    <emu-rhs>
        <emu-t>try</emu-t>
        <emu-nt params="?Yield, ?Return">Block</emu-nt>
        <emu-nt params="?Yield, ?Return">Catch</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>try</emu-t>
        <emu-nt params="?Yield, ?Return">Block</emu-nt>
        <emu-nt params="?Yield, ?Return">Finally</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>try</emu-t>
        <emu-nt params="?Yield, ?Return">Block</emu-nt>
        <emu-nt params="?Yield, ?Return">Catch</emu-nt>
        <emu-nt params="?Yield, ?Return">Finally</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="Catch" params="Yield, Return">
    <emu-rhs>
        <emu-t>catch</emu-t>
        <emu-t>(</emu-t>
        <emu-nt params="?Yield">CatchParameter</emu-nt>
        <emu-t>)</emu-t>
        <emu-nt params="?Yield, ?Return">Block</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="Finally" params="Yield, Return">
    <emu-rhs>
        <emu-t>finally</emu-t>
        <emu-nt params="?Yield, ?Return">Block</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="CatchParameter" params="Yield">
    <emu-rhs><emu-nt params="?Yield">BindingIdentifier</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">BindingPattern</emu-nt></emu-rhs>
</emu-production>
<emu-production name="DebuggerStatement">
    <emu-rhs>
        <emu-t>debugger</emu-t>
        <emu-t>;</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="FunctionDeclaration" params="Yield, Default">
    <emu-rhs>
        <emu-t>function</emu-t>
        <emu-nt params="?Yield">BindingIdentifier</emu-nt>
        <emu-t>(</emu-t>
        <emu-nt>FormalParameters</emu-nt>
        <emu-t>)</emu-t>
        <emu-t>{</emu-t>
        <emu-nt>FunctionBody</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
    <emu-rhs constraints="+Default">
        <emu-t>function</emu-t>
        <emu-t>(</emu-t>
        <emu-nt>FormalParameters</emu-nt>
        <emu-t>)</emu-t>
        <emu-t>{</emu-t>
        <emu-nt>FunctionBody</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="FunctionExpression">
    <emu-rhs>
        <emu-t>function</emu-t>
        <emu-nt optional>BindingIdentifier</emu-nt>
        <emu-t>(</emu-t>
        <emu-nt>FormalParameters</emu-nt>
        <emu-t>)</emu-t>
        <emu-t>{</emu-t>
        <emu-nt>FunctionBody</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="StrictFormalParameters" params="Yield">
    <emu-rhs><emu-nt params="?Yield">FormalParameters</emu-nt></emu-rhs>
</emu-production>
<emu-production name="FormalParameters" params="Yield">
    <emu-rhs><emu-gann>empty</emu-gann></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">FormalParameterList</emu-nt></emu-rhs>
</emu-production>
<emu-production name="FormalParameterList" params="Yield">
    <emu-rhs><emu-nt params="?Yield">FunctionRestParameter</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">FormalsList</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">FormalsList</emu-nt>
        <emu-t>,</emu-t>
        <emu-nt params="?Yield">FunctionRestParameter</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="FormalsList" params="Yield">
    <emu-rhs><emu-nt params="?Yield">FormalParameter</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">FormalsList</emu-nt>
        <emu-t>,</emu-t>
        <emu-nt params="?Yield">FormalParameter</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="FunctionRestParameter" params="Yield">
    <emu-rhs><emu-nt params="?Yield">BindingRestElement</emu-nt></emu-rhs>
</emu-production>
<emu-production name="FormalParameter" params="Yield">
    <emu-rhs><emu-nt params="?Yield">BindingElement</emu-nt></emu-rhs>
</emu-production>
<emu-production name="FunctionBody" params="Yield">
    <emu-rhs><emu-nt params="?Yield">FunctionStatementList</emu-nt></emu-rhs>
</emu-production>
<emu-production name="FunctionStatementList" params="Yield">
    <emu-rhs><emu-nt params="?Yield, Return" optional>StatementList</emu-nt></emu-rhs>
</emu-production>
<emu-production name="ArrowFunction" params="In, Yield">
    <emu-rhs>
        <emu-nt params="?Yield">ArrowParameters</emu-nt>
        <emu-gann>no <emu-nt>LineTerminator</emu-nt> here</emu-gann>
        <emu-t>=></emu-t>
        <emu-nt params="?In">ConciseBody</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="ArrowParameters" params="Yield">
    <emu-rhs><emu-nt params="?Yield">BindingIdentifier</emu-nt></emu-rhs>
    <emu-rhs><emu-nt params="?Yield">CoverParenthesizedExpressionAndArrowParameterList</emu-nt></emu-rhs>
</emu-production>
<emu-production name="ConciseBody" params="In">
    <emu-rhs>
        <emu-gann>lookahead â‰  <emu-t>{</emu-t></emu-gann>
        <emu-nt params="?In">AssignmentExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>{</emu-t>
        <emu-nt>FunctionBody</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="MethodDefinition" params="Yield">
    <emu-rhs>
        <emu-nt params="?Yield">PropertyName</emu-nt>
        <emu-t>(</emu-t>
        <emu-nt>StrictFormalParameters</emu-nt>
        <emu-t>)</emu-t>
        <emu-t>{</emu-t>
        <emu-nt>FunctionBody</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
    <emu-rhs><emu-nt params="?Yield">GeneratorMethod</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-t>get</emu-t>
        <emu-nt params="?Yield">PropertyName</emu-nt>
        <emu-t>(</emu-t>
        <emu-t>)</emu-t>
        <emu-t>{</emu-t>
        <emu-nt>FunctionBody</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>set</emu-t>
        <emu-nt params="?Yield">PropertyName</emu-nt>
        <emu-t>(</emu-t>
        <emu-nt>PropertySetParameterList</emu-nt>
        <emu-t>)</emu-t>
        <emu-t>{</emu-t>
        <emu-nt>FunctionBody</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="PropertySetParameterList">
    <emu-rhs><emu-nt>FormalParameter</emu-nt></emu-rhs>
</emu-production>
<emu-production name="GeneratorMethod" params="Yield">
    <emu-rhs>
        <emu-t>*</emu-t>
        <emu-nt params="?Yield">PropertyName</emu-nt>
        <emu-t>(</emu-t>
        <emu-nt params="Yield">StrictFormalParameters</emu-nt>
        <emu-t>)</emu-t>
        <emu-t>{</emu-t>
        <emu-nt>GeneratorBody</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="GeneratorDeclaration" params="Yield, Default">
    <emu-rhs>
        <emu-t>function</emu-t>
        <emu-t>*</emu-t>
        <emu-nt params="?Yield">BindingIdentifier</emu-nt>
        <emu-t>(</emu-t>
        <emu-nt params="Yield">FormalParameters</emu-nt>
        <emu-t>)</emu-t>
        <emu-t>{</emu-t>
        <emu-nt>GeneratorBody</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
    <emu-rhs constraints="+Default">
        <emu-t>function</emu-t>
        <emu-t>*</emu-t>
        <emu-t>(</emu-t>
        <emu-nt params="Yield">FormalParameters</emu-nt>
        <emu-t>)</emu-t>
        <emu-t>{</emu-t>
        <emu-nt>GeneratorBody</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="GeneratorExpression">
    <emu-rhs>
        <emu-t>function</emu-t>
        <emu-t>*</emu-t>
        <emu-nt params="Yield" optional>BindingIdentifier</emu-nt>
        <emu-t>(</emu-t>
        <emu-nt params="Yield">FormalParameters</emu-nt>
        <emu-t>)</emu-t>
        <emu-t>{</emu-t>
        <emu-nt>GeneratorBody</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="GeneratorBody">
    <emu-rhs><emu-nt params="Yield">FunctionBody</emu-nt></emu-rhs>
</emu-production>
<emu-production name="YieldExpression" params="In">
    <emu-rhs><emu-t>yield</emu-t></emu-rhs>
    <emu-rhs>
        <emu-t>yield</emu-t>
        <emu-gann>no <emu-nt>LineTerminator</emu-nt> here</emu-gann>
        <emu-nt params="?In, Yield">AssignmentExpression</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>yield</emu-t>
        <emu-gann>no <emu-nt>LineTerminator</emu-nt> here</emu-gann>
        <emu-t>*</emu-t>
        <emu-nt params="?In, Yield">AssignmentExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="ClassDeclaration" params="Yield, Default">
    <emu-rhs>
        <emu-t>class</emu-t>
        <emu-nt params="?Yield">BindingIdentifier</emu-nt>
        <emu-nt params="?Yield">ClassTail</emu-nt>
    </emu-rhs>
    <emu-rhs constraints="+Default">
        <emu-t>class</emu-t>
        <emu-nt params="?Yield">ClassTail</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="ClassExpression" params="Yield">
    <emu-rhs>
        <emu-t>class</emu-t>
        <emu-nt params="?Yield" optional>BindingIdentifier</emu-nt>
        <emu-nt params="?Yield">ClassTail</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="ClassTail" params="Yield">
    <emu-rhs>
        <emu-nt params="?Yield" optional>ClassHeritage</emu-nt>
        <emu-t>{</emu-t>
        <emu-nt params="?Yield" optional>ClassBody</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="ClassHeritage" params="Yield">
    <emu-rhs>
        <emu-t>extends</emu-t>
        <emu-nt params="?Yield">LeftHandSideExpression</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="ClassBody" params="Yield">
    <emu-rhs><emu-nt params="?Yield">ClassElementList</emu-nt></emu-rhs>
</emu-production>
<emu-production name="ClassElementList" params="Yield">
    <emu-rhs><emu-nt params="?Yield">ClassElement</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt params="?Yield">ClassElementList</emu-nt>
        <emu-nt params="?Yield">ClassElement</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="ClassElement" params="Yield">
    <emu-rhs><emu-nt params="?Yield">MethodDefinition</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-t>static</emu-t>
        <emu-nt params="?Yield">MethodDefinition</emu-nt>
    </emu-rhs>
    <emu-rhs><emu-t>;</emu-t></emu-rhs>
</emu-production>
<emu-production name="Script">
    <emu-rhs><emu-nt optional>ScriptBody</emu-nt></emu-rhs>
</emu-production>
<emu-production name="ScriptBody">
    <emu-rhs><emu-nt>StatementList</emu-nt></emu-rhs>
</emu-production>
<emu-production name="Module">
    <emu-rhs><emu-nt optional>ModuleBody</emu-nt></emu-rhs>
</emu-production>
<emu-production name="ModuleBody">
    <emu-rhs><emu-nt>ModuleItemList</emu-nt></emu-rhs>
</emu-production>
<emu-production name="ModuleItemList">
    <emu-rhs><emu-nt>ModuleItem</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt>ModuleItemList</emu-nt>
        <emu-nt>ModuleItem</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="ModuleItem">
    <emu-rhs><emu-nt>ImportDeclaration</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>ExportDeclaration</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>StatementListItem</emu-nt></emu-rhs>
</emu-production>
<emu-production name="ImportDeclaration">
    <emu-rhs>
        <emu-t>import</emu-t>
        <emu-nt>ImportClause</emu-nt>
        <emu-nt>FromClause</emu-nt>
        <emu-t>;</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>import</emu-t>
        <emu-nt>ModuleSpecifier</emu-nt>
        <emu-t>;</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="ImportClause">
    <emu-rhs><emu-nt>ImportedDefaultBinding</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>NameSpaceImport</emu-nt></emu-rhs>
    <emu-rhs><emu-nt>NamedImports</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt>ImportedDefaultBinding</emu-nt>
        <emu-t>,</emu-t>
        <emu-nt>NameSpaceImport</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-nt>ImportedDefaultBinding</emu-nt>
        <emu-t>,</emu-t>
        <emu-nt>NamedImports</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="ImportedDefaultBinding">
    <emu-rhs><emu-nt>ImportedBinding</emu-nt></emu-rhs>
</emu-production>
<emu-production name="NameSpaceImport">
    <emu-rhs>
        <emu-t>*</emu-t>
        <emu-t>as</emu-t>
        <emu-nt>ImportedBinding</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="NamedImports">
    <emu-rhs>
        <emu-t>{</emu-t>
        <emu-t>}</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>{</emu-t>
        <emu-nt>ImportsList</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>{</emu-t>
        <emu-nt>ImportsList</emu-nt>
        <emu-t>,</emu-t>
        <emu-t>}</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="FromClause">
    <emu-rhs>
        <emu-t>from</emu-t>
        <emu-nt>ModuleSpecifier</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="ImportsList">
    <emu-rhs><emu-nt>ImportSpecifier</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt>ImportsList</emu-nt>
        <emu-t>,</emu-t>
        <emu-nt>ImportSpecifier</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="ImportSpecifier">
    <emu-rhs><emu-nt>ImportedBinding</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt>IdentifierName</emu-nt>
        <emu-t>as</emu-t>
        <emu-nt>ImportedBinding</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="ModuleSpecifier">
    <emu-rhs><emu-nt>StringLiteral</emu-nt></emu-rhs>
</emu-production>
<emu-production name="ImportedBinding">
    <emu-rhs><emu-nt>BindingIdentifier</emu-nt></emu-rhs>
</emu-production>
<emu-production name="ExportDeclaration">
    <emu-rhs>
        <emu-t>export</emu-t>
        <emu-t>*</emu-t>
        <emu-nt>FromClause</emu-nt>
        <emu-t>;</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>export</emu-t>
        <emu-nt>ExportClause</emu-nt>
        <emu-nt>FromClause</emu-nt>
        <emu-t>;</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>export</emu-t>
        <emu-nt>ExportClause</emu-nt>
        <emu-t>;</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>export</emu-t>
        <emu-nt>VariableStatement</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>export</emu-t>
        <emu-nt>Declaration</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>export</emu-t>
        <emu-t>default</emu-t>
        <emu-nt params="Default">HoistableDeclaration</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>export</emu-t>
        <emu-t>default</emu-t>
        <emu-nt params="Default">ClassDeclaration</emu-nt>
    </emu-rhs>
    <emu-rhs>
        <emu-t>export</emu-t>
        <emu-t>default</emu-t>
        <emu-gann>lookahead âˆ‰ <emu-t>function</emu-t><emu-t>class</emu-t></emu-gann>
        <emu-nt params="In">AssignmentExpression</emu-nt>
        <emu-t>;</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="ExportClause">
    <emu-rhs>
        <emu-t>{</emu-t>
        <emu-t>}</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>{</emu-t>
        <emu-nt>ExportsList</emu-nt>
        <emu-t>}</emu-t>
    </emu-rhs>
    <emu-rhs>
        <emu-t>{</emu-t>
        <emu-nt>ExportsList</emu-nt>
        <emu-t>,</emu-t>
        <emu-t>}</emu-t>
    </emu-rhs>
</emu-production>
<emu-production name="ExportsList">
    <emu-rhs><emu-nt>ExportSpecifier</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt>ExportsList</emu-nt>
        <emu-t>,</emu-t>
        <emu-nt>ExportSpecifier</emu-nt>
    </emu-rhs>
</emu-production>
<emu-production name="ExportSpecifier">
    <emu-rhs><emu-nt>IdentifierName</emu-nt></emu-rhs>
    <emu-rhs>
        <emu-nt>IdentifierName</emu-nt>
        <emu-t>as</emu-t>
        <emu-nt>IdentifierName</emu-nt>
    </emu-rhs>
</emu-production>