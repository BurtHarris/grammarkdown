/// [Scanner]test.grammar:
SyntaxKind[Identifier](1,1): A
SyntaxKind[ColonToken](1,3): :
SyntaxKind[Identifier](1,5): A
SyntaxKind[FirstPunctuation](1,7): @
SyntaxKind[Identifier](1,9): A
SyntaxKind[LineTerminatorToken](2,1): «line terminator»
SyntaxKind[Identifier](2,1): B
SyntaxKind[ColonToken](2,3): :
SyntaxKind[Identifier](2,5): A
SyntaxKind[FirstKeyword](2,9): but
SyntaxKind[NotKeyword](2,13): not
SyntaxKind[OneKeyword](2,17): one
SyntaxKind[OfKeyword](2,21): of
SyntaxKind[Terminal](2,24): `"`
SyntaxKind[OrKeyword](2,28): or
SyntaxKind[Terminal](2,31): `\`
SyntaxKind[OrKeyword](2,35): or
SyntaxKind[UnicodeCharacterLiteral](2,38): U+0000
SyntaxKind[LastKeyword](2,45): through
SyntaxKind[UnicodeCharacterLiteral](2,53): U+001F
SyntaxKind[LineTerminatorToken](3,1): «line terminator»
SyntaxKind[LineTerminatorToken](4,1): «line terminator»
SyntaxKind[Identifier](4,1): C
SyntaxKind[ColonToken](4,3): :
SyntaxKind[Identifier](4,5): A
SyntaxKind[OpenBracketGreaterThanToken](4,7): [>
SyntaxKind[ProseFull](4,9): full prose span
SyntaxKind[CloseBracketToken](4,24): ]
SyntaxKind[LineTerminatorToken](5,1): «line terminator»
SyntaxKind[Identifier](5,1): C
SyntaxKind[ColonToken](5,3): :
SyntaxKind[Identifier](5,5): A
SyntaxKind[OpenBracketGreaterThanToken](5,7): [>
SyntaxKind[FirstProseFragment](5,9): head 
SyntaxKind[Terminal](5,14): `terminal`
SyntaxKind[ProseMiddle](5,24):  middle 
SyntaxKind[Identifier](5,32): B
SyntaxKind[LastProseFragment](5,35):  tail
SyntaxKind[CloseBracketToken](5,40): ]
SyntaxKind[EndOfFileToken](5,41): «EndOfFileToken»
