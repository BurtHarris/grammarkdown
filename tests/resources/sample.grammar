#define @lexical (separator = "::")
#import "grammar-lexical.grammar" as @lexical

WhileStatement:
    `while` `(` Expression `)` Statement

ArgumentList:
    AssignmentExpression
    ArgumentList `,` AssignmentExpression

IterationStatement:
    `for` `(` LexicalDeclaration `;` Expression? `;` Expression? `)` Statement

@lexical Identifier:
    IdentifierName but not ReservedWord

@lexical SourceCharacter:
    <any Unicode code point>

ExpressionStatement(Yield):
    [lookahead <! { `function`, `class`, `let` }] Foo

@lexical DecimalDigit: one of `1` `2` `3` `4` `5` `6` `7` `8` `9` `0`

StatementList(Return, In, Yield):
    [~Return] ReturnStatement
    ExpressionStatement

@lexical SingleStringCharacter:
    SourceCharacter but not one of `'` or `\\` or LineTerminator
